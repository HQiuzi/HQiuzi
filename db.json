{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/yun/source/Yun.png","path":"Yun.png","modified":0,"renderable":1},{"_id":"themes/yun/source/yun.ico","path":"yun.ico","modified":0,"renderable":1},{"_id":"themes/yun/source/yun.svg","path":"yun.svg","modified":0,"renderable":1},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","path":"css/hexo-theme-yun.styl","modified":0,"renderable":1},{"_id":"themes/yun/source/js/gallery-decrypt.js","path":"js/gallery-decrypt.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/hexo-theme-yun.js","path":"js/hexo-theme-yun.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/pjax.js","path":"js/pjax.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/say.js","path":"js/say.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/sidebar.js","path":"js/sidebar.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/comments/disqus.js","path":"js/comments/disqus.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/search/algolia-search.js","path":"js/search/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/analytics/leancloud-visitors.js","path":"js/analytics/leancloud-visitors.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/ui/fireworks.js","path":"js/ui/fireworks.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/ui/mode.js","path":"js/ui/mode.js","modified":0,"renderable":1},{"_id":"themes/yun/source/js/ui/banner.js","path":"js/ui/banner.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/style/banner.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1627277680915},{"_id":"source/_data/yun.yml","hash":"16bb4d11d1f1dc7f45307f584257c2d6c9cb8483","modified":1629174857563},{"_id":"source/_posts/2021-07-26-小学期建造游戏Demo开发笔记（一）.md","hash":"3aa50358867efe0a9ffd969dd7cb608adad833a6","modified":1629126519044},{"_id":"source/_posts/2021-07-26-日记.md","hash":"30cb2e0c7659372c24e79c2fbba0a8538034d705","modified":1627405691718},{"_id":"source/_posts/2021-07-26-第一篇博客.md","hash":"7c0bbd3886f7517be2561150ba03abc1a56ea9ce","modified":1628419755872},{"_id":"source/_posts/2021-08-06-小学期建造游戏Demo开发笔记（二）.md","hash":"839da134c31e2a19d8c14bd49dd099f266dead86","modified":1629022347380},{"_id":"source/_posts/2021-07-30-3d辅助作画尝试.md","hash":"83800272624a224849b6218b497b13d5b80b25f1","modified":1628416885561},{"_id":"source/about/index.md","hash":"9d2b3f20368833a65384b21d124af43cb49737ca","modified":1627285837466},{"_id":"source/_posts/2021-08-06-快捷键等小tips.md","hash":"3cba0675d2797ce3d4080798ad076f448df29b42","modified":1628689937775},{"_id":"source/categories/index.md","hash":"4a6bb7458e4f72ffbe36da784a88e49c497ec645","modified":1627310718141},{"_id":"source/albums/concert.md","hash":"d4db3079724ee8ee2db5be7729d7c7d809301d18","modified":1627289498283},{"_id":"source/albums/index.md","hash":"d21af736dedcca620a16b51022cefcfc6e802113","modified":1627289388833},{"_id":"source/tags/index.md","hash":"d53e834941150d77670355ba4e08a88a2eaf9beb","modified":1627317559667},{"_id":"source/albums/yms.md","hash":"3ee00be290d68c1fb775fb6fbeed5f81b9979c2a","modified":1627287706508},{"_id":"source/_data/style/sidebar.styl","hash":"427465be82df63ccb88a25938213f3ea11531c95","modified":1627250518137},{"_id":"themes/yun/.eslintrc.js","hash":"ba8a899820888efce3741d4daf21f99291998ec1","modified":1627242978429},{"_id":"themes/yun/.gitignore","hash":"eff49494f374c44c21ce6012dd9bc73f9c1fb591","modified":1627242978457},{"_id":"themes/yun/LICENSE","hash":"fa221ceba871b104543fa698b80750fc19552fd2","modified":1627242978458},{"_id":"themes/yun/README.md","hash":"297a89f392af0ddcd3a958c329b699013eed7e4f","modified":1627242978458},{"_id":"themes/yun/_config.yml","hash":"2fc58050261bd030aad14b2cd63d636722ebf0ad","modified":1627281540058},{"_id":"themes/yun/_vendors.yml","hash":"87fe6521ec79c6970f52709fb01cc5a443bd149f","modified":1627242978470},{"_id":"themes/yun/package.json","hash":"365530fc2d10ab49d8366ede812b4ac971eff77d","modified":1627242978576},{"_id":"themes/yun/tsconfig.json","hash":"e075aed161843d2cdf3b58fc84940bfb5b1b0286","modified":1627242978634},{"_id":"themes/yun/.github/FUNDING.yml","hash":"2c7dd51870c178dd679cb5221b57b853167b55a9","modified":1627242978430},{"_id":"themes/yun/data/_comments.yml","hash":"21116cde2a4024e41f1f53ba32077759069f41ca","modified":1627242978471},{"_id":"themes/yun/docs/README.md","hash":"428e385ec211f79a95c5dd2d51fe2e23a849a253","modified":1627242978504},{"_id":"themes/yun/languages/default.yml","hash":"3866a13fe896b4c5d46541c5cab1f7e61453df19","modified":1627242978526},{"_id":"themes/yun/languages/en.yml","hash":"11c482bee3bda200125392c607a0bddc0f74f552","modified":1627242978526},{"_id":"themes/yun/languages/ja.yml","hash":"18ab694a0c64f4c0e53b570495625901e883df24","modified":1627242978528},{"_id":"themes/yun/languages/zh-CN.yml","hash":"ef5675e4e6f4a42251ac1a08c4fd5f46d5e27a1f","modified":1627242978529},{"_id":"themes/yun/layout/404.pug","hash":"9a158dd3f74a32008a7450522a7da39c4ae6abb7","modified":1627242978530},{"_id":"themes/yun/layout/archive.pug","hash":"fcbd3bee3e2dc053170888d77de007ec330443be","modified":1627242978571},{"_id":"themes/yun/layout/gallery.pug","hash":"80bc2502412d7e28405b9d79d93c8d619c31ae4f","modified":1627242978573},{"_id":"themes/yun/layout/category.pug","hash":"fc234721ac03d519dbdf39675af5a86e0b6db2e8","modified":1627242978572},{"_id":"themes/yun/layout/girls.pug","hash":"1ffe8e69a5c20cf0c34c8001f291f014beb5762c","modified":1627242978573},{"_id":"themes/yun/layout/index.pug","hash":"72ce130efc06d107d5244e54d62bd533abe88bff","modified":1627242978574},{"_id":"themes/yun/layout/page.pug","hash":"0b7e8fd201b88056f66a3f6a06884cb8eba71b16","modified":1627242978574},{"_id":"themes/yun/layout/links.pug","hash":"b752504e651dcf35003edbe22700098b25d5c160","modified":1627242978574},{"_id":"themes/yun/layout/post.pug","hash":"d5ffdbd47d39eb302872c2e17d7bc46194160e44","modified":1627242978575},{"_id":"themes/yun/layout/slide.pug","hash":"5374bcfaddfdfa0feb05b3829c0cfa0d7939cf7f","modified":1627242978575},{"_id":"themes/yun/layout/tag.pug","hash":"f1c2ae57b62f6a0c6fcc91a1270b5bf328ca2421","modified":1627242978576},{"_id":"themes/yun/source/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1627242978589},{"_id":"themes/yun/source/yun.ico","hash":"5d63418cd650d1881d4b6507f35b9f9df766020e","modified":1627242978633},{"_id":"themes/yun/source/yun.svg","hash":"78218ba93f0150e3613c7d0b60575ebe6131255f","modified":1627242978634},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/feature_request.md","hash":"57972849d8dc6fa63a6a0b4a2c7bbe4649c0843a","modified":1627242978447},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/bug_report.md","hash":"9a960b4706d17aed9ec9be4f71716130469d55b4","modified":1627242978446},{"_id":"themes/yun/.github/ISSUE_TEMPLATE/usage_problem.md","hash":"b41af96573f4b7b1c4492e8fc014685537ccbce8","modified":1627242978447},{"_id":"themes/yun/.github/workflows/docs.yml","hash":"d0762ef6861ce5a576251003494a0944931b1cfa","modified":1627242978457},{"_id":"themes/yun/docs/.vuepress/config.ts","hash":"abc3a1178c07ced1878202c4f890b4a19f03b2be","modified":1627242978480},{"_id":"themes/yun/docs/demo/README.md","hash":"40afcba7990cef22a5cfedf1f558b350414d90f9","modified":1627242978506},{"_id":"themes/yun/docs/en/README.md","hash":"c69223c1a8fa97e73344f3947a9871bd9c6cdc29","modified":1627242978508},{"_id":"themes/yun/docs/about/README.md","hash":"b069cc513b830fd6c17fb4ebde63601ca27539eb","modified":1627242978505},{"_id":"themes/yun/docs/about/icon.md","hash":"118b2a8ba9453b6639917e9e96e9ae54eaa8cee2","modified":1627242978506},{"_id":"themes/yun/docs/guide/README.md","hash":"6ec149ec07c3b8fd9cd1d65d451338afe883681d","modified":1627242978521},{"_id":"themes/yun/docs/guide/additional-package-support.md","hash":"20c7fcedb4ce2705c86f6e86b4b418e407475a93","modified":1627242978521},{"_id":"themes/yun/docs/guide/config.md","hash":"0fd2414e8aebacb90ec77c6fe6c527508a3d4739","modified":1627242978522},{"_id":"themes/yun/docs/guide/migrate.md","hash":"5fe91b4c8c3c87eb72f6555dba5aa96faf17e87b","modified":1627242978523},{"_id":"themes/yun/docs/guide/faq.md","hash":"caf23698ff982fedbb00f59e0f6580b8067d1806","modified":1627242978522},{"_id":"themes/yun/docs/guide/page.md","hash":"9354301591f3994649b15594846be9635f37e599","modified":1627242978524},{"_id":"themes/yun/docs/guide/third-party-support.md","hash":"1f72314664185c08a98907528fa55a8a5a736750","modified":1627242978525},{"_id":"themes/yun/scripts/events/config.js","hash":"82b7eab0787aff932f5e97047fd6c9b9692956de","modified":1627242978579},{"_id":"themes/yun/scripts/events/data.js","hash":"c041d3bdf16318a377b3224cb9aea655380efecc","modified":1627242978580},{"_id":"themes/yun/scripts/events/index.js","hash":"45abc9b50cc4c10b2bbda1788233bdb3017a0715","modified":1627242978580},{"_id":"themes/yun/scripts/events/utils.js","hash":"0a3af6b400ed7e86b3b83d49dd1fdb868563c2a1","modified":1627242978581},{"_id":"themes/yun/scripts/helpers/encrypt.js","hash":"e3e0cd73a5bf0413a9e8fe96b1622f40c2c1db50","modified":1627242978583},{"_id":"themes/yun/scripts/helpers/engine.js","hash":"9b41629b73dc5bbc18772b292a029531bfd2beca","modified":1627242978584},{"_id":"themes/yun/scripts/helpers/index.js","hash":"1b0d52542255837702cdc41d3885c349c5be5873","modified":1627242978587},{"_id":"themes/yun/scripts/helpers/yun-config.js","hash":"5018b34f22241cf01a0639dd212058f04994d6dd","modified":1627242978588},{"_id":"themes/yun/scripts/filters/index.js","hash":"ca5ef23cec64ac3fc53aae702a8684a53d98f71c","modified":1627242978582},{"_id":"themes/yun/scripts/tags/prompt.js","hash":"621d0fa41d15e5617b8a25dd7625c8e5691b35b6","modified":1627242978589},{"_id":"themes/yun/layout/_mixin/icon.pug","hash":"18ee2c33b4e6ef71c31d7955f9a20789fe6aa9e4","modified":1627242978532},{"_id":"themes/yun/layout/_mixin/page-header.pug","hash":"56771304fc062882fcb83b3a57036cb12a6d2dab","modified":1627242978532},{"_id":"themes/yun/layout/_mixin/index.pug","hash":"3c6964b4594e842e2aefcd316bdd0184750b40f1","modified":1627242978532},{"_id":"themes/yun/layout/_mixin/post-categories.pug","hash":"ee645a5c54c279e2346b7ba9f629efab61314026","modified":1627242978533},{"_id":"themes/yun/layout/_mixin/post-collapse.pug","hash":"741195a5a29ecb5863b1fd0c3b203d960aae05c1","modified":1627242978534},{"_id":"themes/yun/layout/_mixin/post-tags.pug","hash":"10eec5c3dad74e73a2ee9c05434e4757c080fcb5","modified":1627242978534},{"_id":"themes/yun/layout/_partial/banner.pug","hash":"4aadc9256c07914cb16dd98ab63a56a2e33aabb8","modified":1627242978536},{"_id":"themes/yun/layout/_partial/background.pug","hash":"d0995a2e840ac2698df3e45f9c6ee7eccdf94f9a","modified":1627242978536},{"_id":"themes/yun/layout/_partial/footer.pug","hash":"d75a31959f81b3d4b80c85e946a8f3085cb7a3c8","modified":1627242978536},{"_id":"themes/yun/layout/_partial/head.pug","hash":"ff6c41e56519c84d044a3339f2deb43dc26aa4e1","modified":1627242978537},{"_id":"themes/yun/layout/_partial/layout.pug","hash":"3ec3dcca9697edbe868c791d4f28957012755d06","modified":1627242978538},{"_id":"themes/yun/layout/_partial/pagination.pug","hash":"b55b6a99b105447b4a6c982fa258680a2a9a34a9","modified":1627242978538},{"_id":"themes/yun/layout/_partial/recent-posts.pug","hash":"8e9438e8cf95cf544a674e6b6bdf5cdd76e63b61","modified":1627242978542},{"_id":"themes/yun/layout/_partial/sidebar.pug","hash":"c4ef88a4bce0d7c2ac315c03eb5a64a70ebb644d","modified":1627242978543},{"_id":"themes/yun/layout/_third-party/aplayer.pug","hash":"93d2be35ae9731056563d3cbdbf7b13b1933c80c","modified":1627242978550},{"_id":"themes/yun/layout/_third-party/cdn.pug","hash":"53982879ad13077c198857034e21201517923a98","modified":1627242978550},{"_id":"themes/yun/layout/_third-party/google-tagmanager.pug","hash":"4760e37fb37a41ef1417a427c0168c5fc5dd2ee6","modified":1627242978557},{"_id":"themes/yun/layout/_third-party/index.pug","hash":"f6275c094349839c5af019e8a7f3f394ba0339bd","modified":1627242978558},{"_id":"themes/yun/layout/_third-party/lightgallery.pug","hash":"63d2d1c4f55ea15fe8399bfe5da953581dd7a4b6","modified":1627242978559},{"_id":"themes/yun/layout/_third-party/pjax.pug","hash":"f72620c6b56183d1061295b881b4738eeb49ab7f","modified":1627242978562},{"_id":"themes/yun/layout/_widget/aplayer.pug","hash":"0a5ff8bc629ccd7c0e04664647bfff7fec152229","modified":1627242978565},{"_id":"themes/yun/layout/_widget/back-to-top.pug","hash":"4c880afb3213395fb64e8a6a4fc3b653bb82b938","modified":1627242978565},{"_id":"themes/yun/layout/_widget/index.pug","hash":"96d4a92e258688b17328d4470bacaabaccace67c","modified":1627242978566},{"_id":"themes/yun/layout/_widget/cloud.pug","hash":"eb3185db30fef0303b667e50b96a7d85edda8006","modified":1627242978565},{"_id":"themes/yun/layout/_widget/mourn.pug","hash":"49eb1ebdb67c0529f00474bba2f99e87b8407266","modified":1627242978567},{"_id":"themes/yun/layout/_widget/notice.pug","hash":"346ada39ba6586cb631ac5b1f129683f3ee015f4","modified":1627242978567},{"_id":"themes/yun/layout/_widget/say.pug","hash":"2f32b3933b62d285eabb08af6ceaf02ba29a5eae","modified":1627242978568},{"_id":"themes/yun/source/css/hexo-theme-yun.styl","hash":"8dc5e0e8a566debaf3b7299907924fc3cc79a6e4","modified":1627242978623},{"_id":"themes/yun/source/js/gallery-decrypt.js","hash":"0fdfe233d36b93ea4309040f4a254c3a48e4f3e6","modified":1627242978626},{"_id":"themes/yun/source/js/hexo-theme-yun.js","hash":"53b38073a4069c2baf6fd2ba5e3a435fadb2bc4f","modified":1627242978626},{"_id":"themes/yun/source/js/pjax.js","hash":"dbdf52e28d17374bc5bd2cf7cc57ae625a65a70d","modified":1627242978627},{"_id":"themes/yun/source/js/say.js","hash":"b44b3730d7167bbc2c33e5b154a7bb5d936b7710","modified":1627278295900},{"_id":"themes/yun/source/js/sidebar.js","hash":"454f38ec93a7629837e21ae8fb09f8f09fed8a90","modified":1627242978631},{"_id":"themes/yun/source/js/utils.js","hash":"61de0f1ff9fcf1bf64cec20d9e9c05b1d111bc92","modified":1627242978633},{"_id":"themes/yun/docs/.vuepress/components/DemoSites.vue","hash":"2b9d705750ee663210168347c32c55eb1e019062","modified":1627242978477},{"_id":"themes/yun/docs/.vuepress/components/DemoSite.vue","hash":"705e7ad2047e24ecb3221a0f9389eed966239aba","modified":1627242978476},{"_id":"themes/yun/docs/.vuepress/components/DisplayIcon.vue","hash":"c2177efd18926a526071afd4af06b0cf1d7b7cbf","modified":1627242978479},{"_id":"themes/yun/docs/.vuepress/assets/README.md","hash":"aa4ab3ddd73a3cf356bcb79a77c57c0dcfe2fada","modified":1627242978474},{"_id":"themes/yun/docs/.vuepress/assets/icons.json","hash":"63b421ead217b5eb14cdcaaa1aa2263fb4c8e9d2","modified":1627242978475},{"_id":"themes/yun/docs/.vuepress/assets/sites.json","hash":"56976a33ec89a7b5841e0cb6dc596c1ff83f48d2","modified":1627242978476},{"_id":"themes/yun/docs/.vuepress/scripts/generate-demo.js","hash":"d0b1d113e7cda000c805efe2824a0146bf368c5e","modified":1627242978500},{"_id":"themes/yun/docs/.vuepress/scripts/index.js","hash":"c61b839368e3fa7bb7292b21446e145b2b8ecd23","modified":1627242978500},{"_id":"themes/yun/docs/.vuepress/scripts/markdown.js","hash":"740f5a1cca2843d9d0ae3c2ff91cbeab04500730","modified":1627242978501},{"_id":"themes/yun/docs/.vuepress/public/CNAME","hash":"c7ffe7d5488a88dfa38ef3780292c22088d5e8ce","modified":1627242978486},{"_id":"themes/yun/docs/.vuepress/styles/index.scss","hash":"ab7b5bb51a39abfa2a23c875af9d1beb4059b7fb","modified":1627242978502},{"_id":"themes/yun/docs/.vuepress/public/logo.gif","hash":"a2e7143f1f890f58a3c06b8c0acd7a7a3225022f","modified":1627242978497},{"_id":"themes/yun/docs/.vuepress/public/yun.svg","hash":"78218ba93f0150e3613c7d0b60575ebe6131255f","modified":1627242978498},{"_id":"themes/yun/docs/.vuepress/public/manifest.json","hash":"9eee8d68bc3b6afa3e22ef4fd02d3bd09c707e1f","modified":1627242978498},{"_id":"themes/yun/docs/.vuepress/styles/palette.styl","hash":"25a57ac820b471bc91c151347a1c1d0cc62767d6","modified":1627242978503},{"_id":"themes/yun/docs/.vuepress/types/index.ts","hash":"7539a35c7deab9c0207569c1cd90b5bb0e381851","modified":1627242978504},{"_id":"themes/yun/docs/en/about/README.md","hash":"45acb0c1830d34c8c23e790670c31f00eef52de9","modified":1627242978509},{"_id":"themes/yun/docs/en/demo/README.md","hash":"a4f3c6174142bb986953dca953402f294f005890","modified":1627242978511},{"_id":"themes/yun/docs/en/guide/README.md","hash":"6e3365ecfe54d513bf9dbdd2da2702c831d7d4b6","modified":1627242978513},{"_id":"themes/yun/docs/en/about/icon.md","hash":"eca142f28f2bd9f7019c39c6cfcc92650c21ed70","modified":1627242978509},{"_id":"themes/yun/docs/en/guide/additional-package-support.md","hash":"b0b9ca67462eb8b3e580c0dfbdc63f725dca590b","modified":1627242978514},{"_id":"themes/yun/docs/en/guide/config.md","hash":"525fe73429074defc00cef163a6d66fb102720dd","modified":1627242978515},{"_id":"themes/yun/docs/en/guide/faq.md","hash":"b4630278cb17266b1727354ae7b5786c963345cb","modified":1627242978516},{"_id":"themes/yun/docs/en/guide/page.md","hash":"02718f061b22f7a1506623c426eb2553860cfede","modified":1627242978517},{"_id":"themes/yun/docs/en/guide/third-party-support.md","hash":"c129956235e081689947ed33a56103fe42efd4d8","modified":1627242978520},{"_id":"themes/yun/layout/_partial/post/post-copyright.pug","hash":"a2415fb36a0dffbe57bf32cd2cfeace11cbaed6b","modified":1627242978539},{"_id":"themes/yun/layout/_partial/post/post-meta.pug","hash":"9aebdcdea704842b010a0e34073c6bb864cf9515","modified":1627242978540},{"_id":"themes/yun/layout/_partial/post/post-edit.pug","hash":"2b7d4c210815ddc63c5b6fc5b5fd6a348e75093f","modified":1627242978540},{"_id":"themes/yun/layout/_partial/post/post-nav.pug","hash":"ea351236ab82ff43b66272de1baade70d868131f","modified":1627242978540},{"_id":"themes/yun/layout/_partial/post/post-schema.pug","hash":"ec85079174da20c9f608b142e7fda2c28a9b1dac","modified":1627242978541},{"_id":"themes/yun/layout/_partial/post/reward.pug","hash":"f19b6562f1df71c23dafed15f2f3c9415414e281","modified":1627242978542},{"_id":"themes/yun/layout/_partial/sidebar/info.pug","hash":"db26c881a5d8c8e2d96c2e5598e9c3c40d135cdf","modified":1627242978544},{"_id":"themes/yun/layout/_third-party/analytics/busuanzi.pug","hash":"d606071c4c4f1e0df9f55fa6c8e248eb2591c484","modified":1627242978548},{"_id":"themes/yun/layout/_third-party/analytics/google-analytics.pug","hash":"3533cdc143c0b9b4304e375e0a1d2527050d989a","modified":1627242978549},{"_id":"themes/yun/layout/_third-party/adsense/google-adsense.pug","hash":"ae63305d776ebec0d88f91197b5c78cdaa401585","modified":1627242978547},{"_id":"themes/yun/layout/_third-party/analytics/leancloud-visitors.pug","hash":"b837ea28a4b0e81a3f584eee2e7b7ce69c8befc6","modified":1627242978549},{"_id":"themes/yun/layout/_third-party/comments/disqus.pug","hash":"5bfe34b45242487d9ab8e5bc97d8b0371658df8a","modified":1627242978551},{"_id":"themes/yun/layout/_third-party/comments/disqusjs.pug","hash":"54613c0acf1b57da6591c505944a0848f7696032","modified":1627242978552},{"_id":"themes/yun/layout/_third-party/comments/github-discussions.pug","hash":"1b559cbb7bcd1d423eab9d9a2ffdb8b7ebbbcea4","modified":1627242978552},{"_id":"themes/yun/layout/_third-party/comments/github-issues.pug","hash":"11801bd330160555dbaf3ef13955ebd61010c7d6","modified":1627242978553},{"_id":"themes/yun/layout/_third-party/comments/index.pug","hash":"536ce0c65ccc1753858427f25a767f812ef75972","modified":1627242978553},{"_id":"themes/yun/layout/_third-party/comments/livere.pug","hash":"f565efde0ee74d69555e8b5c959c96e0f1ae61fb","modified":1627242978554},{"_id":"themes/yun/layout/_third-party/comments/minivaline.pug","hash":"0548263c9f0460916aaeaf77928d27612c1a2897","modified":1627242978555},{"_id":"themes/yun/layout/_third-party/comments/twikoo.pug","hash":"719ecaa5b6d166ae0ef0adafc37136e1346379d6","modified":1627242978555},{"_id":"themes/yun/layout/_third-party/comments/utterances.pug","hash":"44adb592fa4995ff586b6b4ff16232323473992a","modified":1627242978556},{"_id":"themes/yun/layout/_third-party/comments/valine.pug","hash":"98901bdb9de7318a06a7b293a8dcc4e5b22d0992","modified":1627242978556},{"_id":"themes/yun/layout/_third-party/comments/waline.pug","hash":"f6a735878ad7e971f9105c8eb654b862af87dbbf","modified":1627242978557},{"_id":"themes/yun/layout/_third-party/math/index.pug","hash":"0365a84a14325a52ee574df3f633f96c7a47d78f","modified":1627242978560},{"_id":"themes/yun/layout/_third-party/seo/baidu-push.pug","hash":"5b08e856a6c75a9b4a5aafccf52b1b418dac0e38","modified":1627242978563},{"_id":"themes/yun/layout/_third-party/math/katex.pug","hash":"94ca4fffb5ca7fda7c3e243ff8597a19d0583372","modified":1627242978561},{"_id":"themes/yun/layout/_widget/search/local-search.pug","hash":"d2ba600623043b2410f379fd7ba3cc75329ff408","modified":1627242978571},{"_id":"themes/yun/layout/_widget/search/index.pug","hash":"a1dd964e05b5412c3fc446d80576e51b37926b87","modified":1627242978570},{"_id":"themes/yun/layout/_widget/search/algolia-search.pug","hash":"e15f78a38d386d57c1a19b4a760115bd14edbb0d","modified":1627242978570},{"_id":"themes/yun/source/css/_components/button.styl","hash":"3315fc12b1b7659a06120b042a1a2e87a839ebe1","modified":1627242978591},{"_id":"themes/yun/source/css/_components/card.styl","hash":"6d16aae8534f32a8ce439e648e347c98c1e58af3","modified":1627242978591},{"_id":"themes/yun/source/css/_components/scrollbar.styl","hash":"3e332ae27d3aeab1496079cd509649ceccc0f4b5","modified":1627242978598},{"_id":"themes/yun/source/css/_components/ui.styl","hash":"8ef28ee3363f3676c9327a6d163032a003520f40","modified":1627242978603},{"_id":"themes/yun/source/css/_global/dark.styl","hash":"5c0609091e9afd11a7a6b13bc4be986918ee35ca","modified":1627242978606},{"_id":"themes/yun/source/css/_extend/albums.styl","hash":"b0f703fc6e279844b75797edf714cce2135704ed","modified":1627242978604},{"_id":"themes/yun/source/css/_global/index.styl","hash":"01cc3bea8ddbcff5353f98edc6a5073ba89cc53c","modified":1627242978607},{"_id":"themes/yun/source/css/_helper/index.styl","hash":"a1d8c100c8eaba73bf0b5ff412e8fa7b025e621b","modified":1627242978608},{"_id":"themes/yun/source/css/_global/reset.styl","hash":"d1640eb4f76a3cf792c5149e93c42c85da5a29b2","modified":1627242978607},{"_id":"themes/yun/source/css/_extend/girls.styl","hash":"393166ea98ef4bee611dcf00f5e8e22df60b2af0","modified":1627242978604},{"_id":"themes/yun/source/css/_layout/banner.styl","hash":"da9f871576a69439a6984af495d4f13b3613aa00","modified":1627248543899},{"_id":"themes/yun/source/css/_layout/footer.styl","hash":"ed3afcddad7358ebd89f01846157e26a586e7adf","modified":1627242978610},{"_id":"themes/yun/source/css/_layout/grid.styl","hash":"afada46bff9956d51a539ed4732e320b55032b5a","modified":1627242978610},{"_id":"themes/yun/source/css/_layout/links.styl","hash":"9c060919f57a9928331aec8c7bfaae56a6fa8401","modified":1627242978610},{"_id":"themes/yun/source/css/_layout/main.styl","hash":"03669973c1cbb5c93fdba4c011666b921f0587e3","modified":1627242978612},{"_id":"themes/yun/source/css/_layout/page.styl","hash":"52ff29d8bdc61dedb0a6515dd84cf015db67a499","modified":1627242978613},{"_id":"themes/yun/source/css/_mixins/base.styl","hash":"0430e840b280cd6258c4cdf9397c49e89bff2682","modified":1627242978615},{"_id":"themes/yun/source/css/_layout/pagination.styl","hash":"00f95595a8937c7ce4c6069c78e8574600b67d73","modified":1627242978614},{"_id":"themes/yun/source/css/_layout/post.styl","hash":"29e0fe7a0f7948d551d37d1054d88524052baa3d","modified":1627242978614},{"_id":"themes/yun/source/css/_mixins/helper.styl","hash":"09e560ae6db2bccaf39dff8882977cab2e9dec3b","modified":1627242978616},{"_id":"themes/yun/source/css/_variables/_base.styl","hash":"d94e4e978e4d9cdb361a906f2f417787ed86f86a","modified":1627242978617},{"_id":"themes/yun/source/css/_variables/_colors.styl","hash":"f7f492e8bd96c7054909fc360e392bc3984dae8d","modified":1627242978617},{"_id":"themes/yun/source/css/_widget/back-to-top.styl","hash":"d86e0c0c6af9fcb293c1fcef20f4ed68272ccc71","modified":1627242978618},{"_id":"themes/yun/source/css/_widget/comment.styl","hash":"fe9e597e3470027f6d81acf557a36d1fba4c86a5","modified":1627242978618},{"_id":"themes/yun/source/css/_widget/notice.styl","hash":"8b1ca54535311f38b91433e5beadbeed02ecd28b","modified":1627242978619},{"_id":"themes/yun/source/css/_widget/index.styl","hash":"640fea56a013989f5878334d09f3f9b716865c8c","modified":1627242978618},{"_id":"themes/yun/source/js/comments/disqus.js","hash":"d7e532c58a26ffbf5578fc42f370d73a6289205e","modified":1627242978625},{"_id":"themes/yun/source/css/_widget/say.styl","hash":"5649187827d9f2a1eec8e18626a405d7c5ceb7ab","modified":1627277688601},{"_id":"themes/yun/source/js/search/algolia-search.js","hash":"babe61a9a2b2dc921dce6737863b7f0b53eaa750","modified":1627242978629},{"_id":"themes/yun/source/js/analytics/leancloud-visitors.js","hash":"39da9b031923d56cd941265818943aa8b5677049","modified":1627242978624},{"_id":"themes/yun/source/js/search/local-search.js","hash":"8a22e764624baf973f08b1195105630ed1f1b3e7","modified":1627242978630},{"_id":"themes/yun/source/js/ui/fireworks.js","hash":"c98826194c90d35f64591c87f9bc64f5891af900","modified":1627242978632},{"_id":"themes/yun/source/js/ui/mode.js","hash":"f17fa75c84d03cdb6d8ecafcea05d3fd7cbc3ee7","modified":1627242978632},{"_id":"themes/yun/source/js/ui/banner.js","hash":"67f4d40d0e5518d58bd66b3c544d8908358ffc5e","modified":1627250087368},{"_id":"themes/yun/docs/.vuepress/configs/navbar/en.ts","hash":"a14ee57fbff98f729ba3a22e3b5dc6e21b1d4804","modified":1627242978482},{"_id":"themes/yun/docs/.vuepress/configs/navbar/zh.ts","hash":"115c8c42482a5c1b561c6976f9c07b8fd05d34b5","modified":1627242978482},{"_id":"themes/yun/docs/.vuepress/configs/navbar/index.ts","hash":"c0156915b804350cce4d02fb15f39338cb78c32d","modified":1627242978482},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/index.ts","hash":"cb1ae897a9c7a33807e97f8c8d066af871f20c67","modified":1627242978484},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/en.ts","hash":"c6ddf398205381e97a159d24258b32d7474df56a","modified":1627242978484},{"_id":"themes/yun/docs/.vuepress/configs/sidebar/zh.ts","hash":"1353e31c9c0fb127abc3306a4ee7ffaf46fa0e86","modified":1627242978485},{"_id":"themes/yun/docs/.vuepress/public/images/mickey-mouse.jpg","hash":"96a9449730d5149b8d114c2a7d8caaa364257dd0","modified":1627242978489},{"_id":"themes/yun/source/css/_components/post/post-card.styl","hash":"dedc42a3e2ea3c98dcedacebf8c190d0938bd88c","modified":1627242978592},{"_id":"themes/yun/source/css/_components/post/post-header.styl","hash":"3be5d23cda0020365dbfb39ca35eb00aef65e7cd","modified":1627242978595},{"_id":"themes/yun/source/css/_components/post/post-codebloack.styl","hash":"ca312b2acfee5f8019e39937500a7ed17762f72a","modified":1627242978593},{"_id":"themes/yun/source/css/_components/post/post-collapse.styl","hash":"6741c225a37e7e121d4159f129b7024402a8eeec","modified":1627242978594},{"_id":"themes/yun/source/css/_components/sidebar/hamburger.styl","hash":"0fa240e8a71fdad14d3fd6b3fd49cf697d4c8153","modified":1627242978599},{"_id":"themes/yun/source/css/_components/post/post-markdown.styl","hash":"b536c98fff32c6370022f4a3c63f3617b890ef82","modified":1627242978596},{"_id":"themes/yun/source/css/_components/post/post-reward.styl","hash":"454aa79758c9be46c8d8fa226b38e7ac1834ce3b","modified":1627242978598},{"_id":"themes/yun/source/css/_components/post/post-nav.styl","hash":"cec22a5a36eda86b1ee8038e1fa24d9a6c9a0f7f","modified":1627242978597},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-nav.styl","hash":"a8c2eb2d01a02855ff074e2765c5275f839c7315","modified":1627242978600},{"_id":"themes/yun/source/css/_components/sidebar/sidebar-toc.styl","hash":"fe429fb5aa85739c23a052737aba12418149b182","modified":1627242978600},{"_id":"themes/yun/source/css/_components/sidebar/site-overview.styl","hash":"1a34782575569c8fec4489716a3dae13a88c8170","modified":1627242978602},{"_id":"themes/yun/source/css/_components/sidebar/sidebar.styl","hash":"21b2532c943e06bae70ed2a6b341b4816ce55898","modified":1627242978602},{"_id":"themes/yun/source/css/_extend/tags/index.styl","hash":"84112e467510c4d78dc8d9e6cbe1a5012e4d20d8","modified":1627242978605},{"_id":"themes/yun/source/css/_extend/tags/prompt.styl","hash":"4294c5e7f3aef84d369a8ac71f8340e39a681c59","modified":1627242978606},{"_id":"themes/yun/source/css/_widget/search/algolia-search.styl","hash":"d008422dfd104304f50e472a431afa16cad0e15a","modified":1627242978621},{"_id":"themes/yun/source/css/_widget/search/index.styl","hash":"271036cc7fad9414a8e2dd55292a1a3773b8bae0","modified":1627242978622},{"_id":"themes/yun/source/css/_widget/search/local-search.styl","hash":"06468fd1f85390134d4cf034dc5abcc114018257","modified":1627242978622},{"_id":"themes/yun/docs/.vuepress/public/images/index-preview.jpg","hash":"31aaa79aff97bdb98945c541d6bc698d450e078e","modified":1627242978487},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":499162500000},{"_id":"public/categories/index.html","hash":"bec9a6f14568e2893e4cd27df05f98af516a2ace","modified":1628419933229},{"_id":"public/about/index.html","hash":"6bd501f9e5b4d36c9999fcc2486eea9d546098f2","modified":1628419933229},{"_id":"public/albums/index.html","hash":"6a9fb5ef21f80cc041c66fdacad9b7bb2e76bb18","modified":1628419933229},{"_id":"public/albums/concert.html","hash":"511b2de8105f5131b31496cb80f7a1cb7a6c205a","modified":1628419933229},{"_id":"public/tags/index.html","hash":"dea227e54b4044064b5eaa75785dce15f5ba7bdd","modified":1628419933229},{"_id":"public/albums/yms.html","hash":"ea6ba7f25aba0c4917896ed3007083b600e875a3","modified":1628419933229},{"_id":"public/2021/08/06/2021-08-06-快捷键等小tips/index.html","hash":"4dcca65981ffcc61e7b357ebd5df570783061390","modified":1628419933229},{"_id":"public/2021/07/30/2021-07-30-3d辅助作画尝试/index.html","hash":"d890391863504f2852e459675851d030e1d981ac","modified":1628419933229},{"_id":"public/archives/index.html","hash":"a0d4780e930d7833bb0e111913baff67a62c2f98","modified":1628419933229},{"_id":"public/2021/07/26/hello-world/index.html","hash":"100b7dddd3363aba65e934ec4991eb4b0d26f38a","modified":1628419933229},{"_id":"public/archives/2021/index.html","hash":"b62301cf200f9bc3c4cc58fdd373500df668bc06","modified":1628419933229},{"_id":"public/archives/2021/07/index.html","hash":"27b74f9bc8bf031c978094f573fece2528a41137","modified":1628419933229},{"_id":"public/2021/08/06/2021-08-06-小学期建造游戏Demo开发笔记（二）/index.html","hash":"2c1aa5e406a15335faf2a5592d53bd6c9532e3a5","modified":1628419933229},{"_id":"public/2021/07/27/2021-07-26-日记/index.html","hash":"cddccf24b68edf672feb775cea00cc25f7757cc1","modified":1628419933229},{"_id":"public/2021/07/26/2021-07-26-小学期建造游戏Demo开发笔记（一）/index.html","hash":"e02168788164950c7ea3d74c0ee98a69dc70dd57","modified":1628419933229},{"_id":"public/2021/07/26/2021-07-26-第一篇博客/index.html","hash":"46df01d135800c7c01645bf1f69ba79df389221d","modified":1628419933229},{"_id":"public/archives/2021/08/index.html","hash":"511b01de6e1bf12b222c9b301759503eb19caf7d","modified":1628419933229},{"_id":"public/categories/小学期建造游戏Demo开发笔记/index.html","hash":"2f0a0432cca50aaab06746c170f151087550b792","modified":1628419933229},{"_id":"public/categories/日记/index.html","hash":"e332e40529e65a9c429485d14338d8130dd689df","modified":1628419933229},{"_id":"public/categories/比较杂的知识点/index.html","hash":"a8a695579a4888e7415b59df5cc775e3f29dd41e","modified":1628419933229},{"_id":"public/categories/画画笔记/index.html","hash":"bd0d483a78826e97d9437e707e1b88b0a8c0f4c7","modified":1628419933229},{"_id":"public/tags/Action/index.html","hash":"fa4ca0f61a089c974f2253198f5fb843bc4ff5a1","modified":1628419933229},{"_id":"public/tags/数值管理/index.html","hash":"6c9c1a4e3b45dfbb767803cba0fdef0df5f7fd95","modified":1628419933229},{"_id":"public/tags/ScriptObject/index.html","hash":"725203a13a548c0c2bd340e9a351318cfc8df0b7","modified":1628419933229},{"_id":"public/tags/UI跟随物体/index.html","hash":"e53d97844ddd34bf66a5c607352408f4fc13de3b","modified":1628419933229},{"_id":"public/tags/Unity/index.html","hash":"4d3d496a98352cf71e3391735ad54eb9f8c70f87","modified":1628419933229},{"_id":"public/tags/3d辅助/index.html","hash":"90c68fca989e887df636f1494a0d5efd088a75be","modified":1628419933229},{"_id":"public/tags/hexo/index.html","hash":"a225280d5775f837dddf68b735b2309b31a60c22","modified":1628419933229},{"_id":"public/tags/Daz/index.html","hash":"7684981e867be7a24571b1593377f43bb59f0db4","modified":1628419933229},{"_id":"public/tags/场景切换/index.html","hash":"92defcf5db559f9afdd33158efc7abf9baa26898","modified":1628419933229},{"_id":"public/tags/GameManager/index.html","hash":"a9d89891c476f31cabeadc738059998bdeba787b","modified":1628419933229},{"_id":"public/tags/单例模式/index.html","hash":"b2e116ab597b7bb0ec103ce723caa4f16093f783","modified":1628419933229},{"_id":"public/tags/UI隐藏/index.html","hash":"c4cf95fc920046993f39754ee569c41c7cbffe3f","modified":1628419933229},{"_id":"public/tags/状态切换/index.html","hash":"7c6ed997fa0655e9e0f0f5fd050bb3ab73e6a49c","modified":1628419933229},{"_id":"public/index.html","hash":"4798dd353553b7c41913de76e50e1fcd617d4997","modified":1628419933229},{"_id":"public/Yun.png","hash":"b8ae426fa5dd7579d23d189c222641d812c51c0a","modified":1628419933229},{"_id":"public/yun.ico","hash":"5d63418cd650d1881d4b6507f35b9f9df766020e","modified":1628419933229},{"_id":"public/yun.svg","hash":"78218ba93f0150e3613c7d0b60575ebe6131255f","modified":1628419933229},{"_id":"public/css/hbe.style.css","hash":"b0a0077cb588c0941823905fcc383aa7509ade73","modified":1628419933229},{"_id":"public/lib/hbe.js","hash":"136dba00826bdd086153bf0acb5473aea7183ad1","modified":1628419933229},{"_id":"public/js/gallery-decrypt.js","hash":"9fdbb18bc6f2df816497288d2d0d7d5171046ab1","modified":1628419933229},{"_id":"public/js/hexo-theme-yun.js","hash":"ea104f1b49f4418c4168d29f8a12086bd91274df","modified":1628419933229},{"_id":"public/js/sidebar.js","hash":"ad553417673b72cdc465cdab7205a43c68b07eae","modified":1628419933229},{"_id":"public/css/hexo-theme-yun.css","hash":"9b50c026272482cdaa335b9c4cc628ce98b546e3","modified":1628419933229},{"_id":"public/js/pjax.js","hash":"4fd54bd75d9eb751770543ad3dcf2ee03c8485c5","modified":1628419933229},{"_id":"public/js/utils.js","hash":"0a9f4898904737c37b36d53be9697b8f991ca1e3","modified":1628419933229},{"_id":"public/js/say.js","hash":"e0908e35d0fb9d825596a476b27e265175ebf053","modified":1628419933229},{"_id":"public/js/comments/disqus.js","hash":"0fac74f042c0e8818a1d01580204d70d0ab13f52","modified":1628419933229},{"_id":"public/js/analytics/leancloud-visitors.js","hash":"7719a85b7da5ae52659451729fab52e065462f30","modified":1628419933229},{"_id":"public/js/search/local-search.js","hash":"7cfeb3474cb13664bdfc2c518371d409df406c6a","modified":1628419933229},{"_id":"public/js/ui/fireworks.js","hash":"5fea87a42f3f4b0cbb13fe8b46195e9bb41e64a5","modified":1628419933229},{"_id":"public/js/search/algolia-search.js","hash":"5133e150f4b0168bfe64ad5cbcb5625de08dd6b9","modified":1628419933229},{"_id":"public/js/ui/mode.js","hash":"42b868d77fcc5eac53f5520dd89db385595555d0","modified":1628419933229},{"_id":"public/js/ui/banner.js","hash":"49f7be469e61fb7f82477cb83ce7bc67cf83499a","modified":1628419933229},{"_id":"source/_posts/2021-08-14-天使坠落绘画过程记录.md","hash":"525ae5391cb27e6f3740b7229676cd3a1c6eb1ef","modified":1629126603884},{"_id":"source/_posts/2021-08-15-庄懂的技术美术入门课学习笔记（一）.md","hash":"efb4d137fc92779303fe72000589861bf7733ac9","modified":1629174643747},{"_id":"source/_posts/2021-08-09-小学期建造游戏Demo开发笔记（三）.md","hash":"a2793f6cd273979a98b0c047d692cfd6ba483a31","modified":1629123687976},{"_id":"source/_posts/2021-08-16-庄懂的技术美术入门课学习笔记（二）.md","hash":"c8ef161692d2ec19609bd1ebdf461bd9d4424054","modified":1629183994085}],"Category":[{"name":"小学期建造游戏Demo开发笔记","_id":"cks336nq200081svo8sczargc"},{"name":"日记","_id":"cks336nq6000d1svo5d3t6y19"},{"name":"比较杂的知识点","_id":"cks336nq9000i1svo7x608unw"},{"name":"画画笔记","_id":"cks336nq9000m1svo8ex5edqn"},{"name":"庄懂的技术美术入门课学习笔记","_id":"cksd78u8j0005awvog0oeh6r8"}],"Data":[{"_id":"style/banner","data":""},{"_id":"yun","data":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":false}}},{"_id":"style/sidebar","data":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}],"Page":[{"title":"about","date":"2021-07-26T07:32:17.000Z","_content":"\n## 你好，我是HQZ！\n\n> 觉得自己不能一直废物下去，需要坚持写点东西，所以做了这个主页。\n\n<div class=\"danger\">\n\n> 现在什么都没有！\n\n</div>\n\n\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-07-26 15:32:17\n---\n\n## 你好，我是HQZ！\n\n> 觉得自己不能一直废物下去，需要坚持写点东西，所以做了这个主页。\n\n<div class=\"danger\">\n\n> 现在什么都没有！\n\n</div>\n\n\n","updated":"2021-07-26T07:50:37.466Z","path":"about/index.html","comments":1,"layout":"page","_id":"cks336nou00001svohn2l394o","content":"<h2 id=\"你好，我是HQZ！\"><a href=\"#你好，我是HQZ！\" class=\"headerlink\" title=\"你好，我是HQZ！\"></a>你好，我是HQZ！</h2><blockquote>\n<p>觉得自己不能一直废物下去，需要坚持写点东西，所以做了这个主页。</p>\n</blockquote>\n<div class=\"danger\">\n\n<blockquote>\n<p>现在什么都没有！</p>\n</blockquote>\n</div>\n\n\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":"<h2 id=\"你好，我是HQZ！\"><a href=\"#你好，我是HQZ！\" class=\"headerlink\" title=\"你好，我是HQZ！\"></a>你好，我是HQZ！</h2><blockquote>\n<p>觉得自己不能一直废物下去，需要坚持写点东西，所以做了这个主页。</p>\n</blockquote>\n<div class=\"danger\">\n\n<blockquote>\n<p>现在什么都没有！</p>\n</blockquote>\n</div>\n\n\n"},{"title":"categories","date":"2021-07-26T14:40:41.000Z","comments":0,"type":"categories","_content":"\n\n","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-07-26 22:40:41\ncomments: false\ntype: categories\n---\n\n\n","updated":"2021-07-26T14:45:18.141Z","path":"categories/index.html","layout":"page","_id":"cks336npl00011svocjcz08cl","content":"","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":""},{"title":"演唱会","date":"2021-07-26T07:59:23.000Z","updated":"2021-07-26T07:59:23.000Z","layout":"gallery","photos":[{"caption":"宣传片","src":"https://z3.ax1x.com/2021/07/26/Wf9qC8.jpg","desc":"真的很好看"},{"caption":"全景","src":"https://z3.ax1x.com/2021/07/26/WfeC5j.jpg","desc":"真的很好看"},{"caption":"phenomenon-1","src":"https://z3.ax1x.com/2021/07/26/WfeFGn.jpg","desc":"真的很好看"},{"caption":"phenomenon-2","src":"https://z3.ax1x.com/2021/07/26/WfeZrT.jpg","desc":"真的很好看"},{"caption":"重生-1","src":"https://z3.ax1x.com/2021/07/26/WfZzqS.jpg","desc":"真的很好看"},{"caption":"重生-2","src":"https://z3.ax1x.com/2021/07/26/Wfe9aQ.jpg","desc":"真的很好看"},{"caption":"接纸条","src":"https://z3.ax1x.com/2021/07/26/WfZxr8.jpg","desc":"真的很好看"},{"caption":"girlfriend","src":"https://z3.ax1x.com/2021/07/26/WfeeqU.jpg","desc":"真的很好看"}],"_content":"","source":"albums/concert.md","raw":"---\ntitle: 演唱会\ndate: 2021-07-26 15:59:23\nupdated: 2021-07-26 15:59:23\nlayout: gallery\nphotos:\n  - caption: 宣传片\n    src: https://z3.ax1x.com/2021/07/26/Wf9qC8.jpg\n    desc: 真的很好看\n  - caption: 全景\n    src: https://z3.ax1x.com/2021/07/26/WfeC5j.jpg\n    desc: 真的很好看\n  - caption: phenomenon-1\n    src: https://z3.ax1x.com/2021/07/26/WfeFGn.jpg\n    desc: 真的很好看\n  - caption: phenomenon-2\n    src: https://z3.ax1x.com/2021/07/26/WfeZrT.jpg\n    desc: 真的很好看\n  - caption: 重生-1\n    src: https://z3.ax1x.com/2021/07/26/WfZzqS.jpg\n    desc: 真的很好看\n  - caption: 重生-2\n    src: https://z3.ax1x.com/2021/07/26/Wfe9aQ.jpg\n    desc: 真的很好看\n  - caption: 接纸条\n    src: https://z3.ax1x.com/2021/07/26/WfZxr8.jpg\n    desc: 真的很好看\n  - caption: girlfriend\n    src: https://z3.ax1x.com/2021/07/26/WfeeqU.jpg\n    desc: 真的很好看\n\n---","path":"albums/concert.html","comments":1,"_id":"cks336npm00021svo68hz7ts0","content":"","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":""},{"title":"albums","date":"2021-07-26T07:59:23.000Z","type":"albums","albums":[{"caption":"演唱会","url":"/albums/concert.html","cover":"https://z3.ax1x.com/2021/07/26/Wf9qC8.jpg","desc":"日益上头"}],"_content":"","source":"albums/index.md","raw":"---\ntitle: albums\ndate: 2021-07-26 15:59:23\ntype: albums\nalbums:\n  - caption: 演唱会\n    url: /albums/concert.html\n    cover: https://z3.ax1x.com/2021/07/26/Wf9qC8.jpg\n    desc: 日益上头\n---\n","updated":"2021-07-26T08:49:48.833Z","path":"albums/index.html","comments":1,"layout":"page","_id":"cks336npm00031svoa1b58os7","content":"","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":""},{"title":"tags","date":"2021-07-26T16:38:55.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-07-27 00:38:55\ntype: tags\ncomments: false\n---\n","updated":"2021-07-26T16:39:19.667Z","path":"tags/index.html","layout":"page","_id":"cks336npm00041svo4n7vcxjl","content":"","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":""},{"title":"青梅青柚","date":"2021-07-26T07:59:23.000Z","updated":"2021-07-26T07:59:23.000Z","layout":"gallery","photos":[{"caption":"困","src":"https://z3.ax1x.com/2021/07/26/Wf9qC8.jpg","desc":"真的很好看"},{"caption":"困困","src":"https://z3.ax1x.com/2021/07/26/Wf9fjH.jpg","desc":"真的很好看"}],"_content":"","source":"albums/yms.md","raw":"---\ntitle: 青梅青柚\ndate: 2021-07-26 15:59:23\nupdated: 2021-07-26 15:59:23\nlayout: gallery\nphotos:\n  - caption: 困\n    src: https://z3.ax1x.com/2021/07/26/Wf9qC8.jpg\n    desc: 真的很好看\n  - caption: 困困\n    src: https://z3.ax1x.com/2021/07/26/Wf9fjH.jpg\n    desc: 真的很好看\n\n---","path":"albums/yms.html","comments":1,"_id":"cks336npn00051svoags74xya","content":"","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":""}],"Post":[{"title":"2021-07-26-小学期建造游戏Demo开发笔记（一）","date":"2021-07-26T14:47:18.000Z","_content":"\n# 学习资料\n\n* [Micael 的3DRPS游戏开发教程系列](https://space.bilibili.com/370283072/channel/seriesdetail?sid=211995)\n* [bilibili RTS建造系统开发教程](https://www.bilibili.com/video/BV1b5411P7NE?p=2)\n* [【沙盒/经营/策略/生存游戏通用】网格建造系统](https://www.bilibili.com/video/BV1TK4y1g7Se/?spm_id_from=333.788.recommend_more_video.0)\n* [Unity教程 网格系列（一） 基于网格的建造系统 讲解&演示&源代码 下载即用](https://www.bilibili.com/video/BV1Vb4y1y7F5/?spm_id_from=333.788.recommend_more_video.1)\n\n<!-- more -->\n\n# 开始学习\n\n## 代码结构设计\n\n## 在Grid上建造\n\n获取世界坐标，转化为网格的坐标，然后在对应的位置新建物体。\n\n\n\n## 游戏数值管理\n### 保存数值：ScriptableObject\n\n新建脚本，继承`ScriptableObject`类。\n另外需要在菜单中添加项，方便对每个数值新建一个SO。\n下面以不同建筑的数值管理为例，新建脚本`BuildingData_SO.cs`，用来保存数值。\n\n```c#\n[CreateAssetMenu(fileName=\"BuildingData\",menuName= \"ScriptableObjects/Building Status\")]\npublic class BuildingData_SO : ScriptableObject\n{\n    [Header(\"Building Info\")]\n    public int green;\n    public int coin;\n    public int costCoin;\n    public int updateTime;\n\n    [Header(\"Other Info\")]\n    public string intro;\n\n}\n```\n然后右键`ScriptableObjects/Building Status`，新建一个`ScriptableObjects`，然后修改名称和默认数值。如下图所示。\n\n![image-20210728005217041](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS建造系统开发学习笔记（一）/image-20210728005217041-16274047480671.png)_一个数值模板_\n\n### 读取和修改数值\n\n​\t上面的类只能保存数值而不能挂在物体上，需要新建一个类，继承`MonoBehavior`类，然后读取上面的Data，对于每个数值新建类，添加get和set函数。\n\n```c#\npublic class BuildingStatus : MonoBehaviour\n{\n    public BuildingData_SO buildingData;\n\n    #region Read from BuildingData_SO\n    public int BDGreen {\n        get\n        {\n            if (buildingData != null)\n            {\n                return buildingData.green;\n            }\n            else return 0;\n        }\n        set\n        {\n            buildingData.green = value;\n        }\n    }\n    #endregion\n}\n```\n\n### UI跟随物体定位\n\n> [教程](https://www.bilibili.com/video/BV1ew41197m1)\n\n#### Canvas设置\n\n新建Canvas，首先要设置Canvas的渲染模式。默认渲染模式是Overlay，需要改成WorldSpace。记得把主摄像机拖进来。\n\n然后重置canvas的位置。\n\n![image-20210728183939840](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS建造系统开发学习笔记（一）/image-20210728183939840-16274687829251.png)\n\n然后在Canvas中新建UI，调整坐标和缩放，放置于需要放置的物体上。然后把该UI拖到资源文件夹中变成Prefab，删去检视视图中的UI。\n\n对于每个建筑的Prefab，在里面新增一个空的子物体，标记每种建筑的UI 需要显示的位置。如下图所示。\n\n![image-20210728185002113](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS建造系统开发学习笔记（一）/image-20210728185002113-16274694030602.png)\n\n\n\n#### 设置UI位置和朝向相机\n\n<div class=\"warning\">\n\n> 注意下述语句需要在`LateUpdate()`中执行\n\n</div>\n\nUI位置使用`coinUI.position = coinPoint.position;`\n\n获取主摄像机的transform，朝向相机直接用语句`coinUI.forward = -cam.forward;`\n\n------\n\n\n\n#### 添加事件Action\n\n在`GameEvent.cs`中统一管理游戏事件。GameEvent是一个单例，也就是说只有一个GameEvent对象，所以用来管理UI的出现等等事件。\n\n对于每个对象本身的事件，则写在对象的脚本中。\n\n> Action 是对委托的一种封装，可以直接对Action进行+=和-=操作\n\n以一部分代码为例：使用`public event Action<String> onGameMessage`定义Action。\n\n```c#\npublic class GameEvents : MonoBehaviour\n{   \n    // 单例\n    public static GameEvents current;\n    \n    private void Awake()\n    {\n        current = this;\n    }\n    \n    // 广播游戏消息（UI显示）\n    public event Action<String> onGameMessage;\n    public void GameMessage(String message)\n    {\n        if (onGameMessage != null)\n        {\n            onGameMessage(message);\n        }    \n    }\n}\n```\n\n然后在其他脚本中可以进行**事件注册**：\n\n```c#\nprivate void Awake()\n    {\n        GameEvents.current.onCoinShow += ShowCoin;    // 事件注册\n     }\n//定义函数\nprivate void ShowCoin(int coin)\n    {\n        if (coin != null && coin>0)\n        {\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.SetText(\"+\"+coin);\n            timeLeft = visibleTime;\n        }\n        else\n        {\n            Destroy(coinUI.gameObject);\n        }\n    }\n```\n\n**调用事件**：\n\n`GameEvents.current.GameMessage()`\n\n\n\n#### 固定时间后消失\n\n当显示UI时初始化：`timeLeft = visibleTime;`\n\n在`LateUpdate()`中：\n\n```c#\nif (timeLeft <= 0)\n{\n    coinUI.gameObject.SetActive(false);\n}\nelse\n{\n    timeLeft -= Time.deltaTime;\n}\n```\n\n------\n\n\n\n#### 完整代码\n\n<details>\n  <summary>CoinUI.cs</summary>\n\n  ```c#\n   public class CoinUI : MonoBehaviour\n{\n    public GameObject coinPrefab;\n    public Transform coinPoint;\n    public float visibleTime;\n    public bool isVisible=true;\n\n    private TextMeshProUGUI _textMeshProUGUI;\n    private float timeLeft;\n\n    Transform coinUI;\n    Transform cam;\n    BuildingController currentController;\n\n    private void Start()\n    {\n        currentController = GetComponent<BuildingController>();\n        currentController.onCoinShow += ShowCoin;    // 事件注册\n        currentController.onCoinHide += HideCoin;    // 事件注册\n        coinPoint = transform.Find(\"CoinPoint\");\n    }\n\n    void OnEnable()\n    {\n        cam = Camera.main.transform;\n        foreach(Canvas canvas in FindObjectsOfType<Canvas>())\n        {\n            if(canvas.renderMode == RenderMode.WorldSpace)\n            {\n                coinUI = Instantiate(coinPrefab, canvas.transform).transform;\n                coinUI.gameObject.SetActive(false);\n                _textMeshProUGUI = coinUI.transform.Find(\"Text\").GetComponent<TextMeshProUGUI>();\n\n            }\n        }\n    }\n    private void ShowCoin(int coin)\n    {\n        Debug.Log(\"收入：\" + coin);\n        if (coin != null && coin>0)\n        {\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.text=\"+\"+coin;\n            timeLeft = visibleTime;\n        }\n        else\n        {\n            Destroy(coinUI.gameObject);\n        }\n    }\n    private void HideCoin()\n    {\n        coinUI.gameObject.SetActive(false);\n    }\n\n    void LateUpdate()\n    {\n        if (coinUI != null)\n        {\n            coinUI.position = coinPoint.position;\n            coinUI.forward = cam.forward;\n\n            if (!isVisible)\n            {\n                if (timeLeft <= 0)\n                {\n                    HideCoin();\n                }\n                else\n                {\n                    timeLeft -= Time.deltaTime;\n                }\n            }\n            \n        }\n    }\n\n}\n  ```\n\n</details>\n\n\n\n\n<details>\n  <summary>CoinCount.cs</summary>\n\n~~~c#\n```c#\n    public class CoinCount : MonoBehaviour\n{\n    private TextMeshProUGUI _textMeshProUGUI;\n\n    // Start is called before the first frame update\n    void Awake()\n    {\n        _textMeshProUGUI = transform.GetComponentsInChildren<TextMeshProUGUI>()[0];\n\n        // 添加事件响应\n        GameEvents.current.onCoinCountChange += ChangeCoinCount;\n    }\n\n    private void ChangeCoinCount(int coin)\n    {\n        \n        int allCoin = GameManager.getGM.Coin;\n        String str = String.Format(\"经济值：\"+allCoin);\n        _textMeshProUGUI.SetText(str);\n        Debug.Log(\"剩余：\" + allCoin);\n    }\n}\n```\n~~~\n\n</details>\n\n\n\n   \n\n\n\n\n\n","source":"_posts/2021-07-26-小学期建造游戏Demo开发笔记（一）.md","raw":"---\ntitle: 2021-07-26-小学期建造游戏Demo开发笔记（一）\ndate: 2021-07-26 22:47:18\ntags:\n  - Action\n  - 数值管理\n  - ScriptObject\n  - UI跟随物体\n  - Unity\ncategories:\n  - 小学期建造游戏Demo开发笔记\n\n---\n\n# 学习资料\n\n* [Micael 的3DRPS游戏开发教程系列](https://space.bilibili.com/370283072/channel/seriesdetail?sid=211995)\n* [bilibili RTS建造系统开发教程](https://www.bilibili.com/video/BV1b5411P7NE?p=2)\n* [【沙盒/经营/策略/生存游戏通用】网格建造系统](https://www.bilibili.com/video/BV1TK4y1g7Se/?spm_id_from=333.788.recommend_more_video.0)\n* [Unity教程 网格系列（一） 基于网格的建造系统 讲解&演示&源代码 下载即用](https://www.bilibili.com/video/BV1Vb4y1y7F5/?spm_id_from=333.788.recommend_more_video.1)\n\n<!-- more -->\n\n# 开始学习\n\n## 代码结构设计\n\n## 在Grid上建造\n\n获取世界坐标，转化为网格的坐标，然后在对应的位置新建物体。\n\n\n\n## 游戏数值管理\n### 保存数值：ScriptableObject\n\n新建脚本，继承`ScriptableObject`类。\n另外需要在菜单中添加项，方便对每个数值新建一个SO。\n下面以不同建筑的数值管理为例，新建脚本`BuildingData_SO.cs`，用来保存数值。\n\n```c#\n[CreateAssetMenu(fileName=\"BuildingData\",menuName= \"ScriptableObjects/Building Status\")]\npublic class BuildingData_SO : ScriptableObject\n{\n    [Header(\"Building Info\")]\n    public int green;\n    public int coin;\n    public int costCoin;\n    public int updateTime;\n\n    [Header(\"Other Info\")]\n    public string intro;\n\n}\n```\n然后右键`ScriptableObjects/Building Status`，新建一个`ScriptableObjects`，然后修改名称和默认数值。如下图所示。\n\n![image-20210728005217041](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS建造系统开发学习笔记（一）/image-20210728005217041-16274047480671.png)_一个数值模板_\n\n### 读取和修改数值\n\n​\t上面的类只能保存数值而不能挂在物体上，需要新建一个类，继承`MonoBehavior`类，然后读取上面的Data，对于每个数值新建类，添加get和set函数。\n\n```c#\npublic class BuildingStatus : MonoBehaviour\n{\n    public BuildingData_SO buildingData;\n\n    #region Read from BuildingData_SO\n    public int BDGreen {\n        get\n        {\n            if (buildingData != null)\n            {\n                return buildingData.green;\n            }\n            else return 0;\n        }\n        set\n        {\n            buildingData.green = value;\n        }\n    }\n    #endregion\n}\n```\n\n### UI跟随物体定位\n\n> [教程](https://www.bilibili.com/video/BV1ew41197m1)\n\n#### Canvas设置\n\n新建Canvas，首先要设置Canvas的渲染模式。默认渲染模式是Overlay，需要改成WorldSpace。记得把主摄像机拖进来。\n\n然后重置canvas的位置。\n\n![image-20210728183939840](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS建造系统开发学习笔记（一）/image-20210728183939840-16274687829251.png)\n\n然后在Canvas中新建UI，调整坐标和缩放，放置于需要放置的物体上。然后把该UI拖到资源文件夹中变成Prefab，删去检视视图中的UI。\n\n对于每个建筑的Prefab，在里面新增一个空的子物体，标记每种建筑的UI 需要显示的位置。如下图所示。\n\n![image-20210728185002113](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS建造系统开发学习笔记（一）/image-20210728185002113-16274694030602.png)\n\n\n\n#### 设置UI位置和朝向相机\n\n<div class=\"warning\">\n\n> 注意下述语句需要在`LateUpdate()`中执行\n\n</div>\n\nUI位置使用`coinUI.position = coinPoint.position;`\n\n获取主摄像机的transform，朝向相机直接用语句`coinUI.forward = -cam.forward;`\n\n------\n\n\n\n#### 添加事件Action\n\n在`GameEvent.cs`中统一管理游戏事件。GameEvent是一个单例，也就是说只有一个GameEvent对象，所以用来管理UI的出现等等事件。\n\n对于每个对象本身的事件，则写在对象的脚本中。\n\n> Action 是对委托的一种封装，可以直接对Action进行+=和-=操作\n\n以一部分代码为例：使用`public event Action<String> onGameMessage`定义Action。\n\n```c#\npublic class GameEvents : MonoBehaviour\n{   \n    // 单例\n    public static GameEvents current;\n    \n    private void Awake()\n    {\n        current = this;\n    }\n    \n    // 广播游戏消息（UI显示）\n    public event Action<String> onGameMessage;\n    public void GameMessage(String message)\n    {\n        if (onGameMessage != null)\n        {\n            onGameMessage(message);\n        }    \n    }\n}\n```\n\n然后在其他脚本中可以进行**事件注册**：\n\n```c#\nprivate void Awake()\n    {\n        GameEvents.current.onCoinShow += ShowCoin;    // 事件注册\n     }\n//定义函数\nprivate void ShowCoin(int coin)\n    {\n        if (coin != null && coin>0)\n        {\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.SetText(\"+\"+coin);\n            timeLeft = visibleTime;\n        }\n        else\n        {\n            Destroy(coinUI.gameObject);\n        }\n    }\n```\n\n**调用事件**：\n\n`GameEvents.current.GameMessage()`\n\n\n\n#### 固定时间后消失\n\n当显示UI时初始化：`timeLeft = visibleTime;`\n\n在`LateUpdate()`中：\n\n```c#\nif (timeLeft <= 0)\n{\n    coinUI.gameObject.SetActive(false);\n}\nelse\n{\n    timeLeft -= Time.deltaTime;\n}\n```\n\n------\n\n\n\n#### 完整代码\n\n<details>\n  <summary>CoinUI.cs</summary>\n\n  ```c#\n   public class CoinUI : MonoBehaviour\n{\n    public GameObject coinPrefab;\n    public Transform coinPoint;\n    public float visibleTime;\n    public bool isVisible=true;\n\n    private TextMeshProUGUI _textMeshProUGUI;\n    private float timeLeft;\n\n    Transform coinUI;\n    Transform cam;\n    BuildingController currentController;\n\n    private void Start()\n    {\n        currentController = GetComponent<BuildingController>();\n        currentController.onCoinShow += ShowCoin;    // 事件注册\n        currentController.onCoinHide += HideCoin;    // 事件注册\n        coinPoint = transform.Find(\"CoinPoint\");\n    }\n\n    void OnEnable()\n    {\n        cam = Camera.main.transform;\n        foreach(Canvas canvas in FindObjectsOfType<Canvas>())\n        {\n            if(canvas.renderMode == RenderMode.WorldSpace)\n            {\n                coinUI = Instantiate(coinPrefab, canvas.transform).transform;\n                coinUI.gameObject.SetActive(false);\n                _textMeshProUGUI = coinUI.transform.Find(\"Text\").GetComponent<TextMeshProUGUI>();\n\n            }\n        }\n    }\n    private void ShowCoin(int coin)\n    {\n        Debug.Log(\"收入：\" + coin);\n        if (coin != null && coin>0)\n        {\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.text=\"+\"+coin;\n            timeLeft = visibleTime;\n        }\n        else\n        {\n            Destroy(coinUI.gameObject);\n        }\n    }\n    private void HideCoin()\n    {\n        coinUI.gameObject.SetActive(false);\n    }\n\n    void LateUpdate()\n    {\n        if (coinUI != null)\n        {\n            coinUI.position = coinPoint.position;\n            coinUI.forward = cam.forward;\n\n            if (!isVisible)\n            {\n                if (timeLeft <= 0)\n                {\n                    HideCoin();\n                }\n                else\n                {\n                    timeLeft -= Time.deltaTime;\n                }\n            }\n            \n        }\n    }\n\n}\n  ```\n\n</details>\n\n\n\n\n<details>\n  <summary>CoinCount.cs</summary>\n\n~~~c#\n```c#\n    public class CoinCount : MonoBehaviour\n{\n    private TextMeshProUGUI _textMeshProUGUI;\n\n    // Start is called before the first frame update\n    void Awake()\n    {\n        _textMeshProUGUI = transform.GetComponentsInChildren<TextMeshProUGUI>()[0];\n\n        // 添加事件响应\n        GameEvents.current.onCoinCountChange += ChangeCoinCount;\n    }\n\n    private void ChangeCoinCount(int coin)\n    {\n        \n        int allCoin = GameManager.getGM.Coin;\n        String str = String.Format(\"经济值：\"+allCoin);\n        _textMeshProUGUI.SetText(str);\n        Debug.Log(\"剩余：\" + allCoin);\n    }\n}\n```\n~~~\n\n</details>\n\n\n\n   \n\n\n\n\n\n","slug":"2021-07-26-小学期建造游戏Demo开发笔记（一）","published":1,"updated":"2021-08-16T15:08:39.044Z","_id":"cks336npy00061svo0zsu3d4o","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"学习资料\"><a href=\"#学习资料\" class=\"headerlink\" title=\"学习资料\"></a>学习资料</h1><ul>\n<li><a href=\"https://space.bilibili.com/370283072/channel/seriesdetail?sid=211995\">Micael 的3DRPS游戏开发教程系列</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1b5411P7NE?p=2\">bilibili RTS建造系统开发教程</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1TK4y1g7Se/?spm_id_from=333.788.recommend_more_video.0\">【沙盒/经营/策略/生存游戏通用】网格建造系统</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1Vb4y1y7F5/?spm_id_from=333.788.recommend_more_video.1\">Unity教程 网格系列（一） 基于网格的建造系统 讲解&amp;演示&amp;源代码 下载即用</a></li>\n</ul>\n<span id=\"more\"></span>\n\n<h1 id=\"开始学习\"><a href=\"#开始学习\" class=\"headerlink\" title=\"开始学习\"></a>开始学习</h1><h2 id=\"代码结构设计\"><a href=\"#代码结构设计\" class=\"headerlink\" title=\"代码结构设计\"></a>代码结构设计</h2><h2 id=\"在Grid上建造\"><a href=\"#在Grid上建造\" class=\"headerlink\" title=\"在Grid上建造\"></a>在Grid上建造</h2><p>获取世界坐标，转化为网格的坐标，然后在对应的位置新建物体。</p>\n<h2 id=\"游戏数值管理\"><a href=\"#游戏数值管理\" class=\"headerlink\" title=\"游戏数值管理\"></a>游戏数值管理</h2><h3 id=\"保存数值：ScriptableObject\"><a href=\"#保存数值：ScriptableObject\" class=\"headerlink\" title=\"保存数值：ScriptableObject\"></a>保存数值：ScriptableObject</h3><p>新建脚本，继承<code>ScriptableObject</code>类。<br>另外需要在菜单中添加项，方便对每个数值新建一个SO。<br>下面以不同建筑的数值管理为例，新建脚本<code>BuildingData_SO.cs</code>，用来保存数值。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">[CreateAssetMenu(fileName&#x3D;&quot;BuildingData&quot;,menuName&#x3D; &quot;ScriptableObjects&#x2F;Building Status&quot;)]\npublic class BuildingData_SO : ScriptableObject\n&#123;\n    [Header(&quot;Building Info&quot;)]\n    public int green;\n    public int coin;\n    public int costCoin;\n    public int updateTime;\n\n    [Header(&quot;Other Info&quot;)]\n    public string intro;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后右键<code>ScriptableObjects/Building Status</code>，新建一个<code>ScriptableObjects</code>，然后修改名称和默认数值。如下图所示。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS%E5%BB%BA%E9%80%A0%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/image-20210728005217041-16274047480671.png\" alt=\"image-20210728005217041\" loading=\"lazy\"><em>一个数值模板</em></p>\n<h3 id=\"读取和修改数值\"><a href=\"#读取和修改数值\" class=\"headerlink\" title=\"读取和修改数值\"></a>读取和修改数值</h3><p>​    上面的类只能保存数值而不能挂在物体上，需要新建一个类，继承<code>MonoBehavior</code>类，然后读取上面的Data，对于每个数值新建类，添加get和set函数。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class BuildingStatus : MonoBehaviour\n&#123;\n    public BuildingData_SO buildingData;\n\n    #region Read from BuildingData_SO\n    public int BDGreen &#123;\n        get\n        &#123;\n            if (buildingData !&#x3D; null)\n            &#123;\n                return buildingData.green;\n            &#125;\n            else return 0;\n        &#125;\n        set\n        &#123;\n            buildingData.green &#x3D; value;\n        &#125;\n    &#125;\n    #endregion\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"UI跟随物体定位\"><a href=\"#UI跟随物体定位\" class=\"headerlink\" title=\"UI跟随物体定位\"></a>UI跟随物体定位</h3><blockquote>\n<p><a href=\"https://www.bilibili.com/video/BV1ew41197m1\">教程</a></p>\n</blockquote>\n<h4 id=\"Canvas设置\"><a href=\"#Canvas设置\" class=\"headerlink\" title=\"Canvas设置\"></a>Canvas设置</h4><p>新建Canvas，首先要设置Canvas的渲染模式。默认渲染模式是Overlay，需要改成WorldSpace。记得把主摄像机拖进来。</p>\n<p>然后重置canvas的位置。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS%E5%BB%BA%E9%80%A0%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/image-20210728183939840-16274687829251.png\" alt=\"image-20210728183939840\" loading=\"lazy\"></p>\n<p>然后在Canvas中新建UI，调整坐标和缩放，放置于需要放置的物体上。然后把该UI拖到资源文件夹中变成Prefab，删去检视视图中的UI。</p>\n<p>对于每个建筑的Prefab，在里面新增一个空的子物体，标记每种建筑的UI 需要显示的位置。如下图所示。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS%E5%BB%BA%E9%80%A0%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/image-20210728185002113-16274694030602.png\" alt=\"image-20210728185002113\" loading=\"lazy\"></p>\n<h4 id=\"设置UI位置和朝向相机\"><a href=\"#设置UI位置和朝向相机\" class=\"headerlink\" title=\"设置UI位置和朝向相机\"></a>设置UI位置和朝向相机</h4><div class=\"warning\">\n\n<blockquote>\n<p>注意下述语句需要在<code>LateUpdate()</code>中执行</p>\n</blockquote>\n</div>\n\n<p>UI位置使用<code>coinUI.position = coinPoint.position;</code></p>\n<p>获取主摄像机的transform，朝向相机直接用语句<code>coinUI.forward = -cam.forward;</code></p>\n<hr>\n<h4 id=\"添加事件Action\"><a href=\"#添加事件Action\" class=\"headerlink\" title=\"添加事件Action\"></a>添加事件Action</h4><p>在<code>GameEvent.cs</code>中统一管理游戏事件。GameEvent是一个单例，也就是说只有一个GameEvent对象，所以用来管理UI的出现等等事件。</p>\n<p>对于每个对象本身的事件，则写在对象的脚本中。</p>\n<blockquote>\n<p>Action 是对委托的一种封装，可以直接对Action进行+=和-=操作</p>\n</blockquote>\n<p>以一部分代码为例：使用<code>public event Action&lt;String&gt; onGameMessage</code>定义Action。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class GameEvents : MonoBehaviour\n&#123;   \n    &#x2F;&#x2F; 单例\n    public static GameEvents current;\n    \n    private void Awake()\n    &#123;\n        current &#x3D; this;\n    &#125;\n    \n    &#x2F;&#x2F; 广播游戏消息（UI显示）\n    public event Action&lt;String&gt; onGameMessage;\n    public void GameMessage(String message)\n    &#123;\n        if (onGameMessage !&#x3D; null)\n        &#123;\n            onGameMessage(message);\n        &#125;    \n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后在其他脚本中可以进行<strong>事件注册</strong>：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">private void Awake()\n    &#123;\n        GameEvents.current.onCoinShow +&#x3D; ShowCoin;    &#x2F;&#x2F; 事件注册\n     &#125;\n&#x2F;&#x2F;定义函数\nprivate void ShowCoin(int coin)\n    &#123;\n        if (coin !&#x3D; null &amp;&amp; coin&gt;0)\n        &#123;\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.SetText(&quot;+&quot;+coin);\n            timeLeft &#x3D; visibleTime;\n        &#125;\n        else\n        &#123;\n            Destroy(coinUI.gameObject);\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>调用事件</strong>：</p>\n<p><code>GameEvents.current.GameMessage()</code></p>\n<h4 id=\"固定时间后消失\"><a href=\"#固定时间后消失\" class=\"headerlink\" title=\"固定时间后消失\"></a>固定时间后消失</h4><p>当显示UI时初始化：<code>timeLeft = visibleTime;</code></p>\n<p>在<code>LateUpdate()</code>中：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">if (timeLeft &lt;&#x3D; 0)\n&#123;\n    coinUI.gameObject.SetActive(false);\n&#125;\nelse\n&#123;\n    timeLeft -&#x3D; Time.deltaTime;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h4 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h4><details>\n  <summary>CoinUI.cs</summary>\n\n  <pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">   public class CoinUI : MonoBehaviour\n&#123;\n    public GameObject coinPrefab;\n    public Transform coinPoint;\n    public float visibleTime;\n    public bool isVisible&#x3D;true;\n\n    private TextMeshProUGUI _textMeshProUGUI;\n    private float timeLeft;\n\n    Transform coinUI;\n    Transform cam;\n    BuildingController currentController;\n\n    private void Start()\n    &#123;\n        currentController &#x3D; GetComponent&lt;BuildingController&gt;();\n        currentController.onCoinShow +&#x3D; ShowCoin;    &#x2F;&#x2F; 事件注册\n        currentController.onCoinHide +&#x3D; HideCoin;    &#x2F;&#x2F; 事件注册\n        coinPoint &#x3D; transform.Find(&quot;CoinPoint&quot;);\n    &#125;\n\n    void OnEnable()\n    &#123;\n        cam &#x3D; Camera.main.transform;\n        foreach(Canvas canvas in FindObjectsOfType&lt;Canvas&gt;())\n        &#123;\n            if(canvas.renderMode &#x3D;&#x3D; RenderMode.WorldSpace)\n            &#123;\n                coinUI &#x3D; Instantiate(coinPrefab, canvas.transform).transform;\n                coinUI.gameObject.SetActive(false);\n                _textMeshProUGUI &#x3D; coinUI.transform.Find(&quot;Text&quot;).GetComponent&lt;TextMeshProUGUI&gt;();\n\n            &#125;\n        &#125;\n    &#125;\n    private void ShowCoin(int coin)\n    &#123;\n        Debug.Log(&quot;收入：&quot; + coin);\n        if (coin !&#x3D; null &amp;&amp; coin&gt;0)\n        &#123;\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.text&#x3D;&quot;+&quot;+coin;\n            timeLeft &#x3D; visibleTime;\n        &#125;\n        else\n        &#123;\n            Destroy(coinUI.gameObject);\n        &#125;\n    &#125;\n    private void HideCoin()\n    &#123;\n        coinUI.gameObject.SetActive(false);\n    &#125;\n\n    void LateUpdate()\n    &#123;\n        if (coinUI !&#x3D; null)\n        &#123;\n            coinUI.position &#x3D; coinPoint.position;\n            coinUI.forward &#x3D; cam.forward;\n\n            if (!isVisible)\n            &#123;\n                if (timeLeft &lt;&#x3D; 0)\n                &#123;\n                    HideCoin();\n                &#125;\n                else\n                &#123;\n                    timeLeft -&#x3D; Time.deltaTime;\n                &#125;\n            &#125;\n            \n        &#125;\n    &#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n\n\n\n<details>\n  <summary>CoinCount.cs</summary>\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#96;&#96;&#96;c#\n    public class CoinCount : MonoBehaviour\n&#123;\n    private TextMeshProUGUI _textMeshProUGUI;\n\n    &#x2F;&#x2F; Start is called before the first frame update\n    void Awake()\n    &#123;\n        _textMeshProUGUI &#x3D; transform.GetComponentsInChildren&lt;TextMeshProUGUI&gt;()[0];\n\n        &#x2F;&#x2F; 添加事件响应\n        GameEvents.current.onCoinCountChange +&#x3D; ChangeCoinCount;\n    &#125;\n\n    private void ChangeCoinCount(int coin)\n    &#123;\n        \n        int allCoin &#x3D; GameManager.getGM.Coin;\n        String str &#x3D; String.Format(&quot;经济值：&quot;+allCoin);\n        _textMeshProUGUI.SetText(str);\n        Debug.Log(&quot;剩余：&quot; + allCoin);\n    &#125;\n&#125;\n&#96;&#96;&#96;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n\n\n   \n\n\n\n\n\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"<h1 id=\"学习资料\"><a href=\"#学习资料\" class=\"headerlink\" title=\"学习资料\"></a>学习资料</h1><ul>\n<li><a href=\"https://space.bilibili.com/370283072/channel/seriesdetail?sid=211995\">Micael 的3DRPS游戏开发教程系列</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1b5411P7NE?p=2\">bilibili RTS建造系统开发教程</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1TK4y1g7Se/?spm_id_from=333.788.recommend_more_video.0\">【沙盒/经营/策略/生存游戏通用】网格建造系统</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1Vb4y1y7F5/?spm_id_from=333.788.recommend_more_video.1\">Unity教程 网格系列（一） 基于网格的建造系统 讲解&amp;演示&amp;源代码 下载即用</a></li>\n</ul>","more":"<h1 id=\"开始学习\"><a href=\"#开始学习\" class=\"headerlink\" title=\"开始学习\"></a>开始学习</h1><h2 id=\"代码结构设计\"><a href=\"#代码结构设计\" class=\"headerlink\" title=\"代码结构设计\"></a>代码结构设计</h2><h2 id=\"在Grid上建造\"><a href=\"#在Grid上建造\" class=\"headerlink\" title=\"在Grid上建造\"></a>在Grid上建造</h2><p>获取世界坐标，转化为网格的坐标，然后在对应的位置新建物体。</p>\n<h2 id=\"游戏数值管理\"><a href=\"#游戏数值管理\" class=\"headerlink\" title=\"游戏数值管理\"></a>游戏数值管理</h2><h3 id=\"保存数值：ScriptableObject\"><a href=\"#保存数值：ScriptableObject\" class=\"headerlink\" title=\"保存数值：ScriptableObject\"></a>保存数值：ScriptableObject</h3><p>新建脚本，继承<code>ScriptableObject</code>类。<br>另外需要在菜单中添加项，方便对每个数值新建一个SO。<br>下面以不同建筑的数值管理为例，新建脚本<code>BuildingData_SO.cs</code>，用来保存数值。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">[CreateAssetMenu(fileName&#x3D;&quot;BuildingData&quot;,menuName&#x3D; &quot;ScriptableObjects&#x2F;Building Status&quot;)]\npublic class BuildingData_SO : ScriptableObject\n&#123;\n    [Header(&quot;Building Info&quot;)]\n    public int green;\n    public int coin;\n    public int costCoin;\n    public int updateTime;\n\n    [Header(&quot;Other Info&quot;)]\n    public string intro;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>然后右键<code>ScriptableObjects/Building Status</code>，新建一个<code>ScriptableObjects</code>，然后修改名称和默认数值。如下图所示。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS%E5%BB%BA%E9%80%A0%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/image-20210728005217041-16274047480671.png\" alt=\"image-20210728005217041\"><em>一个数值模板</em></p>\n<h3 id=\"读取和修改数值\"><a href=\"#读取和修改数值\" class=\"headerlink\" title=\"读取和修改数值\"></a>读取和修改数值</h3><p>​    上面的类只能保存数值而不能挂在物体上，需要新建一个类，继承<code>MonoBehavior</code>类，然后读取上面的Data，对于每个数值新建类，添加get和set函数。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class BuildingStatus : MonoBehaviour\n&#123;\n    public BuildingData_SO buildingData;\n\n    #region Read from BuildingData_SO\n    public int BDGreen &#123;\n        get\n        &#123;\n            if (buildingData !&#x3D; null)\n            &#123;\n                return buildingData.green;\n            &#125;\n            else return 0;\n        &#125;\n        set\n        &#123;\n            buildingData.green &#x3D; value;\n        &#125;\n    &#125;\n    #endregion\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"UI跟随物体定位\"><a href=\"#UI跟随物体定位\" class=\"headerlink\" title=\"UI跟随物体定位\"></a>UI跟随物体定位</h3><blockquote>\n<p><a href=\"https://www.bilibili.com/video/BV1ew41197m1\">教程</a></p>\n</blockquote>\n<h4 id=\"Canvas设置\"><a href=\"#Canvas设置\" class=\"headerlink\" title=\"Canvas设置\"></a>Canvas设置</h4><p>新建Canvas，首先要设置Canvas的渲染模式。默认渲染模式是Overlay，需要改成WorldSpace。记得把主摄像机拖进来。</p>\n<p>然后重置canvas的位置。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS%E5%BB%BA%E9%80%A0%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/image-20210728183939840-16274687829251.png\" alt=\"image-20210728183939840\"></p>\n<p>然后在Canvas中新建UI，调整坐标和缩放，放置于需要放置的物体上。然后把该UI拖到资源文件夹中变成Prefab，删去检视视图中的UI。</p>\n<p>对于每个建筑的Prefab，在里面新增一个空的子物体，标记每种建筑的UI 需要显示的位置。如下图所示。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-07-26-RTS%E5%BB%BA%E9%80%A0%E7%B3%BB%E7%BB%9F%E5%BC%80%E5%8F%91%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/image-20210728185002113-16274694030602.png\" alt=\"image-20210728185002113\"></p>\n<h4 id=\"设置UI位置和朝向相机\"><a href=\"#设置UI位置和朝向相机\" class=\"headerlink\" title=\"设置UI位置和朝向相机\"></a>设置UI位置和朝向相机</h4><div class=\"warning\">\n\n<blockquote>\n<p>注意下述语句需要在<code>LateUpdate()</code>中执行</p>\n</blockquote>\n</div>\n\n<p>UI位置使用<code>coinUI.position = coinPoint.position;</code></p>\n<p>获取主摄像机的transform，朝向相机直接用语句<code>coinUI.forward = -cam.forward;</code></p>\n<hr>\n<h4 id=\"添加事件Action\"><a href=\"#添加事件Action\" class=\"headerlink\" title=\"添加事件Action\"></a>添加事件Action</h4><p>在<code>GameEvent.cs</code>中统一管理游戏事件。GameEvent是一个单例，也就是说只有一个GameEvent对象，所以用来管理UI的出现等等事件。</p>\n<p>对于每个对象本身的事件，则写在对象的脚本中。</p>\n<blockquote>\n<p>Action 是对委托的一种封装，可以直接对Action进行+=和-=操作</p>\n</blockquote>\n<p>以一部分代码为例：使用<code>public event Action&lt;String&gt; onGameMessage</code>定义Action。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class GameEvents : MonoBehaviour\n&#123;   \n    &#x2F;&#x2F; 单例\n    public static GameEvents current;\n    \n    private void Awake()\n    &#123;\n        current &#x3D; this;\n    &#125;\n    \n    &#x2F;&#x2F; 广播游戏消息（UI显示）\n    public event Action&lt;String&gt; onGameMessage;\n    public void GameMessage(String message)\n    &#123;\n        if (onGameMessage !&#x3D; null)\n        &#123;\n            onGameMessage(message);\n        &#125;    \n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后在其他脚本中可以进行<strong>事件注册</strong>：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">private void Awake()\n    &#123;\n        GameEvents.current.onCoinShow +&#x3D; ShowCoin;    &#x2F;&#x2F; 事件注册\n     &#125;\n&#x2F;&#x2F;定义函数\nprivate void ShowCoin(int coin)\n    &#123;\n        if (coin !&#x3D; null &amp;&amp; coin&gt;0)\n        &#123;\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.SetText(&quot;+&quot;+coin);\n            timeLeft &#x3D; visibleTime;\n        &#125;\n        else\n        &#123;\n            Destroy(coinUI.gameObject);\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>调用事件</strong>：</p>\n<p><code>GameEvents.current.GameMessage()</code></p>\n<h4 id=\"固定时间后消失\"><a href=\"#固定时间后消失\" class=\"headerlink\" title=\"固定时间后消失\"></a>固定时间后消失</h4><p>当显示UI时初始化：<code>timeLeft = visibleTime;</code></p>\n<p>在<code>LateUpdate()</code>中：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">if (timeLeft &lt;&#x3D; 0)\n&#123;\n    coinUI.gameObject.SetActive(false);\n&#125;\nelse\n&#123;\n    timeLeft -&#x3D; Time.deltaTime;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<hr>\n<h4 id=\"完整代码\"><a href=\"#完整代码\" class=\"headerlink\" title=\"完整代码\"></a>完整代码</h4><details>\n  <summary>CoinUI.cs</summary>\n\n  <pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">   public class CoinUI : MonoBehaviour\n&#123;\n    public GameObject coinPrefab;\n    public Transform coinPoint;\n    public float visibleTime;\n    public bool isVisible&#x3D;true;\n\n    private TextMeshProUGUI _textMeshProUGUI;\n    private float timeLeft;\n\n    Transform coinUI;\n    Transform cam;\n    BuildingController currentController;\n\n    private void Start()\n    &#123;\n        currentController &#x3D; GetComponent&lt;BuildingController&gt;();\n        currentController.onCoinShow +&#x3D; ShowCoin;    &#x2F;&#x2F; 事件注册\n        currentController.onCoinHide +&#x3D; HideCoin;    &#x2F;&#x2F; 事件注册\n        coinPoint &#x3D; transform.Find(&quot;CoinPoint&quot;);\n    &#125;\n\n    void OnEnable()\n    &#123;\n        cam &#x3D; Camera.main.transform;\n        foreach(Canvas canvas in FindObjectsOfType&lt;Canvas&gt;())\n        &#123;\n            if(canvas.renderMode &#x3D;&#x3D; RenderMode.WorldSpace)\n            &#123;\n                coinUI &#x3D; Instantiate(coinPrefab, canvas.transform).transform;\n                coinUI.gameObject.SetActive(false);\n                _textMeshProUGUI &#x3D; coinUI.transform.Find(&quot;Text&quot;).GetComponent&lt;TextMeshProUGUI&gt;();\n\n            &#125;\n        &#125;\n    &#125;\n    private void ShowCoin(int coin)\n    &#123;\n        Debug.Log(&quot;收入：&quot; + coin);\n        if (coin !&#x3D; null &amp;&amp; coin&gt;0)\n        &#123;\n            coinUI.gameObject.SetActive(true);\n            _textMeshProUGUI.text&#x3D;&quot;+&quot;+coin;\n            timeLeft &#x3D; visibleTime;\n        &#125;\n        else\n        &#123;\n            Destroy(coinUI.gameObject);\n        &#125;\n    &#125;\n    private void HideCoin()\n    &#123;\n        coinUI.gameObject.SetActive(false);\n    &#125;\n\n    void LateUpdate()\n    &#123;\n        if (coinUI !&#x3D; null)\n        &#123;\n            coinUI.position &#x3D; coinPoint.position;\n            coinUI.forward &#x3D; cam.forward;\n\n            if (!isVisible)\n            &#123;\n                if (timeLeft &lt;&#x3D; 0)\n                &#123;\n                    HideCoin();\n                &#125;\n                else\n                &#123;\n                    timeLeft -&#x3D; Time.deltaTime;\n                &#125;\n            &#125;\n            \n        &#125;\n    &#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n\n\n\n<details>\n  <summary>CoinCount.cs</summary>\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#96;&#96;&#96;c#\n    public class CoinCount : MonoBehaviour\n&#123;\n    private TextMeshProUGUI _textMeshProUGUI;\n\n    &#x2F;&#x2F; Start is called before the first frame update\n    void Awake()\n    &#123;\n        _textMeshProUGUI &#x3D; transform.GetComponentsInChildren&lt;TextMeshProUGUI&gt;()[0];\n\n        &#x2F;&#x2F; 添加事件响应\n        GameEvents.current.onCoinCountChange +&#x3D; ChangeCoinCount;\n    &#125;\n\n    private void ChangeCoinCount(int coin)\n    &#123;\n        \n        int allCoin &#x3D; GameManager.getGM.Coin;\n        String str &#x3D; String.Format(&quot;经济值：&quot;+allCoin);\n        _textMeshProUGUI.SetText(str);\n        Debug.Log(&quot;剩余：&quot; + allCoin);\n    &#125;\n&#125;\n&#96;&#96;&#96;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>"},{"title":"2021-07-26-总结","date":"2021-07-26T16:41:47.000Z","password":130024,"_content":"\n### 总结\n\n  今天算是这周以来最有进度的一天，没怎么睡觉把网站搭了出来，也算是一个比较艰难的开头。这两天生活可以说是一团糟，创建这个博客某种意义上说也是希望自己的生活能重新走上正轨。关于感情问题，自己也要想想清楚。\n\n  另外虽然游戏开发这边没什么进展，但是大致看了一下原本的逻辑结构。明天需要确定整体代码框架，然后把碳指标和经济消耗的部分加入进去。另外游戏时间管理不知道要不要另外写，还是要再看看教程。\n\n### 展望\n\n- [ ] 生贺图线稿\n- [ ] 做完数值消耗这些东西\n\n  还剩七天，生日贺图最好能在3天内画完一张，想画大天使和phenomenon。明天画一半线稿。预计时长8h。\n\n明天试着把碳消耗那些功能实现一下。预计时长8h。\n\n***\n### 一些其他思考\n\n微博一些公知老喜欢把问题全部归咎于粉圈，其实某种程度上是一种傲慢的心态和向真正的强权资本低头的表现。另外，对粉圈表现出反感不仅能够让他们获得更高的流量，也更容易有类似的傲慢的人赞同。\n\n如今是一个“流量”和“大数据”的时代，流量在这个时代，往往意味着能够快速变现为商业价值。人气高的流量就大，其商业价值和影响力往往也就更大。不谈娱乐圈，放在其他圈层也是一样。所谓的“网红”们也是在通过视频等方式来积累更高的人气，进行变现。\n\n而获得人气的方法，最快速的就是所谓颜值。另外一些有趣的高质量内容同样可以收获大批流量。何同学也是如此，他如今已是坐拥几百万粉丝的up主，每条视频都有很高的人气。\n\n高人气是否意味着饭圈化？\n是什么导致了现在的氛围？\n面对此应该如何看待？\n怎么学习？怎么利用？","source":"_posts/2021-07-26-日记.md","raw":"---\ntitle: 2021-07-26-总结\ndate: 2021-07-27 00:41:47\npassword: 130024\ntags:\ncategories:\n  - 日记\n---\n\n### 总结\n\n  今天算是这周以来最有进度的一天，没怎么睡觉把网站搭了出来，也算是一个比较艰难的开头。这两天生活可以说是一团糟，创建这个博客某种意义上说也是希望自己的生活能重新走上正轨。关于感情问题，自己也要想想清楚。\n\n  另外虽然游戏开发这边没什么进展，但是大致看了一下原本的逻辑结构。明天需要确定整体代码框架，然后把碳指标和经济消耗的部分加入进去。另外游戏时间管理不知道要不要另外写，还是要再看看教程。\n\n### 展望\n\n- [ ] 生贺图线稿\n- [ ] 做完数值消耗这些东西\n\n  还剩七天，生日贺图最好能在3天内画完一张，想画大天使和phenomenon。明天画一半线稿。预计时长8h。\n\n明天试着把碳消耗那些功能实现一下。预计时长8h。\n\n***\n### 一些其他思考\n\n微博一些公知老喜欢把问题全部归咎于粉圈，其实某种程度上是一种傲慢的心态和向真正的强权资本低头的表现。另外，对粉圈表现出反感不仅能够让他们获得更高的流量，也更容易有类似的傲慢的人赞同。\n\n如今是一个“流量”和“大数据”的时代，流量在这个时代，往往意味着能够快速变现为商业价值。人气高的流量就大，其商业价值和影响力往往也就更大。不谈娱乐圈，放在其他圈层也是一样。所谓的“网红”们也是在通过视频等方式来积累更高的人气，进行变现。\n\n而获得人气的方法，最快速的就是所谓颜值。另外一些有趣的高质量内容同样可以收获大批流量。何同学也是如此，他如今已是坐拥几百万粉丝的up主，每条视频都有很高的人气。\n\n高人气是否意味着饭圈化？\n是什么导致了现在的氛围？\n面对此应该如何看待？\n怎么学习？怎么利用？","slug":"2021-07-26-日记","published":1,"updated":"2021-07-27T17:08:11.718Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cks336nq100071svo9ztjbu6t","content":"<div class=\"hbe hbe-container\" id=\"hexo-blog-encrypt\" data-wpm=\"Oh, this is an invalid password. Check and try again, please.\" data-whm=\"OOPS, these decrypted content may changed, but you can still have a look.\">\n  <script id=\"hbeData\" type=\"hbeData\" data-hmacdigest=\"d7f99c2537cffd890049af17f6630b85a796c1e23a6751e22ade78f4c218a6c9\">3e465fd97ca21e2c34553ed0afce514f2838e22180dcd32b584036fa5c2fd7c66b2693a1f9e0b05766f1eac2e28d61e4b30889ab3f85f015a91f55342c6007b94e695a948a20142df35762c549ca337290a9b202e8e1b72b511d8f455ae4d7033c05eb313ee19fded266e4d812e30a7899cc8a6b3abf49ab194d30e186face81b90445144b45b7f41b0012f90a29b8f375531232852ea6511aef2a71b6b4a2b90ee91c9ad7afe422f8744706c25e93beefff33aaf4d54e46e98f16a85d8c666dbf29abab38c6f78076a8c3f53b34d50a52dd8b2e4bd4ce949267252b243154990840c634410586099ae7d360581acbd4036a6fd7a9c6a858f965992f15c9077415c79f587f390e0ce078c7f916af64414612384a765abd3a283fd26769f6ae720778e04644670ed29e4d111a2a3aa1e0c02c02130e502e18a5a69a383cdfde0e02db3245ffbcf97062d70f6c5e6ce2fe473341e6d433067ff054ced0be5d099759b5699503ff817839b358449fdd3e8cca5cf3ab8da5d87103e9dcecc34ba72d6e6621a32d9bb5899774927d300beee8ac2767c3afcd3a493f8dec4c681a4cd871de07fbe422e0f6381e0ee5b2f3a7b24a588047132bb4cf8d6f25162d87f38a97d1393d24800e6f4c73e5116084f1e4dcf4b5cd958cf0d6db5dc87820bc4281dba606d1b5c58335f40b3c0a3da980249ff916650853c13bec8afeb651bdc679d58f9278ea54484a4d0c54b2d022ac3e4002e88c86b8df427995f54110374337287d2d1577e9d12a5a238da63eef8e1689e019a31de6ae1dac70174ac2dc0e636ae1425fdb6ba3ae42cc088688d119b0e73af1e0092a934d5fcbb56c59baac3967d6c82e867e89714b7fc4b55786cb094a0c55911f0518bb456a9ae4ff27fade6b60ba301e4039bb8cc152c4c99167bd8c4df0a4468a15c75e3b723574b13e0e46d433f4c5e56929d95ee3003599e2ea54a6e361495a859922703bd2be3420c3945f0ad6263a618f9f2149eafcd5a7060e3f201eddc4df34f91453be68c05bedb8bf47b2885e37c8cbc25df79f86a08326608b5eeccaaad751b5d6cd4d9a4c3ff59404a96a5dab1712912ce13326bfc03606da124e83f8ba86a350a11fb22a44a4054a1d46e4036e7478ca75701e22a0269eeb9674b50a577f2bf6bf76792475fc9f6165b481c07c8a596465c5ba31b390ba17a73ac58c8beffabde29a6d807c8506553a9be9c8a4e7bf523e20bd0dd3da20f51060c97d7efb91974a617f66544b1ea004016d07a267fe385b6ed08f73755f8643b78e55f741ed47bb20fa91af2900173508e8a1509eecb6ed15cd04d506178d1bfd9d3dc87c831602b0b8d68b69acaca957e9eeedad350d2c98ca16daa9f72207e0de42efeef423399a1a9bd2737fc3d4973bec703f5f5f299a0ba828b10f3fb99781b33dbb4a26d0b56f50a7afd0fb1976d1f8462b99abb1852d1474802e651ac7888b0b544306cfd16af1423564dbe18e230d8258169a871e3699dcefd0dd51260da14d6899cc43b2a79c6b61383a68ff3bad2dd869458471fcc572f76c1de9f508cebcce744d8b9bb32848506caae0a90cc957e4ce1cc4e08052a4d82ae4d750b19a1b99e8ce1bad8cf6b0cc50861492b607087f42b80f9ce825194a73bf46e39273d0313921eb08b6a62c3d1a213789314f960cb3ead91f6af3a310d16d9e2561055e94e13d130e3d2d2bdc72c38e9ea3f6a1d978628732bb60ff36eed0b570dd01f2af600cf6369b7f8defaafadef3d33750308c8dc555962fd08f62424bd007e366ffa75fde8984bb670130dd97f0c1e89135db4f378708171b8f9af6e9e65504727d363110d28a1d10a8e1c522414f75bb0822004d9b5919d01eb6ede83a996a844d5b6734acf5da8c236eeec6e73907c9f93a72fd4badf4ce71459a06eef61258a43f37ba2228ed9662e5519fe9acace1bbef6309822475e4f966f0ac7c5952dcb4cba6a2237ef445588e90b8f7f0305425d71ce92a05ac6b701dee340bfb3c9ae2687f3842c3df849473fb0365cbfb122dab0cc9fc351d1362d2aa7f1369d04ee7fe66192d00574b193cc5b53abed251098dc5adcb4df4a233ee6ad49b7245de0e102d0ae5b2574d876fc49f53c8e3728b91dd78635759a716d42328f736e5734c5bdd9792cd8f0f2e1e726245cf95b5060322836cef16a3838d26dfb2ef5460123657dca55d67ed8893061c68f08b6b9cfa5755235873508dc50cc17c3b197679aedce5f22fb46aa4cc3f9f62b286419427495856f6cc200f207726e70a81a435a7d1ed1f98c76f8fc534b02b5a27e1e8502fb87063f1f1cc7a47296995130a5f47f7030fe16afce43aff744b77e89c68e04ab18ad927ca59a486d6d615d51dcc2296970e928a14a8b9bd1dedbe0f5ed3468f8da0dc981706b72a64c6e1308fc4f121ac703d10e662c28296e749cf2e0664eeb3e15d33d608c262fc9d1b51d172ece629503b0347c583e8e90092efcba031affcc75c1ba7771f95b6efefe3dbe502a0b4e4528caad97f1b4de4a4a536c7623da0784b45ff954fbe4bee09a51dd0a42da03bf3a03e268350034e260a82ad4f4229ad794e755db87e10a3f942a41c2da9216d0799218c7173c06c4bd8ebab75d2ab2909861b03d7398bf8feec5c799ac200c74b89b0d1228ff9816a571d3fa8e32d42e46eecf64b76cbcdddf328490e27e384f96b3480233a04f4aaeb3464f67de494d52c04a2f26ba8ee98d579cc07398b018d8f02635975b6db11d28632d0b698d0fcd9fd1b9c8ada4551ba5c9ad2e72f8c1edd7d2eb9c5bd857191b66aa0194e83382ad05083049896b37d5388cac55443e011435dc55884c62c10a571f6df8619c1d199f3c02e1f37d504bc08a34f08661e628048bdb810b8aa0fd1f8cf34abdd6e9ded56f4144f8ef7a6a69c195b359f72743837d92985e147576209f329d656a05c6b2fbd3a62857e9798008a38a21e8a13487b2bfed15175d5b418b9c472f821a4aad08911f8a7767342464225bad639c98884c56853776e433bd22f30d597447088c323bf9b5477260b5a28137da2b79024e232a6c783bb1d30d53fd01acc9b5b46100ab1aab59a57bd04c8cf2823c5dff266db5e275f2521635e65aef59a91f5f600d782f0209ef3a1d7937539edf927cd561fe369c10cdf95ce73b0bc0290f52bbe6558dcb14db1edf7f63bba958f539c6416166189cd9b343fa5e1700a68c54652e7e6dcc30b009f160b47f329342b8f8c73571c36e2707ffaeaccb9a6b704a31bad8dfda3be5dfe98962609391903358a4e8e6fe4f5457c64c926c54e6911ee</script>\n  <div class=\"hbe hbe-content\">\n    <div class=\"hbe hbe-input hbe-input-default\">\n      <input class=\"hbe hbe-input-field hbe-input-field-default\" type=\"password\" id=\"hbePass\">\n      <label class=\"hbe hbe-input-label hbe-input-label-default\" for=\"hbePass\">\n        <span class=\"hbe hbe-input-label-content hbe-input-label-content-default\">Hey, password is required here.</span>\n      </label>\n    </div>\n  </div>\n</div>\n<script data-pjax src=\"/lib/hbe.js\"></script><link href=\"/css/hbe.style.css\" rel=\"stylesheet\" type=\"text/css\">","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"Here's something encrypted, password is required to continue reading.","more":"Here's something encrypted, password is required to continue reading.","origin":"<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>  今天算是这周以来最有进度的一天，没怎么睡觉把网站搭了出来，也算是一个比较艰难的开头。这两天生活可以说是一团糟，创建这个博客某种意义上说也是希望自己的生活能重新走上正轨。关于感情问题，自己也要想想清楚。</p>\n<p>  另外虽然游戏开发这边没什么进展，但是大致看了一下原本的逻辑结构。明天需要确定整体代码框架，然后把碳指标和经济消耗的部分加入进去。另外游戏时间管理不知道要不要另外写，还是要再看看教程。</p>\n<h3 id=\"展望\"><a href=\"#展望\" class=\"headerlink\" title=\"展望\"></a>展望</h3><ul>\n<li><p><input disabled=\"\" type=\"checkbox\">  生贺图线稿</p>\n</li>\n<li><p><input disabled=\"\" type=\"checkbox\">  做完数值消耗这些东西</p>\n<p>还剩七天，生日贺图最好能在3天内画完一张，想画大天使和phenomenon。明天画一半线稿。预计时长8h。</p>\n</li>\n</ul>\n<p>明天试着把碳消耗那些功能实现一下。预计时长8h。</p>\n<hr>\n<h3 id=\"一些其他思考\"><a href=\"#一些其他思考\" class=\"headerlink\" title=\"一些其他思考\"></a>一些其他思考</h3><p>微博一些公知老喜欢把问题全部归咎于粉圈，其实某种程度上是一种傲慢的心态和向真正的强权资本低头的表现。另外，对粉圈表现出反感不仅能够让他们获得更高的流量，也更容易有类似的傲慢的人赞同。</p>\n<p>如今是一个“流量”和“大数据”的时代，流量在这个时代，往往意味着能够快速变现为商业价值。人气高的流量就大，其商业价值和影响力往往也就更大。不谈娱乐圈，放在其他圈层也是一样。所谓的“网红”们也是在通过视频等方式来积累更高的人气，进行变现。</p>\n<p>而获得人气的方法，最快速的就是所谓颜值。另外一些有趣的高质量内容同样可以收获大批流量。何同学也是如此，他如今已是坐拥几百万粉丝的up主，每条视频都有很高的人气。</p>\n<p>高人气是否意味着饭圈化？<br>是什么导致了现在的氛围？<br>面对此应该如何看待？<br>怎么学习？怎么利用？</p>\n","encrypt":true},{"title":"2021-07-26-第一篇博客","date":"2021-07-25T23:09:04.000Z","created_at":true,"aplayer":true,"_content":"\n> 今天试着用hexo建立了自己的第一个静态博客，想试着写一写技术文档。\n\n{% meting \"16435050\" \"netease\" \"song\" \"theme:#C20C0C\" %}\n\n<!-- more -->\n\n## 博客创建\n\n[Hexo文档](https://hexo.io/zh-cn/docs)\n\n[模板使用](https://yun.yunyoujun.cn/guide/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B)\n\n[新手操作 含命令](https://www.yunyoujun.cn/share/how-to-build-your-site/)\n\n[代码高亮](https://www.awesomes.cn/repo/PrismJS/prism)\n\n[对博客加密](https://zhuanlan.zhihu.com/p/113235573)\n\n## MarkDown语法\n\n[MarkDown库](https://github.com/younghz/Markdown)\n\n[MarkDown菜鸟教程](https://www.runoob.com/markdown/md-tutorial.html)\n\n[样式扩展](https://www.yunyoujun.cn/yun/markdown.html)\n\n\n## 部分命令\n<div class=\"success\">\n\n> 运行\n\n</div>\n\n\n``` bash\n$ npx hexo server\n```\n\n生成静态文件\n``` bash\n$ npx hexo g\n$ npx hexo clean\n```\n部署\n``` bash\n$ npx hexo deploy\n```\n{% img https://z3.ax1x.com/2021/07/26/Wf9fjH.jpg %}\n\n\n\n每次更新：\n\n```bash\n$ sh update.sh\n```\n\n\n\n图片链接前缀：\n\nhttps://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images\n","source":"_posts/2021-07-26-第一篇博客.md","raw":"---\ntitle: 2021-07-26-第一篇博客\ndate: 2021-07-26 07:09:04\ncreated_at: true\naplayer: true\ntags:\n  - hexo\ncategories:\n  - 比较杂的知识点\n---\n\n> 今天试着用hexo建立了自己的第一个静态博客，想试着写一写技术文档。\n\n{% meting \"16435050\" \"netease\" \"song\" \"theme:#C20C0C\" %}\n\n<!-- more -->\n\n## 博客创建\n\n[Hexo文档](https://hexo.io/zh-cn/docs)\n\n[模板使用](https://yun.yunyoujun.cn/guide/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B)\n\n[新手操作 含命令](https://www.yunyoujun.cn/share/how-to-build-your-site/)\n\n[代码高亮](https://www.awesomes.cn/repo/PrismJS/prism)\n\n[对博客加密](https://zhuanlan.zhihu.com/p/113235573)\n\n## MarkDown语法\n\n[MarkDown库](https://github.com/younghz/Markdown)\n\n[MarkDown菜鸟教程](https://www.runoob.com/markdown/md-tutorial.html)\n\n[样式扩展](https://www.yunyoujun.cn/yun/markdown.html)\n\n\n## 部分命令\n<div class=\"success\">\n\n> 运行\n\n</div>\n\n\n``` bash\n$ npx hexo server\n```\n\n生成静态文件\n``` bash\n$ npx hexo g\n$ npx hexo clean\n```\n部署\n``` bash\n$ npx hexo deploy\n```\n{% img https://z3.ax1x.com/2021/07/26/Wf9fjH.jpg %}\n\n\n\n每次更新：\n\n```bash\n$ sh update.sh\n```\n\n\n\n图片链接前缀：\n\nhttps://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images\n","slug":"2021-07-26-第一篇博客","published":1,"updated":"2021-08-08T10:49:15.872Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cks336nq4000a1svof9sg9kpi","content":"<blockquote>\n<p>今天试着用hexo建立了自己的第一个静态博客，想试着写一写技术文档。</p>\n</blockquote>\n\n    <div id=\"aplayer-Bjyasjdl\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"16435050\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#C20C0C\"\n    ></div>\n\n<span id=\"more\"></span>\n\n<h2 id=\"博客创建\"><a href=\"#博客创建\" class=\"headerlink\" title=\"博客创建\"></a>博客创建</h2><p><a href=\"https://hexo.io/zh-cn/docs\">Hexo文档</a></p>\n<p><a href=\"https://yun.yunyoujun.cn/guide/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\">模板使用</a></p>\n<p><a href=\"https://www.yunyoujun.cn/share/how-to-build-your-site/\">新手操作 含命令</a></p>\n<p><a href=\"https://www.awesomes.cn/repo/PrismJS/prism\">代码高亮</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/113235573\">对博客加密</a></p>\n<h2 id=\"MarkDown语法\"><a href=\"#MarkDown语法\" class=\"headerlink\" title=\"MarkDown语法\"></a>MarkDown语法</h2><p><a href=\"https://github.com/younghz/Markdown\">MarkDown库</a></p>\n<p><a href=\"https://www.runoob.com/markdown/md-tutorial.html\">MarkDown菜鸟教程</a></p>\n<p><a href=\"https://www.yunyoujun.cn/yun/markdown.html\">样式扩展</a></p>\n<h2 id=\"部分命令\"><a href=\"#部分命令\" class=\"headerlink\" title=\"部分命令\"></a>部分命令</h2><div class=\"success\">\n\n<blockquote>\n<p>运行</p>\n</blockquote>\n</div>\n\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ npx hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>生成静态文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ npx hexo g\n$ npx hexo clean<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>部署</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ npx hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<img src=\"https://z3.ax1x.com/2021/07/26/Wf9fjH.jpg\" class=\"\" loading=\"lazy\">\n\n\n\n<p>每次更新：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sh</span> update.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p>图片链接前缀：</p>\n<p><a href=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images\">https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images</a></p>\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"<blockquote>\n<p>今天试着用hexo建立了自己的第一个静态博客，想试着写一写技术文档。</p>\n</blockquote>\n\n    <div id=\"aplayer-Bjyasjdl\" class=\"aplayer aplayer-tag-marker meting-tag-marker\"\n         data-id=\"16435050\" data-server=\"netease\" data-type=\"song\" data-mode=\"circulation\" data-autoplay=\"false\" data-mutex=\"true\" data-listmaxheight=\"340px\" data-preload=\"auto\" data-theme=\"#C20C0C\"\n    ></div>","more":"<h2 id=\"博客创建\"><a href=\"#博客创建\" class=\"headerlink\" title=\"博客创建\"></a>博客创建</h2><p><a href=\"https://hexo.io/zh-cn/docs\">Hexo文档</a></p>\n<p><a href=\"https://yun.yunyoujun.cn/guide/#%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B\">模板使用</a></p>\n<p><a href=\"https://www.yunyoujun.cn/share/how-to-build-your-site/\">新手操作 含命令</a></p>\n<p><a href=\"https://www.awesomes.cn/repo/PrismJS/prism\">代码高亮</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/113235573\">对博客加密</a></p>\n<h2 id=\"MarkDown语法\"><a href=\"#MarkDown语法\" class=\"headerlink\" title=\"MarkDown语法\"></a>MarkDown语法</h2><p><a href=\"https://github.com/younghz/Markdown\">MarkDown库</a></p>\n<p><a href=\"https://www.runoob.com/markdown/md-tutorial.html\">MarkDown菜鸟教程</a></p>\n<p><a href=\"https://www.yunyoujun.cn/yun/markdown.html\">样式扩展</a></p>\n<h2 id=\"部分命令\"><a href=\"#部分命令\" class=\"headerlink\" title=\"部分命令\"></a>部分命令</h2><div class=\"success\">\n\n<blockquote>\n<p>运行</p>\n</blockquote>\n</div>\n\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ npx hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>生成静态文件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ npx hexo g\n$ npx hexo clean<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>部署</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ npx hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<img src=\"https://z3.ax1x.com/2021/07/26/Wf9fjH.jpg\" class=\"\">\n\n\n\n<p>每次更新：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ <span class=\"token function\">sh</span> update.sh<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n\n\n<p>图片链接前缀：</p>\n<p><a href=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images\">https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images</a></p>"},{"title":"2021-07-30-3d辅助作画尝试","date":"2021-07-29T23:09:04.000Z","created_at":true,"aplayer":true,"_content":"# 使用软件\n\nblender\n\nDaz\n\n## 安装Daz\n\n[安装教程](https://blog.csdn.net/weixin_38450652/article/details/105514141)\n\n> 记得要安装Installer manager\n>\n> 安装新的资源时将规定名称的压缩包放入对应的文件夹中，然后安装。\n\n### 安装Daz导入maya插件\n\n从淘宝买了一个支持maya2019版本的插件，直接安装即可。\n\n<!-- more -->\n\n","source":"_posts/2021-07-30-3d辅助作画尝试.md","raw":"---\ntitle: 2021-07-30-3d辅助作画尝试\ndate: 2021-07-30 07:09:04\ncreated_at: true\naplayer: true\ntags:\n  - 3d辅助\n  - Daz\ncategories:\n  - 画画笔记\n---\n# 使用软件\n\nblender\n\nDaz\n\n## 安装Daz\n\n[安装教程](https://blog.csdn.net/weixin_38450652/article/details/105514141)\n\n> 记得要安装Installer manager\n>\n> 安装新的资源时将规定名称的压缩包放入对应的文件夹中，然后安装。\n\n### 安装Daz导入maya插件\n\n从淘宝买了一个支持maya2019版本的插件，直接安装即可。\n\n<!-- more -->\n\n","slug":"2021-07-30-3d辅助作画尝试","published":1,"updated":"2021-08-08T10:01:25.561Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cks336nq5000b1svofekxh3u3","content":"<h1 id=\"使用软件\"><a href=\"#使用软件\" class=\"headerlink\" title=\"使用软件\"></a>使用软件</h1><p>blender</p>\n<p>Daz</p>\n<h2 id=\"安装Daz\"><a href=\"#安装Daz\" class=\"headerlink\" title=\"安装Daz\"></a>安装Daz</h2><p><a href=\"https://blog.csdn.net/weixin_38450652/article/details/105514141\">安装教程</a></p>\n<blockquote>\n<p>记得要安装Installer manager</p>\n<p>安装新的资源时将规定名称的压缩包放入对应的文件夹中，然后安装。</p>\n</blockquote>\n<h3 id=\"安装Daz导入maya插件\"><a href=\"#安装Daz导入maya插件\" class=\"headerlink\" title=\"安装Daz导入maya插件\"></a>安装Daz导入maya插件</h3><p>从淘宝买了一个支持maya2019版本的插件，直接安装即可。</p>\n<span id=\"more\"></span>\n\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"<h1 id=\"使用软件\"><a href=\"#使用软件\" class=\"headerlink\" title=\"使用软件\"></a>使用软件</h1><p>blender</p>\n<p>Daz</p>\n<h2 id=\"安装Daz\"><a href=\"#安装Daz\" class=\"headerlink\" title=\"安装Daz\"></a>安装Daz</h2><p><a href=\"https://blog.csdn.net/weixin_38450652/article/details/105514141\">安装教程</a></p>\n<blockquote>\n<p>记得要安装Installer manager</p>\n<p>安装新的资源时将规定名称的压缩包放入对应的文件夹中，然后安装。</p>\n</blockquote>\n<h3 id=\"安装Daz导入maya插件\"><a href=\"#安装Daz导入maya插件\" class=\"headerlink\" title=\"安装Daz导入maya插件\"></a>安装Daz导入maya插件</h3><p>从淘宝买了一个支持maya2019版本的插件，直接安装即可。</p>","more":""},{"title":"2021-08-06-小学期建造游戏Demo开发笔记（二）","date":"2021-08-06T12:51:37.000Z","_content":"\n# 重载当前的Scene\n\n```c#\nusing UnityEngine.SceneManagement;\n\npublic void restart()\n    {\n        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n    }\n```\n\n退出游戏：\n\n```c#\npublic void EndGame()\n    {\n        Application.Quit();\n    }\n```\n\n \n\n<!-- more -->\n\n# Game Manager\n\n>  由于“游戏管理器”控制的都是整个游戏中一些共有的信息，所以我们不会同时需要两个游戏管理器，因此游戏管理器将是一个单例对象。\n\n单例模式：\n\n创建一个静态对象`static GameManager current`\n\n直接在Awake里定义gm为this：\n\n```c#\nprivate void Awake()\n    {\n        current = this;\n    }\n```\n\n然后直接用`GameManager.current`即可调用里面的变量和函数。\n\n\n\n# UI\n\n#### 新建UI\n\n<div class=\"warning\">\n\n> 注意需要修改Canvas的设置，否则调整比例后位置可能会错乱。默认是constant with pixel size\n\n</div>\n\n![image-20210808163903666](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-小学期建造游戏Demo开发笔记（二）/image-20210808163903666-16284119455091.png)\n\n\n\n![image-20210808174522165](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-小学期建造游戏Demo开发笔记（二）/image-20210808174522165-16284159238313.png)_设置界面UI_\n\n<div class=\"warning\">\n\n> 注意当给GUI控件挂事件回调函数时，要选择上面Dynamic String的，不能选择下面静态变量。\n\n</div>\n\n#### 想要让Panel暂时隐藏或显示？\n\n注意不能漏任何组件，否则可能无法交互。\n\n![image-20210808164106909](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-小学期建造游戏Demo开发笔记（二）/image-20210808164106909-16284120682902.png)\n\n以TipUI为例：\n\n获取`CanvasGroup`组件，设置它的透明度、可交互、可被射线撞击等等属性。\n\n```c#\npublic class TipUI : MonoBehaviour\n{\n    private CanvasGroup _canvasGroup;\n    private Node _currentNode;\n    public Text tipText;\n    // Start is called before the first frame update\n    void Start()\n    {\n        _canvasGroup = gameObject.GetComponent<CanvasGroup>();//获得组件\n        GameEvents.current.onOpenTipGUI += OpenTip;\n    }\n    //显示\n    private void OpenTip(int cost,Node node)\n    {\n        _canvasGroup.alpha = 1;\n        _canvasGroup.interactable = true;\n        _canvasGroup.blocksRaycasts = true;\n\n        tipText.text = \"开发该地块需要\"+cost+\"经济值，是否开发？\";\n        _currentNode = node;\n    }\n\n    public void UnlockNode()\n    {\n        Debug.Log(\"是\");\n        _currentNode.Unlock();\n        HideTip();\n    }\n    //隐藏\n    public void HideTip()\n    {\n        _canvasGroup.alpha = 0;\n        _canvasGroup.interactable = false;\n        _canvasGroup.blocksRaycasts = false;\n    }\n}\n```\n\n然后只要调用函数`GameEvents.current.OpenTipGUI()`即可控制显示。\n\n\n\n\n\n# 状态切换\n\n使用`BuildingController.cs`来管理建筑的状态。\n\n先定义枚举状态：`public enum BuildingStates { WORKING,WAITING,DEAD }`\n\n然后在Start时初始化一个`BuildingStates`: `buildingStates = BuildingStates.WORKING;`\n\n在Update()函数中调用`SwitchStates()`:\n\n```c#\npublic void SwitchStates()\n    {\n        switch (buildingStates)\n        {\n            case BuildingStates.WORKING:\n                //时间到了\n                if (timeLeft <= 0)\n                {\n                    CoinShow(bs.BDCoin);\n                    buildingStates = BuildingStates.WAITING;\n                }\n                else\n                {\n                    timeLeft -= Time.deltaTime;\n                }\n                break;\n            case BuildingStates.WAITING:\n                \n                break;\n            case BuildingStates.DEAD:\n                //特殊土地，已经不能再使用，需要手动拆除。\n                Renderer renderer = GetComponent<Renderer>();\n                renderer.material.SetColor(\"_Color\", Color.red);\n                currentNode.canSpecial = false;\n                break;\n            default:\n                break;\n        }\n\n\n        if (greenTimeLeft <= 0)\n        {\n            //GreenAdd(bs.BDGreen);\n            GameManager.getGM.Green += bs.BDGreen;\n            greenTimeLeft = updateTime;\n        }\n        else\n        {\n            greenTimeLeft -= Time.deltaTime;\n        }\n    }\n```\n\n## 特殊建筑\n\n对于有使用轮次限制的特殊建筑，定义子类`SpecialLandController` 继承`BuildingController`，对ToWorking函数重写。使用变量count来记录工作的轮次。\n\n> 注意只有被public和protected修饰的父类变量能被子类使用，所以要记得修改父类变量或函数的作用范围。\n\n```c#\npublic class SpecialLandController : BuildingController\n{\n    [SerializeField]\n    private int count = 0;\n\n    public int times = 10;\n\n    protected new void Start()\n    {\n        this.onToWorking += ToWorking;    // 事件注册\n        init();\n    }\n\n    public new void ToWorking()\n    {\n        Debug.Log(\"子\");\n        timeLeft = updateTime;\n        bs.GetCoin();\n        count++;\n\n        if (count >= times)\n        {\n            buildingStates = BuildingStates.DEAD;\n        }\n        else\n        {\n            buildingStates = BuildingStates.WORKING;\n        }\n        \n        \n    }\n}\n```\n\n\n\n# 鼠标滚轮缩放Camera视图\n\n## 小窗口显示整体地图\n\n复制一个Camera，然后修改TargetTexture 为一个新建的RenderTexture，然后在GUI中新建RawImage，把Texture设置为摄像机输出的RenderTexture即可。\n\n## 滚轮缩放\n\n在Update函数中：  `Mathf.Clamp()`函数用于固定在最大和最小值范围内。\n\n-=是鼠标滚轮上划视图放大，下滑缩小；+=反之。\n\n```c#\n//获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\ncurrentScale -= Input.GetAxis(\"Mouse ScrollWheel\") * scaleSpeed;\ncurrentScale = Mathf.Clamp(currentScale, minScale, maxScale);\n```\n\n\n\n<details>\n  <summary>FollowMouseScale.cs</summary>\n\n\n```c#\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class FollowMouseScale : MonoBehaviour\n{\n    public GameObject mapPanel;\n    public float scaleSpeed = 5.0f;\n    private float minScale = 1.0f;\n    private float maxScale = 150.0f;\n    private float currentScale;\n    private float defaultScale;\n\n    // Use this for initialization\n\n    void Start()\n    {\n        //根据当前摄像机是正交还是透视进行对应赋值\n\n        if (Camera.main.orthographic == true)\n        {\n            currentScale = Camera.main.orthographicSize;\n        }\n        else\n        {\n            currentScale = Camera.main.fieldOfView;\n        }\n        defaultScale = currentScale;\n    }\n\n    // Update is called once per frame\n\n    void Update()\n    {\n\n        //获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\n        currentScale -= Input.GetAxis(\"Mouse ScrollWheel\") * scaleSpeed;\n        currentScale = Mathf.Clamp(currentScale, minScale, maxScale);\n        //根据当前摄像机是正交还是透视进行对应赋值，放大缩小\n\n        if (Camera.main.orthographic == true)\n        {\n            Camera.main.orthographicSize = currentScale;\n        }\n\n        else\n        {\n            Camera.main.fieldOfView = currentScale;\n        }\n        //显示小窗口\n        if (currentScale < defaultScale)\n        {\n            mapPanel.SetActive(true);\n        }\n        else\n        {\n            mapPanel.SetActive(false);\n        }\n    }\n\n}\n```\n</details>\n\n\n\n\n\n------\n<div class=\"success\">\n\n> 至此Demo的基本功能已经实现了，现完成下述功能：\n>\n> 1. 初始化游戏的基本数值\n> 2. 可动态增加不同地块种类和对应的建筑种类，方便快速管理属性值\n> 3. 实现基本的经济系统\n> 4. 让建筑根据固定时间间隔切换状态，并且在点击收取金币后才进入下一个工作状态。\n> 5. 实现特殊的建筑行为\n> 6. 鼠标滚轮缩放视图\n\n</div>\n\n<div class=\"info\">\n\n> 下一步要做的主要是美术部分：\n>\n> 1. 绘制三种地块的贴图\n> 2. 添加三种地块的建筑和材质模型\n> 3. 添加鼠标悬停和点击的shader\n> 4. 添加动画\n> 5. 更改UI\n\n\n</div>\n\n","source":"_posts/2021-08-06-小学期建造游戏Demo开发笔记（二）.md","raw":"---\ntitle: 2021-08-06-小学期建造游戏Demo开发笔记（二）\ndate: 2021-08-06 20:51:37\ntags:\n  - Unity\n  - 场景切换\n  - GameManager\n  - 单例模式\n  - UI隐藏\n  - 状态切换\n  \ncategories:\n  - 小学期建造游戏Demo开发笔记\n---\n\n# 重载当前的Scene\n\n```c#\nusing UnityEngine.SceneManagement;\n\npublic void restart()\n    {\n        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n    }\n```\n\n退出游戏：\n\n```c#\npublic void EndGame()\n    {\n        Application.Quit();\n    }\n```\n\n \n\n<!-- more -->\n\n# Game Manager\n\n>  由于“游戏管理器”控制的都是整个游戏中一些共有的信息，所以我们不会同时需要两个游戏管理器，因此游戏管理器将是一个单例对象。\n\n单例模式：\n\n创建一个静态对象`static GameManager current`\n\n直接在Awake里定义gm为this：\n\n```c#\nprivate void Awake()\n    {\n        current = this;\n    }\n```\n\n然后直接用`GameManager.current`即可调用里面的变量和函数。\n\n\n\n# UI\n\n#### 新建UI\n\n<div class=\"warning\">\n\n> 注意需要修改Canvas的设置，否则调整比例后位置可能会错乱。默认是constant with pixel size\n\n</div>\n\n![image-20210808163903666](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-小学期建造游戏Demo开发笔记（二）/image-20210808163903666-16284119455091.png)\n\n\n\n![image-20210808174522165](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-小学期建造游戏Demo开发笔记（二）/image-20210808174522165-16284159238313.png)_设置界面UI_\n\n<div class=\"warning\">\n\n> 注意当给GUI控件挂事件回调函数时，要选择上面Dynamic String的，不能选择下面静态变量。\n\n</div>\n\n#### 想要让Panel暂时隐藏或显示？\n\n注意不能漏任何组件，否则可能无法交互。\n\n![image-20210808164106909](https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-小学期建造游戏Demo开发笔记（二）/image-20210808164106909-16284120682902.png)\n\n以TipUI为例：\n\n获取`CanvasGroup`组件，设置它的透明度、可交互、可被射线撞击等等属性。\n\n```c#\npublic class TipUI : MonoBehaviour\n{\n    private CanvasGroup _canvasGroup;\n    private Node _currentNode;\n    public Text tipText;\n    // Start is called before the first frame update\n    void Start()\n    {\n        _canvasGroup = gameObject.GetComponent<CanvasGroup>();//获得组件\n        GameEvents.current.onOpenTipGUI += OpenTip;\n    }\n    //显示\n    private void OpenTip(int cost,Node node)\n    {\n        _canvasGroup.alpha = 1;\n        _canvasGroup.interactable = true;\n        _canvasGroup.blocksRaycasts = true;\n\n        tipText.text = \"开发该地块需要\"+cost+\"经济值，是否开发？\";\n        _currentNode = node;\n    }\n\n    public void UnlockNode()\n    {\n        Debug.Log(\"是\");\n        _currentNode.Unlock();\n        HideTip();\n    }\n    //隐藏\n    public void HideTip()\n    {\n        _canvasGroup.alpha = 0;\n        _canvasGroup.interactable = false;\n        _canvasGroup.blocksRaycasts = false;\n    }\n}\n```\n\n然后只要调用函数`GameEvents.current.OpenTipGUI()`即可控制显示。\n\n\n\n\n\n# 状态切换\n\n使用`BuildingController.cs`来管理建筑的状态。\n\n先定义枚举状态：`public enum BuildingStates { WORKING,WAITING,DEAD }`\n\n然后在Start时初始化一个`BuildingStates`: `buildingStates = BuildingStates.WORKING;`\n\n在Update()函数中调用`SwitchStates()`:\n\n```c#\npublic void SwitchStates()\n    {\n        switch (buildingStates)\n        {\n            case BuildingStates.WORKING:\n                //时间到了\n                if (timeLeft <= 0)\n                {\n                    CoinShow(bs.BDCoin);\n                    buildingStates = BuildingStates.WAITING;\n                }\n                else\n                {\n                    timeLeft -= Time.deltaTime;\n                }\n                break;\n            case BuildingStates.WAITING:\n                \n                break;\n            case BuildingStates.DEAD:\n                //特殊土地，已经不能再使用，需要手动拆除。\n                Renderer renderer = GetComponent<Renderer>();\n                renderer.material.SetColor(\"_Color\", Color.red);\n                currentNode.canSpecial = false;\n                break;\n            default:\n                break;\n        }\n\n\n        if (greenTimeLeft <= 0)\n        {\n            //GreenAdd(bs.BDGreen);\n            GameManager.getGM.Green += bs.BDGreen;\n            greenTimeLeft = updateTime;\n        }\n        else\n        {\n            greenTimeLeft -= Time.deltaTime;\n        }\n    }\n```\n\n## 特殊建筑\n\n对于有使用轮次限制的特殊建筑，定义子类`SpecialLandController` 继承`BuildingController`，对ToWorking函数重写。使用变量count来记录工作的轮次。\n\n> 注意只有被public和protected修饰的父类变量能被子类使用，所以要记得修改父类变量或函数的作用范围。\n\n```c#\npublic class SpecialLandController : BuildingController\n{\n    [SerializeField]\n    private int count = 0;\n\n    public int times = 10;\n\n    protected new void Start()\n    {\n        this.onToWorking += ToWorking;    // 事件注册\n        init();\n    }\n\n    public new void ToWorking()\n    {\n        Debug.Log(\"子\");\n        timeLeft = updateTime;\n        bs.GetCoin();\n        count++;\n\n        if (count >= times)\n        {\n            buildingStates = BuildingStates.DEAD;\n        }\n        else\n        {\n            buildingStates = BuildingStates.WORKING;\n        }\n        \n        \n    }\n}\n```\n\n\n\n# 鼠标滚轮缩放Camera视图\n\n## 小窗口显示整体地图\n\n复制一个Camera，然后修改TargetTexture 为一个新建的RenderTexture，然后在GUI中新建RawImage，把Texture设置为摄像机输出的RenderTexture即可。\n\n## 滚轮缩放\n\n在Update函数中：  `Mathf.Clamp()`函数用于固定在最大和最小值范围内。\n\n-=是鼠标滚轮上划视图放大，下滑缩小；+=反之。\n\n```c#\n//获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\ncurrentScale -= Input.GetAxis(\"Mouse ScrollWheel\") * scaleSpeed;\ncurrentScale = Mathf.Clamp(currentScale, minScale, maxScale);\n```\n\n\n\n<details>\n  <summary>FollowMouseScale.cs</summary>\n\n\n```c#\nusing UnityEngine;\nusing UnityEngine.UI;\n\npublic class FollowMouseScale : MonoBehaviour\n{\n    public GameObject mapPanel;\n    public float scaleSpeed = 5.0f;\n    private float minScale = 1.0f;\n    private float maxScale = 150.0f;\n    private float currentScale;\n    private float defaultScale;\n\n    // Use this for initialization\n\n    void Start()\n    {\n        //根据当前摄像机是正交还是透视进行对应赋值\n\n        if (Camera.main.orthographic == true)\n        {\n            currentScale = Camera.main.orthographicSize;\n        }\n        else\n        {\n            currentScale = Camera.main.fieldOfView;\n        }\n        defaultScale = currentScale;\n    }\n\n    // Update is called once per frame\n\n    void Update()\n    {\n\n        //获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\n        currentScale -= Input.GetAxis(\"Mouse ScrollWheel\") * scaleSpeed;\n        currentScale = Mathf.Clamp(currentScale, minScale, maxScale);\n        //根据当前摄像机是正交还是透视进行对应赋值，放大缩小\n\n        if (Camera.main.orthographic == true)\n        {\n            Camera.main.orthographicSize = currentScale;\n        }\n\n        else\n        {\n            Camera.main.fieldOfView = currentScale;\n        }\n        //显示小窗口\n        if (currentScale < defaultScale)\n        {\n            mapPanel.SetActive(true);\n        }\n        else\n        {\n            mapPanel.SetActive(false);\n        }\n    }\n\n}\n```\n</details>\n\n\n\n\n\n------\n<div class=\"success\">\n\n> 至此Demo的基本功能已经实现了，现完成下述功能：\n>\n> 1. 初始化游戏的基本数值\n> 2. 可动态增加不同地块种类和对应的建筑种类，方便快速管理属性值\n> 3. 实现基本的经济系统\n> 4. 让建筑根据固定时间间隔切换状态，并且在点击收取金币后才进入下一个工作状态。\n> 5. 实现特殊的建筑行为\n> 6. 鼠标滚轮缩放视图\n\n</div>\n\n<div class=\"info\">\n\n> 下一步要做的主要是美术部分：\n>\n> 1. 绘制三种地块的贴图\n> 2. 添加三种地块的建筑和材质模型\n> 3. 添加鼠标悬停和点击的shader\n> 4. 添加动画\n> 5. 更改UI\n\n\n</div>\n\n","slug":"2021-08-06-小学期建造游戏Demo开发笔记（二）","published":1,"updated":"2021-08-15T10:12:27.380Z","_id":"cks336nq5000c1svo1z357une","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"重载当前的Scene\"><a href=\"#重载当前的Scene\" class=\"headerlink\" title=\"重载当前的Scene\"></a>重载当前的Scene</h1><pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">using UnityEngine.SceneManagement;\n\npublic void restart()\n    &#123;\n        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>退出游戏：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public void EndGame()\n    &#123;\n        Application.Quit();\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<span id=\"more\"></span>\n\n<h1 id=\"Game-Manager\"><a href=\"#Game-Manager\" class=\"headerlink\" title=\"Game Manager\"></a>Game Manager</h1><blockquote>\n<p> 由于“游戏管理器”控制的都是整个游戏中一些共有的信息，所以我们不会同时需要两个游戏管理器，因此游戏管理器将是一个单例对象。</p>\n</blockquote>\n<p>单例模式：</p>\n<p>创建一个静态对象<code>static GameManager current</code></p>\n<p>直接在Awake里定义gm为this：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">private void Awake()\n    &#123;\n        current &#x3D; this;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后直接用<code>GameManager.current</code>即可调用里面的变量和函数。</p>\n<h1 id=\"UI\"><a href=\"#UI\" class=\"headerlink\" title=\"UI\"></a>UI</h1><h4 id=\"新建UI\"><a href=\"#新建UI\" class=\"headerlink\" title=\"新建UI\"></a>新建UI</h4><div class=\"warning\">\n\n<blockquote>\n<p>注意需要修改Canvas的设置，否则调整比例后位置可能会错乱。默认是constant with pixel size</p>\n</blockquote>\n</div>\n\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-%E5%B0%8F%E5%AD%A6%E6%9C%9F%E5%BB%BA%E9%80%A0%E6%B8%B8%E6%88%8FDemo%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/image-20210808163903666-16284119455091.png\" alt=\"image-20210808163903666\" loading=\"lazy\"></p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-%E5%B0%8F%E5%AD%A6%E6%9C%9F%E5%BB%BA%E9%80%A0%E6%B8%B8%E6%88%8FDemo%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/image-20210808174522165-16284159238313.png\" alt=\"image-20210808174522165\" loading=\"lazy\"><em>设置界面UI</em></p>\n<div class=\"warning\">\n\n<blockquote>\n<p>注意当给GUI控件挂事件回调函数时，要选择上面Dynamic String的，不能选择下面静态变量。</p>\n</blockquote>\n</div>\n\n<h4 id=\"想要让Panel暂时隐藏或显示？\"><a href=\"#想要让Panel暂时隐藏或显示？\" class=\"headerlink\" title=\"想要让Panel暂时隐藏或显示？\"></a>想要让Panel暂时隐藏或显示？</h4><p>注意不能漏任何组件，否则可能无法交互。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-%E5%B0%8F%E5%AD%A6%E6%9C%9F%E5%BB%BA%E9%80%A0%E6%B8%B8%E6%88%8FDemo%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/image-20210808164106909-16284120682902.png\" alt=\"image-20210808164106909\" loading=\"lazy\"></p>\n<p>以TipUI为例：</p>\n<p>获取<code>CanvasGroup</code>组件，设置它的透明度、可交互、可被射线撞击等等属性。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class TipUI : MonoBehaviour\n&#123;\n    private CanvasGroup _canvasGroup;\n    private Node _currentNode;\n    public Text tipText;\n    &#x2F;&#x2F; Start is called before the first frame update\n    void Start()\n    &#123;\n        _canvasGroup &#x3D; gameObject.GetComponent&lt;CanvasGroup&gt;();&#x2F;&#x2F;获得组件\n        GameEvents.current.onOpenTipGUI +&#x3D; OpenTip;\n    &#125;\n    &#x2F;&#x2F;显示\n    private void OpenTip(int cost,Node node)\n    &#123;\n        _canvasGroup.alpha &#x3D; 1;\n        _canvasGroup.interactable &#x3D; true;\n        _canvasGroup.blocksRaycasts &#x3D; true;\n\n        tipText.text &#x3D; &quot;开发该地块需要&quot;+cost+&quot;经济值，是否开发？&quot;;\n        _currentNode &#x3D; node;\n    &#125;\n\n    public void UnlockNode()\n    &#123;\n        Debug.Log(&quot;是&quot;);\n        _currentNode.Unlock();\n        HideTip();\n    &#125;\n    &#x2F;&#x2F;隐藏\n    public void HideTip()\n    &#123;\n        _canvasGroup.alpha &#x3D; 0;\n        _canvasGroup.interactable &#x3D; false;\n        _canvasGroup.blocksRaycasts &#x3D; false;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后只要调用函数<code>GameEvents.current.OpenTipGUI()</code>即可控制显示。</p>\n<h1 id=\"状态切换\"><a href=\"#状态切换\" class=\"headerlink\" title=\"状态切换\"></a>状态切换</h1><p>使用<code>BuildingController.cs</code>来管理建筑的状态。</p>\n<p>先定义枚举状态：<code>public enum BuildingStates &#123; WORKING,WAITING,DEAD &#125;</code></p>\n<p>然后在Start时初始化一个<code>BuildingStates</code>: <code>buildingStates = BuildingStates.WORKING;</code></p>\n<p>在Update()函数中调用<code>SwitchStates()</code>:</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public void SwitchStates()\n    &#123;\n        switch (buildingStates)\n        &#123;\n            case BuildingStates.WORKING:\n                &#x2F;&#x2F;时间到了\n                if (timeLeft &lt;&#x3D; 0)\n                &#123;\n                    CoinShow(bs.BDCoin);\n                    buildingStates &#x3D; BuildingStates.WAITING;\n                &#125;\n                else\n                &#123;\n                    timeLeft -&#x3D; Time.deltaTime;\n                &#125;\n                break;\n            case BuildingStates.WAITING:\n                \n                break;\n            case BuildingStates.DEAD:\n                &#x2F;&#x2F;特殊土地，已经不能再使用，需要手动拆除。\n                Renderer renderer &#x3D; GetComponent&lt;Renderer&gt;();\n                renderer.material.SetColor(&quot;_Color&quot;, Color.red);\n                currentNode.canSpecial &#x3D; false;\n                break;\n            default:\n                break;\n        &#125;\n\n\n        if (greenTimeLeft &lt;&#x3D; 0)\n        &#123;\n            &#x2F;&#x2F;GreenAdd(bs.BDGreen);\n            GameManager.getGM.Green +&#x3D; bs.BDGreen;\n            greenTimeLeft &#x3D; updateTime;\n        &#125;\n        else\n        &#123;\n            greenTimeLeft -&#x3D; Time.deltaTime;\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"特殊建筑\"><a href=\"#特殊建筑\" class=\"headerlink\" title=\"特殊建筑\"></a>特殊建筑</h2><p>对于有使用轮次限制的特殊建筑，定义子类<code>SpecialLandController</code> 继承<code>BuildingController</code>，对ToWorking函数重写。使用变量count来记录工作的轮次。</p>\n<blockquote>\n<p>注意只有被public和protected修饰的父类变量能被子类使用，所以要记得修改父类变量或函数的作用范围。</p>\n</blockquote>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class SpecialLandController : BuildingController\n&#123;\n    [SerializeField]\n    private int count &#x3D; 0;\n\n    public int times &#x3D; 10;\n\n    protected new void Start()\n    &#123;\n        this.onToWorking +&#x3D; ToWorking;    &#x2F;&#x2F; 事件注册\n        init();\n    &#125;\n\n    public new void ToWorking()\n    &#123;\n        Debug.Log(&quot;子&quot;);\n        timeLeft &#x3D; updateTime;\n        bs.GetCoin();\n        count++;\n\n        if (count &gt;&#x3D; times)\n        &#123;\n            buildingStates &#x3D; BuildingStates.DEAD;\n        &#125;\n        else\n        &#123;\n            buildingStates &#x3D; BuildingStates.WORKING;\n        &#125;\n        \n        \n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"鼠标滚轮缩放Camera视图\"><a href=\"#鼠标滚轮缩放Camera视图\" class=\"headerlink\" title=\"鼠标滚轮缩放Camera视图\"></a>鼠标滚轮缩放Camera视图</h1><h2 id=\"小窗口显示整体地图\"><a href=\"#小窗口显示整体地图\" class=\"headerlink\" title=\"小窗口显示整体地图\"></a>小窗口显示整体地图</h2><p>复制一个Camera，然后修改TargetTexture 为一个新建的RenderTexture，然后在GUI中新建RawImage，把Texture设置为摄像机输出的RenderTexture即可。</p>\n<h2 id=\"滚轮缩放\"><a href=\"#滚轮缩放\" class=\"headerlink\" title=\"滚轮缩放\"></a>滚轮缩放</h2><p>在Update函数中：  <code>Mathf.Clamp()</code>函数用于固定在最大和最小值范围内。</p>\n<p>-=是鼠标滚轮上划视图放大，下滑缩小；+=反之。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\ncurrentScale -&#x3D; Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * scaleSpeed;\ncurrentScale &#x3D; Mathf.Clamp(currentScale, minScale, maxScale);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<details>\n  <summary>FollowMouseScale.cs</summary>\n\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">using UnityEngine;\nusing UnityEngine.UI;\n\npublic class FollowMouseScale : MonoBehaviour\n&#123;\n    public GameObject mapPanel;\n    public float scaleSpeed &#x3D; 5.0f;\n    private float minScale &#x3D; 1.0f;\n    private float maxScale &#x3D; 150.0f;\n    private float currentScale;\n    private float defaultScale;\n\n    &#x2F;&#x2F; Use this for initialization\n\n    void Start()\n    &#123;\n        &#x2F;&#x2F;根据当前摄像机是正交还是透视进行对应赋值\n\n        if (Camera.main.orthographic &#x3D;&#x3D; true)\n        &#123;\n            currentScale &#x3D; Camera.main.orthographicSize;\n        &#125;\n        else\n        &#123;\n            currentScale &#x3D; Camera.main.fieldOfView;\n        &#125;\n        defaultScale &#x3D; currentScale;\n    &#125;\n\n    &#x2F;&#x2F; Update is called once per frame\n\n    void Update()\n    &#123;\n\n        &#x2F;&#x2F;获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\n        currentScale -&#x3D; Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * scaleSpeed;\n        currentScale &#x3D; Mathf.Clamp(currentScale, minScale, maxScale);\n        &#x2F;&#x2F;根据当前摄像机是正交还是透视进行对应赋值，放大缩小\n\n        if (Camera.main.orthographic &#x3D;&#x3D; true)\n        &#123;\n            Camera.main.orthographicSize &#x3D; currentScale;\n        &#125;\n\n        else\n        &#123;\n            Camera.main.fieldOfView &#x3D; currentScale;\n        &#125;\n        &#x2F;&#x2F;显示小窗口\n        if (currentScale &lt; defaultScale)\n        &#123;\n            mapPanel.SetActive(true);\n        &#125;\n        else\n        &#123;\n            mapPanel.SetActive(false);\n        &#125;\n    &#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</details>\n\n\n\n\n\n<hr>\n<div class=\"success\">\n\n<blockquote>\n<p>至此Demo的基本功能已经实现了，现完成下述功能：</p>\n<ol>\n<li>初始化游戏的基本数值</li>\n<li>可动态增加不同地块种类和对应的建筑种类，方便快速管理属性值</li>\n<li>实现基本的经济系统</li>\n<li>让建筑根据固定时间间隔切换状态，并且在点击收取金币后才进入下一个工作状态。</li>\n<li>实现特殊的建筑行为</li>\n<li>鼠标滚轮缩放视图</li>\n</ol>\n</blockquote>\n</div>\n\n<div class=\"info\">\n\n<blockquote>\n<p>下一步要做的主要是美术部分：</p>\n<ol>\n<li>绘制三种地块的贴图</li>\n<li>添加三种地块的建筑和材质模型</li>\n<li>添加鼠标悬停和点击的shader</li>\n<li>添加动画</li>\n<li>更改UI</li>\n</ol>\n</blockquote>\n</div>\n\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"<h1 id=\"重载当前的Scene\"><a href=\"#重载当前的Scene\" class=\"headerlink\" title=\"重载当前的Scene\"></a>重载当前的Scene</h1><pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">using UnityEngine.SceneManagement;\n\npublic void restart()\n    &#123;\n        SceneManager.LoadScene(SceneManager.GetActiveScene().buildIndex);\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>退出游戏：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public void EndGame()\n    &#123;\n        Application.Quit();\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>","more":"<h1 id=\"Game-Manager\"><a href=\"#Game-Manager\" class=\"headerlink\" title=\"Game Manager\"></a>Game Manager</h1><blockquote>\n<p> 由于“游戏管理器”控制的都是整个游戏中一些共有的信息，所以我们不会同时需要两个游戏管理器，因此游戏管理器将是一个单例对象。</p>\n</blockquote>\n<p>单例模式：</p>\n<p>创建一个静态对象<code>static GameManager current</code></p>\n<p>直接在Awake里定义gm为this：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">private void Awake()\n    &#123;\n        current &#x3D; this;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后直接用<code>GameManager.current</code>即可调用里面的变量和函数。</p>\n<h1 id=\"UI\"><a href=\"#UI\" class=\"headerlink\" title=\"UI\"></a>UI</h1><h4 id=\"新建UI\"><a href=\"#新建UI\" class=\"headerlink\" title=\"新建UI\"></a>新建UI</h4><div class=\"warning\">\n\n<blockquote>\n<p>注意需要修改Canvas的设置，否则调整比例后位置可能会错乱。默认是constant with pixel size</p>\n</blockquote>\n</div>\n\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-%E5%B0%8F%E5%AD%A6%E6%9C%9F%E5%BB%BA%E9%80%A0%E6%B8%B8%E6%88%8FDemo%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/image-20210808163903666-16284119455091.png\" alt=\"image-20210808163903666\"></p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-%E5%B0%8F%E5%AD%A6%E6%9C%9F%E5%BB%BA%E9%80%A0%E6%B8%B8%E6%88%8FDemo%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/image-20210808174522165-16284159238313.png\" alt=\"image-20210808174522165\"><em>设置界面UI</em></p>\n<div class=\"warning\">\n\n<blockquote>\n<p>注意当给GUI控件挂事件回调函数时，要选择上面Dynamic String的，不能选择下面静态变量。</p>\n</blockquote>\n</div>\n\n<h4 id=\"想要让Panel暂时隐藏或显示？\"><a href=\"#想要让Panel暂时隐藏或显示？\" class=\"headerlink\" title=\"想要让Panel暂时隐藏或显示？\"></a>想要让Panel暂时隐藏或显示？</h4><p>注意不能漏任何组件，否则可能无法交互。</p>\n<p><img src=\"https://github.com/HQiuzi/HQiuzi.github.io/raw/hexo/images/2021-08-06-%E5%B0%8F%E5%AD%A6%E6%9C%9F%E5%BB%BA%E9%80%A0%E6%B8%B8%E6%88%8FDemo%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0%EF%BC%88%E4%BA%8C%EF%BC%89/image-20210808164106909-16284120682902.png\" alt=\"image-20210808164106909\"></p>\n<p>以TipUI为例：</p>\n<p>获取<code>CanvasGroup</code>组件，设置它的透明度、可交互、可被射线撞击等等属性。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class TipUI : MonoBehaviour\n&#123;\n    private CanvasGroup _canvasGroup;\n    private Node _currentNode;\n    public Text tipText;\n    &#x2F;&#x2F; Start is called before the first frame update\n    void Start()\n    &#123;\n        _canvasGroup &#x3D; gameObject.GetComponent&lt;CanvasGroup&gt;();&#x2F;&#x2F;获得组件\n        GameEvents.current.onOpenTipGUI +&#x3D; OpenTip;\n    &#125;\n    &#x2F;&#x2F;显示\n    private void OpenTip(int cost,Node node)\n    &#123;\n        _canvasGroup.alpha &#x3D; 1;\n        _canvasGroup.interactable &#x3D; true;\n        _canvasGroup.blocksRaycasts &#x3D; true;\n\n        tipText.text &#x3D; &quot;开发该地块需要&quot;+cost+&quot;经济值，是否开发？&quot;;\n        _currentNode &#x3D; node;\n    &#125;\n\n    public void UnlockNode()\n    &#123;\n        Debug.Log(&quot;是&quot;);\n        _currentNode.Unlock();\n        HideTip();\n    &#125;\n    &#x2F;&#x2F;隐藏\n    public void HideTip()\n    &#123;\n        _canvasGroup.alpha &#x3D; 0;\n        _canvasGroup.interactable &#x3D; false;\n        _canvasGroup.blocksRaycasts &#x3D; false;\n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>然后只要调用函数<code>GameEvents.current.OpenTipGUI()</code>即可控制显示。</p>\n<h1 id=\"状态切换\"><a href=\"#状态切换\" class=\"headerlink\" title=\"状态切换\"></a>状态切换</h1><p>使用<code>BuildingController.cs</code>来管理建筑的状态。</p>\n<p>先定义枚举状态：<code>public enum BuildingStates &#123; WORKING,WAITING,DEAD &#125;</code></p>\n<p>然后在Start时初始化一个<code>BuildingStates</code>: <code>buildingStates = BuildingStates.WORKING;</code></p>\n<p>在Update()函数中调用<code>SwitchStates()</code>:</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public void SwitchStates()\n    &#123;\n        switch (buildingStates)\n        &#123;\n            case BuildingStates.WORKING:\n                &#x2F;&#x2F;时间到了\n                if (timeLeft &lt;&#x3D; 0)\n                &#123;\n                    CoinShow(bs.BDCoin);\n                    buildingStates &#x3D; BuildingStates.WAITING;\n                &#125;\n                else\n                &#123;\n                    timeLeft -&#x3D; Time.deltaTime;\n                &#125;\n                break;\n            case BuildingStates.WAITING:\n                \n                break;\n            case BuildingStates.DEAD:\n                &#x2F;&#x2F;特殊土地，已经不能再使用，需要手动拆除。\n                Renderer renderer &#x3D; GetComponent&lt;Renderer&gt;();\n                renderer.material.SetColor(&quot;_Color&quot;, Color.red);\n                currentNode.canSpecial &#x3D; false;\n                break;\n            default:\n                break;\n        &#125;\n\n\n        if (greenTimeLeft &lt;&#x3D; 0)\n        &#123;\n            &#x2F;&#x2F;GreenAdd(bs.BDGreen);\n            GameManager.getGM.Green +&#x3D; bs.BDGreen;\n            greenTimeLeft &#x3D; updateTime;\n        &#125;\n        else\n        &#123;\n            greenTimeLeft -&#x3D; Time.deltaTime;\n        &#125;\n    &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"特殊建筑\"><a href=\"#特殊建筑\" class=\"headerlink\" title=\"特殊建筑\"></a>特殊建筑</h2><p>对于有使用轮次限制的特殊建筑，定义子类<code>SpecialLandController</code> 继承<code>BuildingController</code>，对ToWorking函数重写。使用变量count来记录工作的轮次。</p>\n<blockquote>\n<p>注意只有被public和protected修饰的父类变量能被子类使用，所以要记得修改父类变量或函数的作用范围。</p>\n</blockquote>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">public class SpecialLandController : BuildingController\n&#123;\n    [SerializeField]\n    private int count &#x3D; 0;\n\n    public int times &#x3D; 10;\n\n    protected new void Start()\n    &#123;\n        this.onToWorking +&#x3D; ToWorking;    &#x2F;&#x2F; 事件注册\n        init();\n    &#125;\n\n    public new void ToWorking()\n    &#123;\n        Debug.Log(&quot;子&quot;);\n        timeLeft &#x3D; updateTime;\n        bs.GetCoin();\n        count++;\n\n        if (count &gt;&#x3D; times)\n        &#123;\n            buildingStates &#x3D; BuildingStates.DEAD;\n        &#125;\n        else\n        &#123;\n            buildingStates &#x3D; BuildingStates.WORKING;\n        &#125;\n        \n        \n    &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n\n<h1 id=\"鼠标滚轮缩放Camera视图\"><a href=\"#鼠标滚轮缩放Camera视图\" class=\"headerlink\" title=\"鼠标滚轮缩放Camera视图\"></a>鼠标滚轮缩放Camera视图</h1><h2 id=\"小窗口显示整体地图\"><a href=\"#小窗口显示整体地图\" class=\"headerlink\" title=\"小窗口显示整体地图\"></a>小窗口显示整体地图</h2><p>复制一个Camera，然后修改TargetTexture 为一个新建的RenderTexture，然后在GUI中新建RawImage，把Texture设置为摄像机输出的RenderTexture即可。</p>\n<h2 id=\"滚轮缩放\"><a href=\"#滚轮缩放\" class=\"headerlink\" title=\"滚轮缩放\"></a>滚轮缩放</h2><p>在Update函数中：  <code>Mathf.Clamp()</code>函数用于固定在最大和最小值范围内。</p>\n<p>-=是鼠标滚轮上划视图放大，下滑缩小；+=反之。</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">&#x2F;&#x2F;获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\ncurrentScale -&#x3D; Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * scaleSpeed;\ncurrentScale &#x3D; Mathf.Clamp(currentScale, minScale, maxScale);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n\n\n<details>\n  <summary>FollowMouseScale.cs</summary>\n\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">using UnityEngine;\nusing UnityEngine.UI;\n\npublic class FollowMouseScale : MonoBehaviour\n&#123;\n    public GameObject mapPanel;\n    public float scaleSpeed &#x3D; 5.0f;\n    private float minScale &#x3D; 1.0f;\n    private float maxScale &#x3D; 150.0f;\n    private float currentScale;\n    private float defaultScale;\n\n    &#x2F;&#x2F; Use this for initialization\n\n    void Start()\n    &#123;\n        &#x2F;&#x2F;根据当前摄像机是正交还是透视进行对应赋值\n\n        if (Camera.main.orthographic &#x3D;&#x3D; true)\n        &#123;\n            currentScale &#x3D; Camera.main.orthographicSize;\n        &#125;\n        else\n        &#123;\n            currentScale &#x3D; Camera.main.fieldOfView;\n        &#125;\n        defaultScale &#x3D; currentScale;\n    &#125;\n\n    &#x2F;&#x2F; Update is called once per frame\n\n    void Update()\n    &#123;\n\n        &#x2F;&#x2F;获取鼠标滚轮的值，向前大于0，向后小于0，并设置放大缩小范围值\n        currentScale -&#x3D; Input.GetAxis(&quot;Mouse ScrollWheel&quot;) * scaleSpeed;\n        currentScale &#x3D; Mathf.Clamp(currentScale, minScale, maxScale);\n        &#x2F;&#x2F;根据当前摄像机是正交还是透视进行对应赋值，放大缩小\n\n        if (Camera.main.orthographic &#x3D;&#x3D; true)\n        &#123;\n            Camera.main.orthographicSize &#x3D; currentScale;\n        &#125;\n\n        else\n        &#123;\n            Camera.main.fieldOfView &#x3D; currentScale;\n        &#125;\n        &#x2F;&#x2F;显示小窗口\n        if (currentScale &lt; defaultScale)\n        &#123;\n            mapPanel.SetActive(true);\n        &#125;\n        else\n        &#123;\n            mapPanel.SetActive(false);\n        &#125;\n    &#125;\n\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</details>\n\n\n\n\n\n<hr>\n<div class=\"success\">\n\n<blockquote>\n<p>至此Demo的基本功能已经实现了，现完成下述功能：</p>\n<ol>\n<li>初始化游戏的基本数值</li>\n<li>可动态增加不同地块种类和对应的建筑种类，方便快速管理属性值</li>\n<li>实现基本的经济系统</li>\n<li>让建筑根据固定时间间隔切换状态，并且在点击收取金币后才进入下一个工作状态。</li>\n<li>实现特殊的建筑行为</li>\n<li>鼠标滚轮缩放视图</li>\n</ol>\n</blockquote>\n</div>\n\n<div class=\"info\">\n\n<blockquote>\n<p>下一步要做的主要是美术部分：</p>\n<ol>\n<li>绘制三种地块的贴图</li>\n<li>添加三种地块的建筑和材质模型</li>\n<li>添加鼠标悬停和点击的shader</li>\n<li>添加动画</li>\n<li>更改UI</li>\n</ol>\n</blockquote>\n</div>"},{"title":"2021-08-06-快捷键等小tips","date":"2021-08-06T02:41:16.000Z","_content":"\n# Unity\n## 快捷键\n\n##### getter 和 setter\n\n> 选中需要创建Getter 和 Setter的变量，快捷键Ctrl + R,E\n\n<!-- more -->\n\n\n\n# maya\n\n## 快捷键\nF 选中某边、面、对象按F键可以使其处于视图中央\n\n##### alt\nalt+B  切换背景颜色\n\n##### ctrl\nctrl+A 切换属性编辑器和层编辑器\nctrl+delete 可以删除组件及其相关联的顶点\nctrl+右键  边操作菜单\nctrl+中键  微调数值\nctrl+D  复制\nctrl+shift+D 特殊复制\n\nctrl+G 打组\n\n按住ctrl是减选择\n\nctrl+shift是添加选择\n\n##### shift\nshift 复选\nshift+<    shift+>快速选择工具\nshift+ 右键   顶点操作菜单，可以合并顶点\n\n##### backspace\n去掉两条线之间的点，不能去掉连接三条边的点\n\n***\n#### 循环边\n首尾相接的边\n\n根据四边面插入\n如果碰到三角面或五边面时可以去掉或加入一条边，然后插入。\n\n#### 环形边\n互相平行不相交的线\n循环边是在环形边上插入的，相当于在环形边上架“桥梁”\n\n#### 删除\n* 删除历史：编辑-按类型删除-历史\n### 材质\n添加材质：右键选择添加新材质/在Hypershade里添加\n对象模式下选中模型，然后右键选择材质球将XXX指定给当前选择\n或按住鼠标右键然后将材质球拖给模型。\nhypershade在窗口-渲染编辑器\n\n\n#### 对称选择\n双击选择工具可以进行对称设置\n\n#### 桥接\n两个开口多边形对应在一起，且拓扑结构一样时，可以用边选择选中，然后再编辑网格-桥接，可以生成新的面和先将其连起来\n\n#### 打组\n\n打组有两种方法，一种是选择需要的物体，直接ctrl+g就可以打组，另外一种是依次点击edit-Group来打组。\n\n#### 归零数值\n* 在平移/缩放处右键-冻结\n* 修改-冻结变换\n\n#### 导出\n文件-导出当前选择-在框后面选择obj类型\n\n\n\n# blender\n\n> [文档](https://docs.blender.org/manual/zh-hans/dev/getting_started/index.html)\n>\n> [视图快捷键](https://www.bilibili.com/read/cv10547329)\n>\n> [快捷键](https://blog.csdn.net/u012204304/article/details/89030370)\n\ns 缩放\n\nr 旋转\n\n#### ctrl\n\nctrl+Tab  切换编辑模式\n\n![image-20210811105948421](D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210811105948421-16286507912294.png)\n\n\n\n#### shift\n\nshift+s 吸附游标位置\n\n游标→中心点 可以让视图以该物体为中心\n\n**取色** 绘制模式下按S  S+点击  放进色板\n\n**隔离模式**  /\n\n**融并** X\n\n\n\n\n\n# 数字特效与合成技术\n## 课时1\n#### 导入文件\n* 在节点工作区按R\n* 直接拖进素材\n* 左侧Read打开\n\n\n\n## 课时2\n\n#### 导入\n导入素材后，全选节点按L键可以令其整齐排列\n\n#### 显示图像内容\n* 选中某个结点按X（数字）键，可以令viewer产生X号箭头，连接该节点，将上面的画面显示出来\n* 然后按123即可在不同画面中切换\n\n#### ProjectSettings\n> 在结点编辑区按S\n##### 帧速率\n* 电影：24帧\n* 短视频：25帧\n##### 时间线\n\n* * *\n\n### 结点\n> 选中结点后按D键可以将该节点的作用删除\n\n##### Merge合成结点\n> 1.快捷键M\n> 2.从工具架中选择merge\n> 3.右键选择merge\n> 4.tab键搜索结点名称\n\n* 用来合成两个素材\n* A输入盖在B输入上面，再连输出到viewer\n* 选中两个结点按住Shift，再按M可以快速将两个结点合成起来，但是要注意顺序，在前面选择的是A输入。\n\n##### Premult预乘结点\n 处理背景有一层灰的图像，相当于将内容抠出来\n\n##### Transform结点\n> 快捷键T\n##### Blur结点\n> 快捷键B\n> 模糊\n##### Color结点调色\n##### Write结点输出图像\n\n## 课时3\n* 三基色\n* 三原色\n##### xyY色度图\n> 横坐标0-1\n> 马蹄形\n##### 色域（gamut）\n>要精确表示某种颜色必须要有一个框架，这个框架反映在色度图中就是色域。\n>需要RGB三基色和白点的色度坐标值\n>表示某种设备或标准所能描述的颜色范围，一般为三角形。\n\n电脑显示器：sRGB色域，和ITU-709色域差不多\n\n显示器：Rec.709\n电影院：P3色域\n超高清电视：Rec.2020\n\n##### 伽马校正\n自然界：1:1正比例的转换关系\n摄像机：在处理时向上凹（伽马校正），为了抵销电视CRT处理时的伽马特性（向下凹）\n最后还原为正比。\ngamma曲线是一个幂函数\n\n* 电脑屏幕自带一个2.2的gamma\n\n##### nuke对图像的处理-色彩管理\nnuke在显示图像时，以sRGB显示，给了图像一个向上的曲线，以抵销电脑显示器的向下的曲线。\n\n## 课时4\n\n#### RGBA通道\n##### Shuffle Copy结点\n有两个输入\n可以定义不同通道的来源\n##### Shuffle结点\n有一个输入\n> 功能：层与层之间信息的转换\n> 按住shift再按shuffle可以独立地添加shuffle结点\n\n\n## 课时5\n##### Grade结点\n调节gamma值（亮度）\n\n##### Roto结点\n可用来画色块\n\n## 课时6\n\n##### RotoPaint结点\n快捷键P\noutput默认为rgba\n\n![image-20210809163653261](D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210809163653261-16284982158371.png)\n\n##### defocus 景深\n## 课时8\n##### crop结点 修改包围盒大小\n\n#### transform\n按住ctrl再按鼠标左键复位\n\n\n## 课时9\n\n##### 取色\n先选吸管，再按ctrl+shift  鼠标点击取色\n\n##### Primatte抠像\n点Auto-compute\n##### Shuffle结点\n将primatte抠出来的alpha通道提取出来\n\n##### HueCorrect 抑制背景色，调节颜色\n\n##### Dilate 收边\n","source":"_posts/2021-08-06-快捷键等小tips.md","raw":"---\ntitle: 2021-08-06-快捷键等小tips\ndate: 2021-08-06 10:41:16\ntags:\n  - Unity\ncategories:\n  - 比较杂的知识点\n---\n\n# Unity\n## 快捷键\n\n##### getter 和 setter\n\n> 选中需要创建Getter 和 Setter的变量，快捷键Ctrl + R,E\n\n<!-- more -->\n\n\n\n# maya\n\n## 快捷键\nF 选中某边、面、对象按F键可以使其处于视图中央\n\n##### alt\nalt+B  切换背景颜色\n\n##### ctrl\nctrl+A 切换属性编辑器和层编辑器\nctrl+delete 可以删除组件及其相关联的顶点\nctrl+右键  边操作菜单\nctrl+中键  微调数值\nctrl+D  复制\nctrl+shift+D 特殊复制\n\nctrl+G 打组\n\n按住ctrl是减选择\n\nctrl+shift是添加选择\n\n##### shift\nshift 复选\nshift+<    shift+>快速选择工具\nshift+ 右键   顶点操作菜单，可以合并顶点\n\n##### backspace\n去掉两条线之间的点，不能去掉连接三条边的点\n\n***\n#### 循环边\n首尾相接的边\n\n根据四边面插入\n如果碰到三角面或五边面时可以去掉或加入一条边，然后插入。\n\n#### 环形边\n互相平行不相交的线\n循环边是在环形边上插入的，相当于在环形边上架“桥梁”\n\n#### 删除\n* 删除历史：编辑-按类型删除-历史\n### 材质\n添加材质：右键选择添加新材质/在Hypershade里添加\n对象模式下选中模型，然后右键选择材质球将XXX指定给当前选择\n或按住鼠标右键然后将材质球拖给模型。\nhypershade在窗口-渲染编辑器\n\n\n#### 对称选择\n双击选择工具可以进行对称设置\n\n#### 桥接\n两个开口多边形对应在一起，且拓扑结构一样时，可以用边选择选中，然后再编辑网格-桥接，可以生成新的面和先将其连起来\n\n#### 打组\n\n打组有两种方法，一种是选择需要的物体，直接ctrl+g就可以打组，另外一种是依次点击edit-Group来打组。\n\n#### 归零数值\n* 在平移/缩放处右键-冻结\n* 修改-冻结变换\n\n#### 导出\n文件-导出当前选择-在框后面选择obj类型\n\n\n\n# blender\n\n> [文档](https://docs.blender.org/manual/zh-hans/dev/getting_started/index.html)\n>\n> [视图快捷键](https://www.bilibili.com/read/cv10547329)\n>\n> [快捷键](https://blog.csdn.net/u012204304/article/details/89030370)\n\ns 缩放\n\nr 旋转\n\n#### ctrl\n\nctrl+Tab  切换编辑模式\n\n![image-20210811105948421](D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210811105948421-16286507912294.png)\n\n\n\n#### shift\n\nshift+s 吸附游标位置\n\n游标→中心点 可以让视图以该物体为中心\n\n**取色** 绘制模式下按S  S+点击  放进色板\n\n**隔离模式**  /\n\n**融并** X\n\n\n\n\n\n# 数字特效与合成技术\n## 课时1\n#### 导入文件\n* 在节点工作区按R\n* 直接拖进素材\n* 左侧Read打开\n\n\n\n## 课时2\n\n#### 导入\n导入素材后，全选节点按L键可以令其整齐排列\n\n#### 显示图像内容\n* 选中某个结点按X（数字）键，可以令viewer产生X号箭头，连接该节点，将上面的画面显示出来\n* 然后按123即可在不同画面中切换\n\n#### ProjectSettings\n> 在结点编辑区按S\n##### 帧速率\n* 电影：24帧\n* 短视频：25帧\n##### 时间线\n\n* * *\n\n### 结点\n> 选中结点后按D键可以将该节点的作用删除\n\n##### Merge合成结点\n> 1.快捷键M\n> 2.从工具架中选择merge\n> 3.右键选择merge\n> 4.tab键搜索结点名称\n\n* 用来合成两个素材\n* A输入盖在B输入上面，再连输出到viewer\n* 选中两个结点按住Shift，再按M可以快速将两个结点合成起来，但是要注意顺序，在前面选择的是A输入。\n\n##### Premult预乘结点\n 处理背景有一层灰的图像，相当于将内容抠出来\n\n##### Transform结点\n> 快捷键T\n##### Blur结点\n> 快捷键B\n> 模糊\n##### Color结点调色\n##### Write结点输出图像\n\n## 课时3\n* 三基色\n* 三原色\n##### xyY色度图\n> 横坐标0-1\n> 马蹄形\n##### 色域（gamut）\n>要精确表示某种颜色必须要有一个框架，这个框架反映在色度图中就是色域。\n>需要RGB三基色和白点的色度坐标值\n>表示某种设备或标准所能描述的颜色范围，一般为三角形。\n\n电脑显示器：sRGB色域，和ITU-709色域差不多\n\n显示器：Rec.709\n电影院：P3色域\n超高清电视：Rec.2020\n\n##### 伽马校正\n自然界：1:1正比例的转换关系\n摄像机：在处理时向上凹（伽马校正），为了抵销电视CRT处理时的伽马特性（向下凹）\n最后还原为正比。\ngamma曲线是一个幂函数\n\n* 电脑屏幕自带一个2.2的gamma\n\n##### nuke对图像的处理-色彩管理\nnuke在显示图像时，以sRGB显示，给了图像一个向上的曲线，以抵销电脑显示器的向下的曲线。\n\n## 课时4\n\n#### RGBA通道\n##### Shuffle Copy结点\n有两个输入\n可以定义不同通道的来源\n##### Shuffle结点\n有一个输入\n> 功能：层与层之间信息的转换\n> 按住shift再按shuffle可以独立地添加shuffle结点\n\n\n## 课时5\n##### Grade结点\n调节gamma值（亮度）\n\n##### Roto结点\n可用来画色块\n\n## 课时6\n\n##### RotoPaint结点\n快捷键P\noutput默认为rgba\n\n![image-20210809163653261](D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210809163653261-16284982158371.png)\n\n##### defocus 景深\n## 课时8\n##### crop结点 修改包围盒大小\n\n#### transform\n按住ctrl再按鼠标左键复位\n\n\n## 课时9\n\n##### 取色\n先选吸管，再按ctrl+shift  鼠标点击取色\n\n##### Primatte抠像\n点Auto-compute\n##### Shuffle结点\n将primatte抠出来的alpha通道提取出来\n\n##### HueCorrect 抑制背景色，调节颜色\n\n##### Dilate 收边\n","slug":"2021-08-06-快捷键等小tips","published":1,"updated":"2021-08-11T13:52:17.775Z","_id":"cks336nq6000f1svogpecb021","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Unity\"><a href=\"#Unity\" class=\"headerlink\" title=\"Unity\"></a>Unity</h1><h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><h5 id=\"getter-和-setter\"><a href=\"#getter-和-setter\" class=\"headerlink\" title=\"getter 和 setter\"></a>getter 和 setter</h5><blockquote>\n<p>选中需要创建Getter 和 Setter的变量，快捷键Ctrl + R,E</p>\n</blockquote>\n<span id=\"more\"></span>\n\n\n\n<h1 id=\"maya\"><a href=\"#maya\" class=\"headerlink\" title=\"maya\"></a>maya</h1><h2 id=\"快捷键-1\"><a href=\"#快捷键-1\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><p>F 选中某边、面、对象按F键可以使其处于视图中央</p>\n<h5 id=\"alt\"><a href=\"#alt\" class=\"headerlink\" title=\"alt\"></a>alt</h5><p>alt+B  切换背景颜色</p>\n<h5 id=\"ctrl\"><a href=\"#ctrl\" class=\"headerlink\" title=\"ctrl\"></a>ctrl</h5><p>ctrl+A 切换属性编辑器和层编辑器<br>ctrl+delete 可以删除组件及其相关联的顶点<br>ctrl+右键  边操作菜单<br>ctrl+中键  微调数值<br>ctrl+D  复制<br>ctrl+shift+D 特殊复制</p>\n<p>ctrl+G 打组</p>\n<p>按住ctrl是减选择</p>\n<p>ctrl+shift是添加选择</p>\n<h5 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift\"></a>shift</h5><p>shift 复选<br>shift+&lt;    shift+&gt;快速选择工具<br>shift+ 右键   顶点操作菜单，可以合并顶点</p>\n<h5 id=\"backspace\"><a href=\"#backspace\" class=\"headerlink\" title=\"backspace\"></a>backspace</h5><p>去掉两条线之间的点，不能去掉连接三条边的点</p>\n<hr>\n<h4 id=\"循环边\"><a href=\"#循环边\" class=\"headerlink\" title=\"循环边\"></a>循环边</h4><p>首尾相接的边</p>\n<p>根据四边面插入<br>如果碰到三角面或五边面时可以去掉或加入一条边，然后插入。</p>\n<h4 id=\"环形边\"><a href=\"#环形边\" class=\"headerlink\" title=\"环形边\"></a>环形边</h4><p>互相平行不相交的线<br>循环边是在环形边上插入的，相当于在环形边上架“桥梁”</p>\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><ul>\n<li>删除历史：编辑-按类型删除-历史<h3 id=\"材质\"><a href=\"#材质\" class=\"headerlink\" title=\"材质\"></a>材质</h3>添加材质：右键选择添加新材质/在Hypershade里添加<br>对象模式下选中模型，然后右键选择材质球将XXX指定给当前选择<br>或按住鼠标右键然后将材质球拖给模型。<br>hypershade在窗口-渲染编辑器</li>\n</ul>\n<h4 id=\"对称选择\"><a href=\"#对称选择\" class=\"headerlink\" title=\"对称选择\"></a>对称选择</h4><p>双击选择工具可以进行对称设置</p>\n<h4 id=\"桥接\"><a href=\"#桥接\" class=\"headerlink\" title=\"桥接\"></a>桥接</h4><p>两个开口多边形对应在一起，且拓扑结构一样时，可以用边选择选中，然后再编辑网格-桥接，可以生成新的面和先将其连起来</p>\n<h4 id=\"打组\"><a href=\"#打组\" class=\"headerlink\" title=\"打组\"></a>打组</h4><p>打组有两种方法，一种是选择需要的物体，直接ctrl+g就可以打组，另外一种是依次点击edit-Group来打组。</p>\n<h4 id=\"归零数值\"><a href=\"#归零数值\" class=\"headerlink\" title=\"归零数值\"></a>归零数值</h4><ul>\n<li>在平移/缩放处右键-冻结</li>\n<li>修改-冻结变换</li>\n</ul>\n<h4 id=\"导出\"><a href=\"#导出\" class=\"headerlink\" title=\"导出\"></a>导出</h4><p>文件-导出当前选择-在框后面选择obj类型</p>\n<h1 id=\"blender\"><a href=\"#blender\" class=\"headerlink\" title=\"blender\"></a>blender</h1><blockquote>\n<p><a href=\"https://docs.blender.org/manual/zh-hans/dev/getting_started/index.html\">文档</a></p>\n<p><a href=\"https://www.bilibili.com/read/cv10547329\">视图快捷键</a></p>\n<p><a href=\"https://blog.csdn.net/u012204304/article/details/89030370\">快捷键</a></p>\n</blockquote>\n<p>s 缩放</p>\n<p>r 旋转</p>\n<h4 id=\"ctrl-1\"><a href=\"#ctrl-1\" class=\"headerlink\" title=\"ctrl\"></a>ctrl</h4><p>ctrl+Tab  切换编辑模式</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210811105948421-16286507912294.png\" alt=\"image-20210811105948421\" loading=\"lazy\"></p>\n<h4 id=\"shift-1\"><a href=\"#shift-1\" class=\"headerlink\" title=\"shift\"></a>shift</h4><p>shift+s 吸附游标位置</p>\n<p>游标→中心点 可以让视图以该物体为中心</p>\n<p><strong>取色</strong> 绘制模式下按S  S+点击  放进色板</p>\n<p><strong>隔离模式</strong>  /</p>\n<p><strong>融并</strong> X</p>\n<h1 id=\"数字特效与合成技术\"><a href=\"#数字特效与合成技术\" class=\"headerlink\" title=\"数字特效与合成技术\"></a>数字特效与合成技术</h1><h2 id=\"课时1\"><a href=\"#课时1\" class=\"headerlink\" title=\"课时1\"></a>课时1</h2><h4 id=\"导入文件\"><a href=\"#导入文件\" class=\"headerlink\" title=\"导入文件\"></a>导入文件</h4><ul>\n<li>在节点工作区按R</li>\n<li>直接拖进素材</li>\n<li>左侧Read打开</li>\n</ul>\n<h2 id=\"课时2\"><a href=\"#课时2\" class=\"headerlink\" title=\"课时2\"></a>课时2</h2><h4 id=\"导入\"><a href=\"#导入\" class=\"headerlink\" title=\"导入\"></a>导入</h4><p>导入素材后，全选节点按L键可以令其整齐排列</p>\n<h4 id=\"显示图像内容\"><a href=\"#显示图像内容\" class=\"headerlink\" title=\"显示图像内容\"></a>显示图像内容</h4><ul>\n<li>选中某个结点按X（数字）键，可以令viewer产生X号箭头，连接该节点，将上面的画面显示出来</li>\n<li>然后按123即可在不同画面中切换</li>\n</ul>\n<h4 id=\"ProjectSettings\"><a href=\"#ProjectSettings\" class=\"headerlink\" title=\"ProjectSettings\"></a>ProjectSettings</h4><blockquote>\n<p>在结点编辑区按S</p>\n</blockquote>\n<h5 id=\"帧速率\"><a href=\"#帧速率\" class=\"headerlink\" title=\"帧速率\"></a>帧速率</h5><ul>\n<li>电影：24帧</li>\n<li>短视频：25帧<h5 id=\"时间线\"><a href=\"#时间线\" class=\"headerlink\" title=\"时间线\"></a>时间线</h5></li>\n</ul>\n<hr>\n<h3 id=\"结点\"><a href=\"#结点\" class=\"headerlink\" title=\"结点\"></a>结点</h3><blockquote>\n<p>选中结点后按D键可以将该节点的作用删除</p>\n</blockquote>\n<h5 id=\"Merge合成结点\"><a href=\"#Merge合成结点\" class=\"headerlink\" title=\"Merge合成结点\"></a>Merge合成结点</h5><blockquote>\n<p>1.快捷键M<br>2.从工具架中选择merge<br>3.右键选择merge<br>4.tab键搜索结点名称</p>\n</blockquote>\n<ul>\n<li>用来合成两个素材</li>\n<li>A输入盖在B输入上面，再连输出到viewer</li>\n<li>选中两个结点按住Shift，再按M可以快速将两个结点合成起来，但是要注意顺序，在前面选择的是A输入。</li>\n</ul>\n<h5 id=\"Premult预乘结点\"><a href=\"#Premult预乘结点\" class=\"headerlink\" title=\"Premult预乘结点\"></a>Premult预乘结点</h5><p> 处理背景有一层灰的图像，相当于将内容抠出来</p>\n<h5 id=\"Transform结点\"><a href=\"#Transform结点\" class=\"headerlink\" title=\"Transform结点\"></a>Transform结点</h5><blockquote>\n<p>快捷键T</p>\n</blockquote>\n<h5 id=\"Blur结点\"><a href=\"#Blur结点\" class=\"headerlink\" title=\"Blur结点\"></a>Blur结点</h5><blockquote>\n<p>快捷键B<br>模糊</p>\n</blockquote>\n<h5 id=\"Color结点调色\"><a href=\"#Color结点调色\" class=\"headerlink\" title=\"Color结点调色\"></a>Color结点调色</h5><h5 id=\"Write结点输出图像\"><a href=\"#Write结点输出图像\" class=\"headerlink\" title=\"Write结点输出图像\"></a>Write结点输出图像</h5><h2 id=\"课时3\"><a href=\"#课时3\" class=\"headerlink\" title=\"课时3\"></a>课时3</h2><ul>\n<li>三基色</li>\n<li>三原色<h5 id=\"xyY色度图\"><a href=\"#xyY色度图\" class=\"headerlink\" title=\"xyY色度图\"></a>xyY色度图</h5><blockquote>\n<p>横坐标0-1<br>马蹄形</p>\n</blockquote>\n<h5 id=\"色域（gamut）\"><a href=\"#色域（gamut）\" class=\"headerlink\" title=\"色域（gamut）\"></a>色域（gamut）</h5><blockquote>\n<p>要精确表示某种颜色必须要有一个框架，这个框架反映在色度图中就是色域。<br>需要RGB三基色和白点的色度坐标值<br>表示某种设备或标准所能描述的颜色范围，一般为三角形。</p>\n</blockquote>\n</li>\n</ul>\n<p>电脑显示器：sRGB色域，和ITU-709色域差不多</p>\n<p>显示器：Rec.709<br>电影院：P3色域<br>超高清电视：Rec.2020</p>\n<h5 id=\"伽马校正\"><a href=\"#伽马校正\" class=\"headerlink\" title=\"伽马校正\"></a>伽马校正</h5><p>自然界：1:1正比例的转换关系<br>摄像机：在处理时向上凹（伽马校正），为了抵销电视CRT处理时的伽马特性（向下凹）<br>最后还原为正比。<br>gamma曲线是一个幂函数</p>\n<ul>\n<li>电脑屏幕自带一个2.2的gamma</li>\n</ul>\n<h5 id=\"nuke对图像的处理-色彩管理\"><a href=\"#nuke对图像的处理-色彩管理\" class=\"headerlink\" title=\"nuke对图像的处理-色彩管理\"></a>nuke对图像的处理-色彩管理</h5><p>nuke在显示图像时，以sRGB显示，给了图像一个向上的曲线，以抵销电脑显示器的向下的曲线。</p>\n<h2 id=\"课时4\"><a href=\"#课时4\" class=\"headerlink\" title=\"课时4\"></a>课时4</h2><h4 id=\"RGBA通道\"><a href=\"#RGBA通道\" class=\"headerlink\" title=\"RGBA通道\"></a>RGBA通道</h4><h5 id=\"Shuffle-Copy结点\"><a href=\"#Shuffle-Copy结点\" class=\"headerlink\" title=\"Shuffle Copy结点\"></a>Shuffle Copy结点</h5><p>有两个输入<br>可以定义不同通道的来源</p>\n<h5 id=\"Shuffle结点\"><a href=\"#Shuffle结点\" class=\"headerlink\" title=\"Shuffle结点\"></a>Shuffle结点</h5><p>有一个输入</p>\n<blockquote>\n<p>功能：层与层之间信息的转换<br>按住shift再按shuffle可以独立地添加shuffle结点</p>\n</blockquote>\n<h2 id=\"课时5\"><a href=\"#课时5\" class=\"headerlink\" title=\"课时5\"></a>课时5</h2><h5 id=\"Grade结点\"><a href=\"#Grade结点\" class=\"headerlink\" title=\"Grade结点\"></a>Grade结点</h5><p>调节gamma值（亮度）</p>\n<h5 id=\"Roto结点\"><a href=\"#Roto结点\" class=\"headerlink\" title=\"Roto结点\"></a>Roto结点</h5><p>可用来画色块</p>\n<h2 id=\"课时6\"><a href=\"#课时6\" class=\"headerlink\" title=\"课时6\"></a>课时6</h2><h5 id=\"RotoPaint结点\"><a href=\"#RotoPaint结点\" class=\"headerlink\" title=\"RotoPaint结点\"></a>RotoPaint结点</h5><p>快捷键P<br>output默认为rgba</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210809163653261-16284982158371.png\" alt=\"image-20210809163653261\" loading=\"lazy\"></p>\n<h5 id=\"defocus-景深\"><a href=\"#defocus-景深\" class=\"headerlink\" title=\"defocus 景深\"></a>defocus 景深</h5><h2 id=\"课时8\"><a href=\"#课时8\" class=\"headerlink\" title=\"课时8\"></a>课时8</h2><h5 id=\"crop结点-修改包围盒大小\"><a href=\"#crop结点-修改包围盒大小\" class=\"headerlink\" title=\"crop结点 修改包围盒大小\"></a>crop结点 修改包围盒大小</h5><h4 id=\"transform\"><a href=\"#transform\" class=\"headerlink\" title=\"transform\"></a>transform</h4><p>按住ctrl再按鼠标左键复位</p>\n<h2 id=\"课时9\"><a href=\"#课时9\" class=\"headerlink\" title=\"课时9\"></a>课时9</h2><h5 id=\"取色\"><a href=\"#取色\" class=\"headerlink\" title=\"取色\"></a>取色</h5><p>先选吸管，再按ctrl+shift  鼠标点击取色</p>\n<h5 id=\"Primatte抠像\"><a href=\"#Primatte抠像\" class=\"headerlink\" title=\"Primatte抠像\"></a>Primatte抠像</h5><p>点Auto-compute</p>\n<h5 id=\"Shuffle结点-1\"><a href=\"#Shuffle结点-1\" class=\"headerlink\" title=\"Shuffle结点\"></a>Shuffle结点</h5><p>将primatte抠出来的alpha通道提取出来</p>\n<h5 id=\"HueCorrect-抑制背景色，调节颜色\"><a href=\"#HueCorrect-抑制背景色，调节颜色\" class=\"headerlink\" title=\"HueCorrect 抑制背景色，调节颜色\"></a>HueCorrect 抑制背景色，调节颜色</h5><h5 id=\"Dilate-收边\"><a href=\"#Dilate-收边\" class=\"headerlink\" title=\"Dilate 收边\"></a>Dilate 收边</h5>","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"<h1 id=\"Unity\"><a href=\"#Unity\" class=\"headerlink\" title=\"Unity\"></a>Unity</h1><h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><h5 id=\"getter-和-setter\"><a href=\"#getter-和-setter\" class=\"headerlink\" title=\"getter 和 setter\"></a>getter 和 setter</h5><blockquote>\n<p>选中需要创建Getter 和 Setter的变量，快捷键Ctrl + R,E</p>\n</blockquote>","more":"<h1 id=\"maya\"><a href=\"#maya\" class=\"headerlink\" title=\"maya\"></a>maya</h1><h2 id=\"快捷键-1\"><a href=\"#快捷键-1\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><p>F 选中某边、面、对象按F键可以使其处于视图中央</p>\n<h5 id=\"alt\"><a href=\"#alt\" class=\"headerlink\" title=\"alt\"></a>alt</h5><p>alt+B  切换背景颜色</p>\n<h5 id=\"ctrl\"><a href=\"#ctrl\" class=\"headerlink\" title=\"ctrl\"></a>ctrl</h5><p>ctrl+A 切换属性编辑器和层编辑器<br>ctrl+delete 可以删除组件及其相关联的顶点<br>ctrl+右键  边操作菜单<br>ctrl+中键  微调数值<br>ctrl+D  复制<br>ctrl+shift+D 特殊复制</p>\n<p>ctrl+G 打组</p>\n<p>按住ctrl是减选择</p>\n<p>ctrl+shift是添加选择</p>\n<h5 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift\"></a>shift</h5><p>shift 复选<br>shift+&lt;    shift+&gt;快速选择工具<br>shift+ 右键   顶点操作菜单，可以合并顶点</p>\n<h5 id=\"backspace\"><a href=\"#backspace\" class=\"headerlink\" title=\"backspace\"></a>backspace</h5><p>去掉两条线之间的点，不能去掉连接三条边的点</p>\n<hr>\n<h4 id=\"循环边\"><a href=\"#循环边\" class=\"headerlink\" title=\"循环边\"></a>循环边</h4><p>首尾相接的边</p>\n<p>根据四边面插入<br>如果碰到三角面或五边面时可以去掉或加入一条边，然后插入。</p>\n<h4 id=\"环形边\"><a href=\"#环形边\" class=\"headerlink\" title=\"环形边\"></a>环形边</h4><p>互相平行不相交的线<br>循环边是在环形边上插入的，相当于在环形边上架“桥梁”</p>\n<h4 id=\"删除\"><a href=\"#删除\" class=\"headerlink\" title=\"删除\"></a>删除</h4><ul>\n<li>删除历史：编辑-按类型删除-历史<h3 id=\"材质\"><a href=\"#材质\" class=\"headerlink\" title=\"材质\"></a>材质</h3>添加材质：右键选择添加新材质/在Hypershade里添加<br>对象模式下选中模型，然后右键选择材质球将XXX指定给当前选择<br>或按住鼠标右键然后将材质球拖给模型。<br>hypershade在窗口-渲染编辑器</li>\n</ul>\n<h4 id=\"对称选择\"><a href=\"#对称选择\" class=\"headerlink\" title=\"对称选择\"></a>对称选择</h4><p>双击选择工具可以进行对称设置</p>\n<h4 id=\"桥接\"><a href=\"#桥接\" class=\"headerlink\" title=\"桥接\"></a>桥接</h4><p>两个开口多边形对应在一起，且拓扑结构一样时，可以用边选择选中，然后再编辑网格-桥接，可以生成新的面和先将其连起来</p>\n<h4 id=\"打组\"><a href=\"#打组\" class=\"headerlink\" title=\"打组\"></a>打组</h4><p>打组有两种方法，一种是选择需要的物体，直接ctrl+g就可以打组，另外一种是依次点击edit-Group来打组。</p>\n<h4 id=\"归零数值\"><a href=\"#归零数值\" class=\"headerlink\" title=\"归零数值\"></a>归零数值</h4><ul>\n<li>在平移/缩放处右键-冻结</li>\n<li>修改-冻结变换</li>\n</ul>\n<h4 id=\"导出\"><a href=\"#导出\" class=\"headerlink\" title=\"导出\"></a>导出</h4><p>文件-导出当前选择-在框后面选择obj类型</p>\n<h1 id=\"blender\"><a href=\"#blender\" class=\"headerlink\" title=\"blender\"></a>blender</h1><blockquote>\n<p><a href=\"https://docs.blender.org/manual/zh-hans/dev/getting_started/index.html\">文档</a></p>\n<p><a href=\"https://www.bilibili.com/read/cv10547329\">视图快捷键</a></p>\n<p><a href=\"https://blog.csdn.net/u012204304/article/details/89030370\">快捷键</a></p>\n</blockquote>\n<p>s 缩放</p>\n<p>r 旋转</p>\n<h4 id=\"ctrl-1\"><a href=\"#ctrl-1\" class=\"headerlink\" title=\"ctrl\"></a>ctrl</h4><p>ctrl+Tab  切换编辑模式</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210811105948421-16286507912294.png\" alt=\"image-20210811105948421\"></p>\n<h4 id=\"shift-1\"><a href=\"#shift-1\" class=\"headerlink\" title=\"shift\"></a>shift</h4><p>shift+s 吸附游标位置</p>\n<p>游标→中心点 可以让视图以该物体为中心</p>\n<p><strong>取色</strong> 绘制模式下按S  S+点击  放进色板</p>\n<p><strong>隔离模式</strong>  /</p>\n<p><strong>融并</strong> X</p>\n<h1 id=\"数字特效与合成技术\"><a href=\"#数字特效与合成技术\" class=\"headerlink\" title=\"数字特效与合成技术\"></a>数字特效与合成技术</h1><h2 id=\"课时1\"><a href=\"#课时1\" class=\"headerlink\" title=\"课时1\"></a>课时1</h2><h4 id=\"导入文件\"><a href=\"#导入文件\" class=\"headerlink\" title=\"导入文件\"></a>导入文件</h4><ul>\n<li>在节点工作区按R</li>\n<li>直接拖进素材</li>\n<li>左侧Read打开</li>\n</ul>\n<h2 id=\"课时2\"><a href=\"#课时2\" class=\"headerlink\" title=\"课时2\"></a>课时2</h2><h4 id=\"导入\"><a href=\"#导入\" class=\"headerlink\" title=\"导入\"></a>导入</h4><p>导入素材后，全选节点按L键可以令其整齐排列</p>\n<h4 id=\"显示图像内容\"><a href=\"#显示图像内容\" class=\"headerlink\" title=\"显示图像内容\"></a>显示图像内容</h4><ul>\n<li>选中某个结点按X（数字）键，可以令viewer产生X号箭头，连接该节点，将上面的画面显示出来</li>\n<li>然后按123即可在不同画面中切换</li>\n</ul>\n<h4 id=\"ProjectSettings\"><a href=\"#ProjectSettings\" class=\"headerlink\" title=\"ProjectSettings\"></a>ProjectSettings</h4><blockquote>\n<p>在结点编辑区按S</p>\n</blockquote>\n<h5 id=\"帧速率\"><a href=\"#帧速率\" class=\"headerlink\" title=\"帧速率\"></a>帧速率</h5><ul>\n<li>电影：24帧</li>\n<li>短视频：25帧<h5 id=\"时间线\"><a href=\"#时间线\" class=\"headerlink\" title=\"时间线\"></a>时间线</h5></li>\n</ul>\n<hr>\n<h3 id=\"结点\"><a href=\"#结点\" class=\"headerlink\" title=\"结点\"></a>结点</h3><blockquote>\n<p>选中结点后按D键可以将该节点的作用删除</p>\n</blockquote>\n<h5 id=\"Merge合成结点\"><a href=\"#Merge合成结点\" class=\"headerlink\" title=\"Merge合成结点\"></a>Merge合成结点</h5><blockquote>\n<p>1.快捷键M<br>2.从工具架中选择merge<br>3.右键选择merge<br>4.tab键搜索结点名称</p>\n</blockquote>\n<ul>\n<li>用来合成两个素材</li>\n<li>A输入盖在B输入上面，再连输出到viewer</li>\n<li>选中两个结点按住Shift，再按M可以快速将两个结点合成起来，但是要注意顺序，在前面选择的是A输入。</li>\n</ul>\n<h5 id=\"Premult预乘结点\"><a href=\"#Premult预乘结点\" class=\"headerlink\" title=\"Premult预乘结点\"></a>Premult预乘结点</h5><p> 处理背景有一层灰的图像，相当于将内容抠出来</p>\n<h5 id=\"Transform结点\"><a href=\"#Transform结点\" class=\"headerlink\" title=\"Transform结点\"></a>Transform结点</h5><blockquote>\n<p>快捷键T</p>\n</blockquote>\n<h5 id=\"Blur结点\"><a href=\"#Blur结点\" class=\"headerlink\" title=\"Blur结点\"></a>Blur结点</h5><blockquote>\n<p>快捷键B<br>模糊</p>\n</blockquote>\n<h5 id=\"Color结点调色\"><a href=\"#Color结点调色\" class=\"headerlink\" title=\"Color结点调色\"></a>Color结点调色</h5><h5 id=\"Write结点输出图像\"><a href=\"#Write结点输出图像\" class=\"headerlink\" title=\"Write结点输出图像\"></a>Write结点输出图像</h5><h2 id=\"课时3\"><a href=\"#课时3\" class=\"headerlink\" title=\"课时3\"></a>课时3</h2><ul>\n<li>三基色</li>\n<li>三原色<h5 id=\"xyY色度图\"><a href=\"#xyY色度图\" class=\"headerlink\" title=\"xyY色度图\"></a>xyY色度图</h5><blockquote>\n<p>横坐标0-1<br>马蹄形</p>\n</blockquote>\n<h5 id=\"色域（gamut）\"><a href=\"#色域（gamut）\" class=\"headerlink\" title=\"色域（gamut）\"></a>色域（gamut）</h5><blockquote>\n<p>要精确表示某种颜色必须要有一个框架，这个框架反映在色度图中就是色域。<br>需要RGB三基色和白点的色度坐标值<br>表示某种设备或标准所能描述的颜色范围，一般为三角形。</p>\n</blockquote>\n</li>\n</ul>\n<p>电脑显示器：sRGB色域，和ITU-709色域差不多</p>\n<p>显示器：Rec.709<br>电影院：P3色域<br>超高清电视：Rec.2020</p>\n<h5 id=\"伽马校正\"><a href=\"#伽马校正\" class=\"headerlink\" title=\"伽马校正\"></a>伽马校正</h5><p>自然界：1:1正比例的转换关系<br>摄像机：在处理时向上凹（伽马校正），为了抵销电视CRT处理时的伽马特性（向下凹）<br>最后还原为正比。<br>gamma曲线是一个幂函数</p>\n<ul>\n<li>电脑屏幕自带一个2.2的gamma</li>\n</ul>\n<h5 id=\"nuke对图像的处理-色彩管理\"><a href=\"#nuke对图像的处理-色彩管理\" class=\"headerlink\" title=\"nuke对图像的处理-色彩管理\"></a>nuke对图像的处理-色彩管理</h5><p>nuke在显示图像时，以sRGB显示，给了图像一个向上的曲线，以抵销电脑显示器的向下的曲线。</p>\n<h2 id=\"课时4\"><a href=\"#课时4\" class=\"headerlink\" title=\"课时4\"></a>课时4</h2><h4 id=\"RGBA通道\"><a href=\"#RGBA通道\" class=\"headerlink\" title=\"RGBA通道\"></a>RGBA通道</h4><h5 id=\"Shuffle-Copy结点\"><a href=\"#Shuffle-Copy结点\" class=\"headerlink\" title=\"Shuffle Copy结点\"></a>Shuffle Copy结点</h5><p>有两个输入<br>可以定义不同通道的来源</p>\n<h5 id=\"Shuffle结点\"><a href=\"#Shuffle结点\" class=\"headerlink\" title=\"Shuffle结点\"></a>Shuffle结点</h5><p>有一个输入</p>\n<blockquote>\n<p>功能：层与层之间信息的转换<br>按住shift再按shuffle可以独立地添加shuffle结点</p>\n</blockquote>\n<h2 id=\"课时5\"><a href=\"#课时5\" class=\"headerlink\" title=\"课时5\"></a>课时5</h2><h5 id=\"Grade结点\"><a href=\"#Grade结点\" class=\"headerlink\" title=\"Grade结点\"></a>Grade结点</h5><p>调节gamma值（亮度）</p>\n<h5 id=\"Roto结点\"><a href=\"#Roto结点\" class=\"headerlink\" title=\"Roto结点\"></a>Roto结点</h5><p>可用来画色块</p>\n<h2 id=\"课时6\"><a href=\"#课时6\" class=\"headerlink\" title=\"课时6\"></a>课时6</h2><h5 id=\"RotoPaint结点\"><a href=\"#RotoPaint结点\" class=\"headerlink\" title=\"RotoPaint结点\"></a>RotoPaint结点</h5><p>快捷键P<br>output默认为rgba</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-06-快捷键等小tips\\image-20210809163653261-16284982158371.png\" alt=\"image-20210809163653261\"></p>\n<h5 id=\"defocus-景深\"><a href=\"#defocus-景深\" class=\"headerlink\" title=\"defocus 景深\"></a>defocus 景深</h5><h2 id=\"课时8\"><a href=\"#课时8\" class=\"headerlink\" title=\"课时8\"></a>课时8</h2><h5 id=\"crop结点-修改包围盒大小\"><a href=\"#crop结点-修改包围盒大小\" class=\"headerlink\" title=\"crop结点 修改包围盒大小\"></a>crop结点 修改包围盒大小</h5><h4 id=\"transform\"><a href=\"#transform\" class=\"headerlink\" title=\"transform\"></a>transform</h4><p>按住ctrl再按鼠标左键复位</p>\n<h2 id=\"课时9\"><a href=\"#课时9\" class=\"headerlink\" title=\"课时9\"></a>课时9</h2><h5 id=\"取色\"><a href=\"#取色\" class=\"headerlink\" title=\"取色\"></a>取色</h5><p>先选吸管，再按ctrl+shift  鼠标点击取色</p>\n<h5 id=\"Primatte抠像\"><a href=\"#Primatte抠像\" class=\"headerlink\" title=\"Primatte抠像\"></a>Primatte抠像</h5><p>点Auto-compute</p>\n<h5 id=\"Shuffle结点-1\"><a href=\"#Shuffle结点-1\" class=\"headerlink\" title=\"Shuffle结点\"></a>Shuffle结点</h5><p>将primatte抠出来的alpha通道提取出来</p>\n<h5 id=\"HueCorrect-抑制背景色，调节颜色\"><a href=\"#HueCorrect-抑制背景色，调节颜色\" class=\"headerlink\" title=\"HueCorrect 抑制背景色，调节颜色\"></a>HueCorrect 抑制背景色，调节颜色</h5><h5 id=\"Dilate-收边\"><a href=\"#Dilate-收边\" class=\"headerlink\" title=\"Dilate 收边\"></a>Dilate 收边</h5>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-07-25T17:12:06.810Z","updated":"1985-10-26T08:15:00.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cks336nq8000g1svog2p699jt","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo new <span class=\"token string\">\"My New Post\"</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo server<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo generate<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">$ hexo deploy<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"2021-08-09-小学期建造游戏Demo开发笔记（三）","date":"2021-08-09T09:27:17.000Z","_content":"\n# 技术美术部分\n\n## 遮挡剔除\n\n\n\n[URP使用教程](https://www.cnblogs.com/hont/p/14221019.html)\n\n右键`Create > Rendering > Universal Render Pipeline > Pipeline Asset`可以新建渲染管道资源\n\n1. 在Assets文件下新建一个文件夹（自定义命名）在文件夹下新建一个HDRP文件夹。\n2. 选中HDRP文件夹右键Create->Rending->Pipeline Asset 就可以得到HDRP渲染管道资源HDRenderPipelineAsset\n3. 将渲染管道资源放到项目管理的 Scriptable Render Pipeline Settings 中 Edit --> Project Settings --> Graphics --> 拖动 UniversalRenderPipelineAsset到Scriptable Render Pipeline Settings上\n\n### 材质外发光Shader\n\n\n\n\n\n\n\n# 美术部分\n\n## 使用blender绘制贴图\n\n[视频教程](https://www.bilibili.com/video/BV1w54y187nG/?spm_id_from=333.788.recommend_more_video.-1)\n\n右键该部分，选择垂直切分，出现两个视图。\n\n![image-20210811105137078](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105137078-16286502992751-16286527735535.png)\n\n在一边的视图选择UV编辑器。\n\n![image-20210811105727012](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105727012.png)\n\n切换到编辑模式→按A全选所有定点→点击UV→只能UV投射，按默认选项\n\n![image-20210811105417918](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105417918-16286504605682.png)_编辑模式_\n\n![image-20210811105551654](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105551654-16286505538173.png)\n\n进入纹理绘制模式，然后切换模式为单张图像。新建一张图片。\n\n![image-20210811113341047](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113341047.png)\n\n\n\n![image-20210811113318359](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113318359.png)\n\n然后在实体模式显示的状态下可以看到绘制的内容。但切换到渲染模式则无法看到。\n\n因此我们需要给它添加材质。\n\n进入材质选项卡，添加新的材质，然后修改它的基础色为使用图片纹理，选中之前新建的图片纹理即可。\n\n![image-20210811113700259](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113700259.png)\n\n为了方便观察，切换回实体模式来绘制贴图。\n\n","source":"_posts/2021-08-09-小学期建造游戏Demo开发笔记（三）.md","raw":"---\ntitle: 2021-08-09-小学期建造游戏Demo开发笔记（三）\ndate: 2021-08-09 17:27:17\ntags:\n  - Blender贴图绘制\ncategories:\n  - 小学期建造游戏Demo开发笔记 \n---\n\n# 技术美术部分\n\n## 遮挡剔除\n\n\n\n[URP使用教程](https://www.cnblogs.com/hont/p/14221019.html)\n\n右键`Create > Rendering > Universal Render Pipeline > Pipeline Asset`可以新建渲染管道资源\n\n1. 在Assets文件下新建一个文件夹（自定义命名）在文件夹下新建一个HDRP文件夹。\n2. 选中HDRP文件夹右键Create->Rending->Pipeline Asset 就可以得到HDRP渲染管道资源HDRenderPipelineAsset\n3. 将渲染管道资源放到项目管理的 Scriptable Render Pipeline Settings 中 Edit --> Project Settings --> Graphics --> 拖动 UniversalRenderPipelineAsset到Scriptable Render Pipeline Settings上\n\n### 材质外发光Shader\n\n\n\n\n\n\n\n# 美术部分\n\n## 使用blender绘制贴图\n\n[视频教程](https://www.bilibili.com/video/BV1w54y187nG/?spm_id_from=333.788.recommend_more_video.-1)\n\n右键该部分，选择垂直切分，出现两个视图。\n\n![image-20210811105137078](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105137078-16286502992751-16286527735535.png)\n\n在一边的视图选择UV编辑器。\n\n![image-20210811105727012](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105727012.png)\n\n切换到编辑模式→按A全选所有定点→点击UV→只能UV投射，按默认选项\n\n![image-20210811105417918](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105417918-16286504605682.png)_编辑模式_\n\n![image-20210811105551654](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105551654-16286505538173.png)\n\n进入纹理绘制模式，然后切换模式为单张图像。新建一张图片。\n\n![image-20210811113341047](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113341047.png)\n\n\n\n![image-20210811113318359](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113318359.png)\n\n然后在实体模式显示的状态下可以看到绘制的内容。但切换到渲染模式则无法看到。\n\n因此我们需要给它添加材质。\n\n进入材质选项卡，添加新的材质，然后修改它的基础色为使用图片纹理，选中之前新建的图片纹理即可。\n\n![image-20210811113700259](D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113700259.png)\n\n为了方便观察，切换回实体模式来绘制贴图。\n\n","slug":"2021-08-09-小学期建造游戏Demo开发笔记（三）","published":1,"updated":"2021-08-16T14:21:27.976Z","_id":"cksd78u850000awvocww7eni2","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"技术美术部分\"><a href=\"#技术美术部分\" class=\"headerlink\" title=\"技术美术部分\"></a>技术美术部分</h1><h2 id=\"遮挡剔除\"><a href=\"#遮挡剔除\" class=\"headerlink\" title=\"遮挡剔除\"></a>遮挡剔除</h2><p><a href=\"https://www.cnblogs.com/hont/p/14221019.html\">URP使用教程</a></p>\n<p>右键<code>Create &gt; Rendering &gt; Universal Render Pipeline &gt; Pipeline Asset</code>可以新建渲染管道资源</p>\n<ol>\n<li>在Assets文件下新建一个文件夹（自定义命名）在文件夹下新建一个HDRP文件夹。</li>\n<li>选中HDRP文件夹右键Create-&gt;Rending-&gt;Pipeline Asset 就可以得到HDRP渲染管道资源HDRenderPipelineAsset</li>\n<li>将渲染管道资源放到项目管理的 Scriptable Render Pipeline Settings 中 Edit –&gt; Project Settings –&gt; Graphics –&gt; 拖动 UniversalRenderPipelineAsset到Scriptable Render Pipeline Settings上</li>\n</ol>\n<h3 id=\"材质外发光Shader\"><a href=\"#材质外发光Shader\" class=\"headerlink\" title=\"材质外发光Shader\"></a>材质外发光Shader</h3><h1 id=\"美术部分\"><a href=\"#美术部分\" class=\"headerlink\" title=\"美术部分\"></a>美术部分</h1><h2 id=\"使用blender绘制贴图\"><a href=\"#使用blender绘制贴图\" class=\"headerlink\" title=\"使用blender绘制贴图\"></a>使用blender绘制贴图</h2><p><a href=\"https://www.bilibili.com/video/BV1w54y187nG/?spm_id_from=333.788.recommend_more_video.-1\">视频教程</a></p>\n<p>右键该部分，选择垂直切分，出现两个视图。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105137078-16286502992751-16286527735535.png\" alt=\"image-20210811105137078\" loading=\"lazy\"></p>\n<p>在一边的视图选择UV编辑器。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105727012.png\" alt=\"image-20210811105727012\" loading=\"lazy\"></p>\n<p>切换到编辑模式→按A全选所有定点→点击UV→只能UV投射，按默认选项</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105417918-16286504605682.png\" alt=\"image-20210811105417918\" loading=\"lazy\"><em>编辑模式</em></p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105551654-16286505538173.png\" alt=\"image-20210811105551654\" loading=\"lazy\"></p>\n<p>进入纹理绘制模式，然后切换模式为单张图像。新建一张图片。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113341047.png\" alt=\"image-20210811113341047\" loading=\"lazy\"></p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113318359.png\" alt=\"image-20210811113318359\" loading=\"lazy\"></p>\n<p>然后在实体模式显示的状态下可以看到绘制的内容。但切换到渲染模式则无法看到。</p>\n<p>因此我们需要给它添加材质。</p>\n<p>进入材质选项卡，添加新的材质，然后修改它的基础色为使用图片纹理，选中之前新建的图片纹理即可。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113700259.png\" alt=\"image-20210811113700259\" loading=\"lazy\"></p>\n<p>为了方便观察，切换回实体模式来绘制贴图。</p>\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":"<h1 id=\"技术美术部分\"><a href=\"#技术美术部分\" class=\"headerlink\" title=\"技术美术部分\"></a>技术美术部分</h1><h2 id=\"遮挡剔除\"><a href=\"#遮挡剔除\" class=\"headerlink\" title=\"遮挡剔除\"></a>遮挡剔除</h2><p><a href=\"https://www.cnblogs.com/hont/p/14221019.html\">URP使用教程</a></p>\n<p>右键<code>Create &gt; Rendering &gt; Universal Render Pipeline &gt; Pipeline Asset</code>可以新建渲染管道资源</p>\n<ol>\n<li>在Assets文件下新建一个文件夹（自定义命名）在文件夹下新建一个HDRP文件夹。</li>\n<li>选中HDRP文件夹右键Create-&gt;Rending-&gt;Pipeline Asset 就可以得到HDRP渲染管道资源HDRenderPipelineAsset</li>\n<li>将渲染管道资源放到项目管理的 Scriptable Render Pipeline Settings 中 Edit –&gt; Project Settings –&gt; Graphics –&gt; 拖动 UniversalRenderPipelineAsset到Scriptable Render Pipeline Settings上</li>\n</ol>\n<h3 id=\"材质外发光Shader\"><a href=\"#材质外发光Shader\" class=\"headerlink\" title=\"材质外发光Shader\"></a>材质外发光Shader</h3><h1 id=\"美术部分\"><a href=\"#美术部分\" class=\"headerlink\" title=\"美术部分\"></a>美术部分</h1><h2 id=\"使用blender绘制贴图\"><a href=\"#使用blender绘制贴图\" class=\"headerlink\" title=\"使用blender绘制贴图\"></a>使用blender绘制贴图</h2><p><a href=\"https://www.bilibili.com/video/BV1w54y187nG/?spm_id_from=333.788.recommend_more_video.-1\">视频教程</a></p>\n<p>右键该部分，选择垂直切分，出现两个视图。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105137078-16286502992751-16286527735535.png\" alt=\"image-20210811105137078\"></p>\n<p>在一边的视图选择UV编辑器。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105727012.png\" alt=\"image-20210811105727012\"></p>\n<p>切换到编辑模式→按A全选所有定点→点击UV→只能UV投射，按默认选项</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105417918-16286504605682.png\" alt=\"image-20210811105417918\"><em>编辑模式</em></p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811105551654-16286505538173.png\" alt=\"image-20210811105551654\"></p>\n<p>进入纹理绘制模式，然后切换模式为单张图像。新建一张图片。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113341047.png\" alt=\"image-20210811113341047\"></p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113318359.png\" alt=\"image-20210811113318359\"></p>\n<p>然后在实体模式显示的状态下可以看到绘制的内容。但切换到渲染模式则无法看到。</p>\n<p>因此我们需要给它添加材质。</p>\n<p>进入材质选项卡，添加新的材质，然后修改它的基础色为使用图片纹理，选中之前新建的图片纹理即可。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\20210-08-09-小学期建造游戏Demo开发笔记（三）\\image-20210811113700259.png\" alt=\"image-20210811113700259\"></p>\n<p>为了方便观察，切换回实体模式来绘制贴图。</p>\n"},{"title":"2021-08-14-天使坠落绘画过程记录","date":"2021-08-14T12:14:05.000Z","_content":"\n# 绘制过程\n\n先放一下成图：\n\n![fgj740.md.png](https://z3.ax1x.com/2021/08/15/fgj740.md.png)\n\n## 草稿\n\n这次想画天使（无防备地）躺在落着花朵的地上的场景。\n\n先大概起草一下脑补的样子，因为想画一张竖幅的图，所以把腿缩起来方便让全身入画。\n\n<!-- more -->\n\n>  这里pose怎么摆研究了很久但还是有点奇怪.......\n>\n>  天使就应该光脚！\n\n![fgjRgS.md.png](https://z3.ax1x.com/2021/08/15/fgjRgS.md.png)\n\n## 线稿\n\n由于要强化睡着时的**无防备感**，所以把草稿时闭着的嘴改成了张嘴。\n\n![fgjyNt.md.png](https://z3.ax1x.com/2021/08/15/fgjyNt.md.png)\n\n## 铺色\n\n先用大色块+正片叠底图层铺一下大致的光影效果，细化时心里比较有数。\n\n> 这个时候光影还有很多问题，就是大致看一下效果。\n\n![fgjOvF.md.png](https://z3.ax1x.com/2021/08/15/fgjOvF.md.png)\n\n## 细化\n\n为了表现圣洁感，不打算给肤色做太多强调。另外全身衣服都是黑色的，所以整体的固有色基本是黑白两种颜色。因此直接用黑白上色，之后再用渐变映射统一色调。\n\n>  第一次直接画黑白稿，必须用明度来把物体区分出来不然就会糊在一起....\n\n![fgjLgU.md.png](https://z3.ax1x.com/2021/08/15/fgjLgU.md.png)\n\n胸前的链子直接通过修改ps的笔刷设置，把硬边圆头笔的间距拉大即可。然后添加一下描边和内阴影的图层效果，就可以直接直接画出珠子。\n\n![image-20210813214857769](D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813214857769.png)\n\n## 渐变映射\n\n细化完以后在所有图层上加一个渐变映射的调整图层，然后调一下渐变映射的颜色。\n\n![image-20210813221722505](D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813221722505.png)\n\n\n\n![fgjju4.md.png](https://z3.ax1x.com/2021/08/15/fgjju4.md.png)\n\n## 完成\n\n最后加一些彩虹的炫光、模糊和噪点即可！(这里由于图像大小问题，没有放加噪点的版本)\n\n![fgj740.md.png](https://z3.ax1x.com/2021/08/15/fgj740.md.png)\n\n\n\n\n\n","source":"_posts/2021-08-14-天使坠落绘画过程记录.md","raw":"---\ntitle: 2021-08-14-天使坠落绘画过程记录\ndate: 2021-08-14 20:14:05\ntags:\n  - 渐变映射\ncategories:\n  - 画画笔记\n---\n\n# 绘制过程\n\n先放一下成图：\n\n![fgj740.md.png](https://z3.ax1x.com/2021/08/15/fgj740.md.png)\n\n## 草稿\n\n这次想画天使（无防备地）躺在落着花朵的地上的场景。\n\n先大概起草一下脑补的样子，因为想画一张竖幅的图，所以把腿缩起来方便让全身入画。\n\n<!-- more -->\n\n>  这里pose怎么摆研究了很久但还是有点奇怪.......\n>\n>  天使就应该光脚！\n\n![fgjRgS.md.png](https://z3.ax1x.com/2021/08/15/fgjRgS.md.png)\n\n## 线稿\n\n由于要强化睡着时的**无防备感**，所以把草稿时闭着的嘴改成了张嘴。\n\n![fgjyNt.md.png](https://z3.ax1x.com/2021/08/15/fgjyNt.md.png)\n\n## 铺色\n\n先用大色块+正片叠底图层铺一下大致的光影效果，细化时心里比较有数。\n\n> 这个时候光影还有很多问题，就是大致看一下效果。\n\n![fgjOvF.md.png](https://z3.ax1x.com/2021/08/15/fgjOvF.md.png)\n\n## 细化\n\n为了表现圣洁感，不打算给肤色做太多强调。另外全身衣服都是黑色的，所以整体的固有色基本是黑白两种颜色。因此直接用黑白上色，之后再用渐变映射统一色调。\n\n>  第一次直接画黑白稿，必须用明度来把物体区分出来不然就会糊在一起....\n\n![fgjLgU.md.png](https://z3.ax1x.com/2021/08/15/fgjLgU.md.png)\n\n胸前的链子直接通过修改ps的笔刷设置，把硬边圆头笔的间距拉大即可。然后添加一下描边和内阴影的图层效果，就可以直接直接画出珠子。\n\n![image-20210813214857769](D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813214857769.png)\n\n## 渐变映射\n\n细化完以后在所有图层上加一个渐变映射的调整图层，然后调一下渐变映射的颜色。\n\n![image-20210813221722505](D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813221722505.png)\n\n\n\n![fgjju4.md.png](https://z3.ax1x.com/2021/08/15/fgjju4.md.png)\n\n## 完成\n\n最后加一些彩虹的炫光、模糊和噪点即可！(这里由于图像大小问题，没有放加噪点的版本)\n\n![fgj740.md.png](https://z3.ax1x.com/2021/08/15/fgj740.md.png)\n\n\n\n\n\n","slug":"2021-08-14-天使坠落绘画过程记录","published":1,"updated":"2021-08-16T15:10:03.884Z","_id":"cksd78u8e0002awvo885zhthq","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"绘制过程\"><a href=\"#绘制过程\" class=\"headerlink\" title=\"绘制过程\"></a>绘制过程</h1><p>先放一下成图：</p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgj740.md.png\" alt=\"fgj740.md.png\" loading=\"lazy\"></p>\n<h2 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h2><p>这次想画天使（无防备地）躺在落着花朵的地上的场景。</p>\n<p>先大概起草一下脑补的样子，因为想画一张竖幅的图，所以把腿缩起来方便让全身入画。</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p> 这里pose怎么摆研究了很久但还是有点奇怪…….</p>\n<p> 天使就应该光脚！</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjRgS.md.png\" alt=\"fgjRgS.md.png\" loading=\"lazy\"></p>\n<h2 id=\"线稿\"><a href=\"#线稿\" class=\"headerlink\" title=\"线稿\"></a>线稿</h2><p>由于要强化睡着时的<strong>无防备感</strong>，所以把草稿时闭着的嘴改成了张嘴。</p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjyNt.md.png\" alt=\"fgjyNt.md.png\" loading=\"lazy\"></p>\n<h2 id=\"铺色\"><a href=\"#铺色\" class=\"headerlink\" title=\"铺色\"></a>铺色</h2><p>先用大色块+正片叠底图层铺一下大致的光影效果，细化时心里比较有数。</p>\n<blockquote>\n<p>这个时候光影还有很多问题，就是大致看一下效果。</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjOvF.md.png\" alt=\"fgjOvF.md.png\" loading=\"lazy\"></p>\n<h2 id=\"细化\"><a href=\"#细化\" class=\"headerlink\" title=\"细化\"></a>细化</h2><p>为了表现圣洁感，不打算给肤色做太多强调。另外全身衣服都是黑色的，所以整体的固有色基本是黑白两种颜色。因此直接用黑白上色，之后再用渐变映射统一色调。</p>\n<blockquote>\n<p> 第一次直接画黑白稿，必须用明度来把物体区分出来不然就会糊在一起….</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjLgU.md.png\" alt=\"fgjLgU.md.png\" loading=\"lazy\"></p>\n<p>胸前的链子直接通过修改ps的笔刷设置，把硬边圆头笔的间距拉大即可。然后添加一下描边和内阴影的图层效果，就可以直接直接画出珠子。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813214857769.png\" alt=\"image-20210813214857769\" loading=\"lazy\"></p>\n<h2 id=\"渐变映射\"><a href=\"#渐变映射\" class=\"headerlink\" title=\"渐变映射\"></a>渐变映射</h2><p>细化完以后在所有图层上加一个渐变映射的调整图层，然后调一下渐变映射的颜色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813221722505.png\" alt=\"image-20210813221722505\" loading=\"lazy\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjju4.md.png\" alt=\"fgjju4.md.png\" loading=\"lazy\"></p>\n<h2 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h2><p>最后加一些彩虹的炫光、模糊和噪点即可！(这里由于图像大小问题，没有放加噪点的版本)</p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgj740.md.png\" alt=\"fgj740.md.png\" loading=\"lazy\"></p>\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":true}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"<h1 id=\"绘制过程\"><a href=\"#绘制过程\" class=\"headerlink\" title=\"绘制过程\"></a>绘制过程</h1><p>先放一下成图：</p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgj740.md.png\" alt=\"fgj740.md.png\"></p>\n<h2 id=\"草稿\"><a href=\"#草稿\" class=\"headerlink\" title=\"草稿\"></a>草稿</h2><p>这次想画天使（无防备地）躺在落着花朵的地上的场景。</p>\n<p>先大概起草一下脑补的样子，因为想画一张竖幅的图，所以把腿缩起来方便让全身入画。</p>","more":"<blockquote>\n<p> 这里pose怎么摆研究了很久但还是有点奇怪…….</p>\n<p> 天使就应该光脚！</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjRgS.md.png\" alt=\"fgjRgS.md.png\"></p>\n<h2 id=\"线稿\"><a href=\"#线稿\" class=\"headerlink\" title=\"线稿\"></a>线稿</h2><p>由于要强化睡着时的<strong>无防备感</strong>，所以把草稿时闭着的嘴改成了张嘴。</p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjyNt.md.png\" alt=\"fgjyNt.md.png\"></p>\n<h2 id=\"铺色\"><a href=\"#铺色\" class=\"headerlink\" title=\"铺色\"></a>铺色</h2><p>先用大色块+正片叠底图层铺一下大致的光影效果，细化时心里比较有数。</p>\n<blockquote>\n<p>这个时候光影还有很多问题，就是大致看一下效果。</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjOvF.md.png\" alt=\"fgjOvF.md.png\"></p>\n<h2 id=\"细化\"><a href=\"#细化\" class=\"headerlink\" title=\"细化\"></a>细化</h2><p>为了表现圣洁感，不打算给肤色做太多强调。另外全身衣服都是黑色的，所以整体的固有色基本是黑白两种颜色。因此直接用黑白上色，之后再用渐变映射统一色调。</p>\n<blockquote>\n<p> 第一次直接画黑白稿，必须用明度来把物体区分出来不然就会糊在一起….</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjLgU.md.png\" alt=\"fgjLgU.md.png\"></p>\n<p>胸前的链子直接通过修改ps的笔刷设置，把硬边圆头笔的间距拉大即可。然后添加一下描边和内阴影的图层效果，就可以直接直接画出珠子。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813214857769.png\" alt=\"image-20210813214857769\"></p>\n<h2 id=\"渐变映射\"><a href=\"#渐变映射\" class=\"headerlink\" title=\"渐变映射\"></a>渐变映射</h2><p>细化完以后在所有图层上加一个渐变映射的调整图层，然后调一下渐变映射的颜色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-14-天使坠落绘画过程记录\\image-20210813221722505.png\" alt=\"image-20210813221722505\"></p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgjju4.md.png\" alt=\"fgjju4.md.png\"></p>\n<h2 id=\"完成\"><a href=\"#完成\" class=\"headerlink\" title=\"完成\"></a>完成</h2><p>最后加一些彩虹的炫光、模糊和噪点即可！(这里由于图像大小问题，没有放加噪点的版本)</p>\n<p><img src=\"https://z3.ax1x.com/2021/08/15/fgj740.md.png\" alt=\"fgj740.md.png\"></p>"},{"title":"2021-08-15-庄懂的技术美术入门课学习笔记（一）","date":"2021-08-15T11:31:53.000Z","katex":true,"_content":"\n# 开始学习\n\n[视频链接](https://space.bilibili.com/6373917/video)\n\n[Shader Forge中文文档](https://acegikmo.com/shaderforge/nodes/?lang=zh_cn)\n\n\n\n<!-- more -->\n\n> 对应课程0~3课内容\n\n# 渲染流程\n\n### 光照模型\n\n#### Lambert光照模型\n\n根据向量点乘的图形学含义，令\n\n- 模型表面的垂直方向为向量nDir（法线方向）\n\n- 光照方向的反方向为向量lDir\n\n- 输出nDir·lDir的结果为下图的光照表现：\n\n  ![image-20210815210059777](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210059777.png)\n\n其中明暗交接处之后的（即点积小于0的部分）都为纯黑色。由于负数是无意义的光照，把负数部分都取0，即为Lambert光照模型。\n\n![image-20210815210900380](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210900380.png)\n\n##### ShaderForge实现\n\n上述公式，两个向量点乘，输出到Emission上。然后用Clamp结点来限制一下范围0-1\n\n![image-20210815212830722](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815212830722.png)\n\n##### 代码实现\n\n```c#\n\t\t\tstruct VertexInput {\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;//获取法线信息\n            };\n            struct VertexOutput {\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            };\n            VertexOutput vert (VertexInput v) {\n                VertexOutput o = (VertexOutput)0;\n                o.pos = UnityObjectToClipPos( v.vertex );//转换到裁剪空间\n\t\t\t\to.nDirWS = UnityObjectToWorldNormal(v.normal);//由模型法线信息换算的世界空间法线信息\n\n                return o;\n            }\n            float4 frag(VertexOutput i) : COLOR {\n////// Lighting:\n////// Emissive:\n\t\t\t\tfloat3 nDir = i.nDirWS;\n\t\t\t\tfloat3 lDir = normalize(_WorldSpaceLightPos0.xyz);//Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl = dot(nDir, lDir );//点乘\n\t\t\t\tfloat lambert = max(0.0, nDotl);//把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);//注意代码规范，转化为float4 rgba\n            }\n```\n\n完整代码：\n\n<details>\n  <summary>LambertShader.shader</summary>\n\n```c#\nShader \"Class1/LambertShader\" {\n    Properties {\n    }\n    SubShader {\n        Tags {\n            \"RenderType\"=\"Opaque\"\n        }\n        LOD 100\n        Pass {\n            Name \"FORWARD\"\n            Tags {\n                \"LightMode\"=\"ForwardBase\"\n            }\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n            struct VertexInput {\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;//获取法线信息\n            };\n            struct VertexOutput {\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            };\n            VertexOutput vert (VertexInput v) {\n                VertexOutput o = (VertexOutput)0;\n                o.pos = UnityObjectToClipPos( v.vertex );//转换到裁剪空间\n\t\t\t\to.nDirWS = UnityObjectToWorldNormal(v.normal);//由模型法线信息换算的世界空间法线信息\n\n                return o;\n            }\n            float4 frag(VertexOutput i) : COLOR {\n////// Lighting:\n////// Emissive:\n\t\t\t\tfloat3 nDir = i.nDirWS;\n\t\t\t\tfloat3 lDir = normalize(_WorldSpaceLightPos0.xyz);//Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl = dot(nDir, lDir );//点乘\n\t\t\t\tfloat lambert = max(0.0, nDotl);//把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);//注意代码规范，转化为float4 rgba\n            }\n            ENDCG\n        }\n    }\n    FallBack \"Diffuse\"\n}\n```\n\n</details>\n\n\n#### 半Lambert光照模型\n\nLambert在明暗交界线后的部分是死黑的，半Lambert模型就是整体*0.5+0.5,让暗部显得更透气，但这样没有了明暗交界线。\n\n![image-20210815211247604](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815211247604.png)\n\n##### ShaderForge实现\n\n把点乘的结果用multiply*0.5再add0.5\n\n![image-20210815213237161](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213237161.png)\n\n### 调子映射\n\n![image-20210815213947360](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213947360.png)\n\nShaderForge：\n\n在上面半Lambert模型的基础上，把输出的点乘结果和另一个常量通过Append结点结合成一个向量。这样可以得到一个uv坐标，对输入的RampTex图像文件根据该坐标采样，即可输出上面的映射后结果。\n\n![image-20210815214138597](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815214138597.png)\n\n\n\n## 应用\n\n### 卡通渲染效果\n\n> 在最亮部可能出现暗点，需要把贴图的Wrap Mode修改为Clamp而不是Repeat。\n>\n> 目前的描边会有比较明显的锯齿，卡渲一般会加抗锯齿后处理。\n\n![image-20210815221158922](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815221158922.png)\n\n### 次表面散射效果（SSS效果）\n\n> 次表面散射(Sub-Surface-Scattering)简称3S，用来描述光线穿过透明/半透明表面时发生散射的照明现象，是指光从表面进入物体经过内部散射，然后又通过物体表面的其他顶点出射的光线传递过程。\n>\n> 主要用于模拟不完全透明材质内部表现出来的一种真实光影特效次表面散射材质是高质量渲染中最复杂的材质之一，次表面反射一般是在半透明的材质上表现最为明显，如蜡烛、大理石、玉石、等上表现最为明显。我们知道，当灯光照射到玻璃或清澈的液体表面时，灯光会穿透这些介质，[菲涅尔反射](https://baike.baidu.com/item/菲涅尔反射/6556664)的3S效果可用来模拟灯光进入介质内部后发生的散射。最典型的就是一根点亮的蜡烛，仔细观察你会[发现](https://baike.baidu.com/item/发现/75066)在烛光的照耀下，蜡烛靠近火焰的那端显出的半透明效果。实际上，3S的最大用处之一在于表现灯光照射下的人的皮肤。\n\n\n\n上面的调子映射的v坐标采样值直接用了一个常数，即RampTex的上下没有变化。\n\n若我们让RampTex的上下有变化，然后用一个Slider来调节v坐标采样的值，则可以实现光穿透效果的平滑变化。\n\n![image-20210816202038366](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816202038366.png)\n\n\n\n### 玉石效果\n\n底色部分同上。\n\n**1. 一个高光点**：\n\n同样提取点积的结果后，在输出时加一个if结点，输入A，B为一个参数阈值，当A>B时输出1，小于时输出0，则可以得到高光点。\n\n![image-20210816103327816](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816103327816.png)\n\n\n\n**2. 两个高光点**：\n\n给lDir加一个参数偏移向量，即光照方向的偏移值，再做点积。最后把两个If输出的结果用Max结点合起来再用Clamp结点来限制范围在0-1内。\n\n\n\n**3. 把高光和底色合起来**：\n\n用Lerp结点。\n\nLerp结点的意思：相当于ps里的两个图层，A在B上面，然后给A加一个蒙版。但在Lerp中黑白和这里的蒙版相反，即T中白色的部分露出B结点的颜色。\n\n![image-20210816104447153](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816104447153.png)\n\n![image-20210816105416138](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105416138.png)\n\n关键部分的结点连接：\n\n![image-20210816105608144](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105608144.png)\n\n**4. 菲涅耳结点：**\n\n>*什么是菲涅耳效应？*\n>\n>简要地说，物体在不同角度观察下，表面的反射率是不一样的。菲涅耳效应模拟的就是**物体材质反射率随角度改变**的效果。肥皂泡在边缘处，即视线与表面夹角处比较小时，反射效果更强烈；在肥皂泡中心附近，即视线与表面夹角近乎垂直时，看起来更透明一些。下图右中，池塘远处的水面看上去像镜面一样，近处的水面则更透彻，这同样是由于菲涅耳效应——在不同视角观察下物体材质反射率不同。\n>\n>理论上，对于所有表面光滑的物体来说，**视线与物体表面几乎平行时，即与表面法线夹角（gazing angle）为 90 度时，都会看上去像镜面一样（100% 的反射率）。**那么问题来了，如果垂直盯着物体表面看，即与表面法线夹角为 0 的话，那么有多少光线被反射，有多少光线被吸收／折射？\n>\n>这取决于物体的物理特性。随视线夹角变化时，反射比率大致类似这样：\n>\n>![img](https://pic3.zhimg.com/80/ebf6136b3d1a2250b78136944aa23586_720w.jpg)\n\n给材质添加菲涅耳效果：\n\n记得在Exp输入中给一个常量，然后用Multiply结点给它乘一个颜色。然后用Blend结点把上面得到的结果和菲涅耳效果叠加（Screen处的下拉选项为叠加方式）\n\n![image-20210816112113052](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816112113052.png)\n\n最后效果：\n\n![image-20210816121532159](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816121532159.png)\n\n### 条纹排线效果\n\n**1.屏幕坐标**\n\n直接根据屏幕坐标取UV，则uv直接根据屏幕大小来展平，不会随着物体的放大缩小旋转而改变。\n\n若乘一个深度Depth结点，则uv会根据物体的深度而变化。\n\n**2.step结点**\n\n和if类似，若A<=B，则输出1，否则输出0。\n\n上面两步的效果如下：使用点乘的结果输入step的B输入，则<0，即暗部完全为黑色，中间为条纹，亮部为白色。\n\n![image-20210816123439908](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816123439908.png)\n\n**3. 添加颜色**\n\n使用Lerp结点添加一个亮部颜色和一个暗部颜色，然后用上面获得的黑白结果做蒙版遮罩即可。相当于把上面的黑色替换为A输入，白色替换为B输入。\n\n最后可以给一个模型的基础颜色再和上面的结果相加，做一个比较平滑的颜色效果。\n\n![image-20210816124408419](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816124408419.png)\n\n### Halftone半色调效果\n\n**1. 生成点阵纹理**\n\n获取屏幕坐标，然后乘一个较大的值20，利用Frac结点取余得到一个比较密集的条纹形状。\n\n然后使用Remap进行重映射到-0.5到0.5，再使用length结点得到一个密集的有渐变的点阵图像。length结点的公式如下：输入两个分量a和b，输出\n$$\na^2+b^2=c^2\n$$\n![image-20210816161533779](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816161533779.png)\n\n>  注意如果不进行重映射到-0.5到0.5，则生成的图像为一个四分之一圆形：\n>\n> ![image-20210816162045714](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816162045714.png)\n\n**2. 结合lambert光照模型**\n\n获取法向量和光线方向向量点积的值，然后做一个重映射，从1-0重映射到-0.5-2。\n\n> 注意这里原本是1-0，也就是说把亮部映射到负值，暗部映射到正值。因为对于亮部来说，不管上面length后得到的点阵图取0-1内的任何值，它的负数次幂都大于1。即亮部会呈现为全白，不会有点阵。\n>\n> 对于暗部，假设映射到1-2范围内的部分映射后取值为a，对于任何0-1的数的a次幂的结果均会比原来的取值更小，当小于0.5时四舍五入取整后这部分则为全黑。\n\n然后使用**Power结点**，把重映射的结果输入Exp。\n\n> tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。\n\n![image-20210816164734797](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816164734797.png)_Power结点公式_\n\n然后用round结点把渐变部分取整变成黑白即可。\n\n![image-20210816165823653](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816165823653.png)\n\n\n\n### 参数面板\n\n创建一个模拟平行光（输入参数为光线方向、颜色、强度）\n\n![image-20210816200645649](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816200645649.png)\n\n\n\n### 风格化-把暗部做三层分离\n\n输入一个可调节的参数vector4，然后将点积的结果和vector4的XYZ三个通道用step结点进行对比，可以得到三个分层的亮部遮罩。\n\n![image-20210816203911475](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816203911475.png)\n\n然后可以将上面得到的结果作为遮罩，然后分别给亮部和暗部一个颜色。\n\n![image-20210816211440348](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816211440348.png)\n\n\n# 情报\n\n## Lut图\n\n![image-20210816215734597](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816215734597.png)\n\n## Houdini\n\n\n\n![image-20210816220236911](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816220236911.png)\n","source":"_posts/2021-08-15-庄懂的技术美术入门课学习笔记（一）.md","raw":"---\ntitle: 2021-08-15-庄懂的技术美术入门课学习笔记（一）\ndate: 2021-08-15 19:31:53\nkatex: true\ntags:\n  - 光照模型\n  - Lambert\n  - 卡通渲染\n  - 半色调Halftone\n  - 3S效果\n  - 菲涅尔\ncategories:\n  - 庄懂的技术美术入门课学习笔记\n---\n\n# 开始学习\n\n[视频链接](https://space.bilibili.com/6373917/video)\n\n[Shader Forge中文文档](https://acegikmo.com/shaderforge/nodes/?lang=zh_cn)\n\n\n\n<!-- more -->\n\n> 对应课程0~3课内容\n\n# 渲染流程\n\n### 光照模型\n\n#### Lambert光照模型\n\n根据向量点乘的图形学含义，令\n\n- 模型表面的垂直方向为向量nDir（法线方向）\n\n- 光照方向的反方向为向量lDir\n\n- 输出nDir·lDir的结果为下图的光照表现：\n\n  ![image-20210815210059777](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210059777.png)\n\n其中明暗交接处之后的（即点积小于0的部分）都为纯黑色。由于负数是无意义的光照，把负数部分都取0，即为Lambert光照模型。\n\n![image-20210815210900380](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210900380.png)\n\n##### ShaderForge实现\n\n上述公式，两个向量点乘，输出到Emission上。然后用Clamp结点来限制一下范围0-1\n\n![image-20210815212830722](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815212830722.png)\n\n##### 代码实现\n\n```c#\n\t\t\tstruct VertexInput {\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;//获取法线信息\n            };\n            struct VertexOutput {\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            };\n            VertexOutput vert (VertexInput v) {\n                VertexOutput o = (VertexOutput)0;\n                o.pos = UnityObjectToClipPos( v.vertex );//转换到裁剪空间\n\t\t\t\to.nDirWS = UnityObjectToWorldNormal(v.normal);//由模型法线信息换算的世界空间法线信息\n\n                return o;\n            }\n            float4 frag(VertexOutput i) : COLOR {\n////// Lighting:\n////// Emissive:\n\t\t\t\tfloat3 nDir = i.nDirWS;\n\t\t\t\tfloat3 lDir = normalize(_WorldSpaceLightPos0.xyz);//Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl = dot(nDir, lDir );//点乘\n\t\t\t\tfloat lambert = max(0.0, nDotl);//把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);//注意代码规范，转化为float4 rgba\n            }\n```\n\n完整代码：\n\n<details>\n  <summary>LambertShader.shader</summary>\n\n```c#\nShader \"Class1/LambertShader\" {\n    Properties {\n    }\n    SubShader {\n        Tags {\n            \"RenderType\"=\"Opaque\"\n        }\n        LOD 100\n        Pass {\n            Name \"FORWARD\"\n            Tags {\n                \"LightMode\"=\"ForwardBase\"\n            }\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n            struct VertexInput {\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;//获取法线信息\n            };\n            struct VertexOutput {\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            };\n            VertexOutput vert (VertexInput v) {\n                VertexOutput o = (VertexOutput)0;\n                o.pos = UnityObjectToClipPos( v.vertex );//转换到裁剪空间\n\t\t\t\to.nDirWS = UnityObjectToWorldNormal(v.normal);//由模型法线信息换算的世界空间法线信息\n\n                return o;\n            }\n            float4 frag(VertexOutput i) : COLOR {\n////// Lighting:\n////// Emissive:\n\t\t\t\tfloat3 nDir = i.nDirWS;\n\t\t\t\tfloat3 lDir = normalize(_WorldSpaceLightPos0.xyz);//Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl = dot(nDir, lDir );//点乘\n\t\t\t\tfloat lambert = max(0.0, nDotl);//把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);//注意代码规范，转化为float4 rgba\n            }\n            ENDCG\n        }\n    }\n    FallBack \"Diffuse\"\n}\n```\n\n</details>\n\n\n#### 半Lambert光照模型\n\nLambert在明暗交界线后的部分是死黑的，半Lambert模型就是整体*0.5+0.5,让暗部显得更透气，但这样没有了明暗交界线。\n\n![image-20210815211247604](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815211247604.png)\n\n##### ShaderForge实现\n\n把点乘的结果用multiply*0.5再add0.5\n\n![image-20210815213237161](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213237161.png)\n\n### 调子映射\n\n![image-20210815213947360](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213947360.png)\n\nShaderForge：\n\n在上面半Lambert模型的基础上，把输出的点乘结果和另一个常量通过Append结点结合成一个向量。这样可以得到一个uv坐标，对输入的RampTex图像文件根据该坐标采样，即可输出上面的映射后结果。\n\n![image-20210815214138597](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815214138597.png)\n\n\n\n## 应用\n\n### 卡通渲染效果\n\n> 在最亮部可能出现暗点，需要把贴图的Wrap Mode修改为Clamp而不是Repeat。\n>\n> 目前的描边会有比较明显的锯齿，卡渲一般会加抗锯齿后处理。\n\n![image-20210815221158922](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815221158922.png)\n\n### 次表面散射效果（SSS效果）\n\n> 次表面散射(Sub-Surface-Scattering)简称3S，用来描述光线穿过透明/半透明表面时发生散射的照明现象，是指光从表面进入物体经过内部散射，然后又通过物体表面的其他顶点出射的光线传递过程。\n>\n> 主要用于模拟不完全透明材质内部表现出来的一种真实光影特效次表面散射材质是高质量渲染中最复杂的材质之一，次表面反射一般是在半透明的材质上表现最为明显，如蜡烛、大理石、玉石、等上表现最为明显。我们知道，当灯光照射到玻璃或清澈的液体表面时，灯光会穿透这些介质，[菲涅尔反射](https://baike.baidu.com/item/菲涅尔反射/6556664)的3S效果可用来模拟灯光进入介质内部后发生的散射。最典型的就是一根点亮的蜡烛，仔细观察你会[发现](https://baike.baidu.com/item/发现/75066)在烛光的照耀下，蜡烛靠近火焰的那端显出的半透明效果。实际上，3S的最大用处之一在于表现灯光照射下的人的皮肤。\n\n\n\n上面的调子映射的v坐标采样值直接用了一个常数，即RampTex的上下没有变化。\n\n若我们让RampTex的上下有变化，然后用一个Slider来调节v坐标采样的值，则可以实现光穿透效果的平滑变化。\n\n![image-20210816202038366](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816202038366.png)\n\n\n\n### 玉石效果\n\n底色部分同上。\n\n**1. 一个高光点**：\n\n同样提取点积的结果后，在输出时加一个if结点，输入A，B为一个参数阈值，当A>B时输出1，小于时输出0，则可以得到高光点。\n\n![image-20210816103327816](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816103327816.png)\n\n\n\n**2. 两个高光点**：\n\n给lDir加一个参数偏移向量，即光照方向的偏移值，再做点积。最后把两个If输出的结果用Max结点合起来再用Clamp结点来限制范围在0-1内。\n\n\n\n**3. 把高光和底色合起来**：\n\n用Lerp结点。\n\nLerp结点的意思：相当于ps里的两个图层，A在B上面，然后给A加一个蒙版。但在Lerp中黑白和这里的蒙版相反，即T中白色的部分露出B结点的颜色。\n\n![image-20210816104447153](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816104447153.png)\n\n![image-20210816105416138](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105416138.png)\n\n关键部分的结点连接：\n\n![image-20210816105608144](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105608144.png)\n\n**4. 菲涅耳结点：**\n\n>*什么是菲涅耳效应？*\n>\n>简要地说，物体在不同角度观察下，表面的反射率是不一样的。菲涅耳效应模拟的就是**物体材质反射率随角度改变**的效果。肥皂泡在边缘处，即视线与表面夹角处比较小时，反射效果更强烈；在肥皂泡中心附近，即视线与表面夹角近乎垂直时，看起来更透明一些。下图右中，池塘远处的水面看上去像镜面一样，近处的水面则更透彻，这同样是由于菲涅耳效应——在不同视角观察下物体材质反射率不同。\n>\n>理论上，对于所有表面光滑的物体来说，**视线与物体表面几乎平行时，即与表面法线夹角（gazing angle）为 90 度时，都会看上去像镜面一样（100% 的反射率）。**那么问题来了，如果垂直盯着物体表面看，即与表面法线夹角为 0 的话，那么有多少光线被反射，有多少光线被吸收／折射？\n>\n>这取决于物体的物理特性。随视线夹角变化时，反射比率大致类似这样：\n>\n>![img](https://pic3.zhimg.com/80/ebf6136b3d1a2250b78136944aa23586_720w.jpg)\n\n给材质添加菲涅耳效果：\n\n记得在Exp输入中给一个常量，然后用Multiply结点给它乘一个颜色。然后用Blend结点把上面得到的结果和菲涅耳效果叠加（Screen处的下拉选项为叠加方式）\n\n![image-20210816112113052](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816112113052.png)\n\n最后效果：\n\n![image-20210816121532159](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816121532159.png)\n\n### 条纹排线效果\n\n**1.屏幕坐标**\n\n直接根据屏幕坐标取UV，则uv直接根据屏幕大小来展平，不会随着物体的放大缩小旋转而改变。\n\n若乘一个深度Depth结点，则uv会根据物体的深度而变化。\n\n**2.step结点**\n\n和if类似，若A<=B，则输出1，否则输出0。\n\n上面两步的效果如下：使用点乘的结果输入step的B输入，则<0，即暗部完全为黑色，中间为条纹，亮部为白色。\n\n![image-20210816123439908](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816123439908.png)\n\n**3. 添加颜色**\n\n使用Lerp结点添加一个亮部颜色和一个暗部颜色，然后用上面获得的黑白结果做蒙版遮罩即可。相当于把上面的黑色替换为A输入，白色替换为B输入。\n\n最后可以给一个模型的基础颜色再和上面的结果相加，做一个比较平滑的颜色效果。\n\n![image-20210816124408419](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816124408419.png)\n\n### Halftone半色调效果\n\n**1. 生成点阵纹理**\n\n获取屏幕坐标，然后乘一个较大的值20，利用Frac结点取余得到一个比较密集的条纹形状。\n\n然后使用Remap进行重映射到-0.5到0.5，再使用length结点得到一个密集的有渐变的点阵图像。length结点的公式如下：输入两个分量a和b，输出\n$$\na^2+b^2=c^2\n$$\n![image-20210816161533779](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816161533779.png)\n\n>  注意如果不进行重映射到-0.5到0.5，则生成的图像为一个四分之一圆形：\n>\n> ![image-20210816162045714](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816162045714.png)\n\n**2. 结合lambert光照模型**\n\n获取法向量和光线方向向量点积的值，然后做一个重映射，从1-0重映射到-0.5-2。\n\n> 注意这里原本是1-0，也就是说把亮部映射到负值，暗部映射到正值。因为对于亮部来说，不管上面length后得到的点阵图取0-1内的任何值，它的负数次幂都大于1。即亮部会呈现为全白，不会有点阵。\n>\n> 对于暗部，假设映射到1-2范围内的部分映射后取值为a，对于任何0-1的数的a次幂的结果均会比原来的取值更小，当小于0.5时四舍五入取整后这部分则为全黑。\n\n然后使用**Power结点**，把重映射的结果输入Exp。\n\n> tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。\n\n![image-20210816164734797](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816164734797.png)_Power结点公式_\n\n然后用round结点把渐变部分取整变成黑白即可。\n\n![image-20210816165823653](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816165823653.png)\n\n\n\n### 参数面板\n\n创建一个模拟平行光（输入参数为光线方向、颜色、强度）\n\n![image-20210816200645649](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816200645649.png)\n\n\n\n### 风格化-把暗部做三层分离\n\n输入一个可调节的参数vector4，然后将点积的结果和vector4的XYZ三个通道用step结点进行对比，可以得到三个分层的亮部遮罩。\n\n![image-20210816203911475](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816203911475.png)\n\n然后可以将上面得到的结果作为遮罩，然后分别给亮部和暗部一个颜色。\n\n![image-20210816211440348](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816211440348.png)\n\n\n# 情报\n\n## Lut图\n\n![image-20210816215734597](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816215734597.png)\n\n## Houdini\n\n\n\n![image-20210816220236911](D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816220236911.png)\n","slug":"2021-08-15-庄懂的技术美术入门课学习笔记（一）","published":1,"updated":"2021-08-17T08:20:44.672Z","_id":"cksd78u8f0003awvo16o0e70a","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"开始学习\"><a href=\"#开始学习\" class=\"headerlink\" title=\"开始学习\"></a>开始学习</h1><p><a href=\"https://space.bilibili.com/6373917/video\">视频链接</a></p>\n<p><a href=\"https://acegikmo.com/shaderforge/nodes/?lang=zh_cn\">Shader Forge中文文档</a></p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p>对应课程0~3课内容</p>\n</blockquote>\n<h1 id=\"渲染流程\"><a href=\"#渲染流程\" class=\"headerlink\" title=\"渲染流程\"></a>渲染流程</h1><h3 id=\"光照模型\"><a href=\"#光照模型\" class=\"headerlink\" title=\"光照模型\"></a>光照模型</h3><h4 id=\"Lambert光照模型\"><a href=\"#Lambert光照模型\" class=\"headerlink\" title=\"Lambert光照模型\"></a>Lambert光照模型</h4><p>根据向量点乘的图形学含义，令</p>\n<ul>\n<li><p>模型表面的垂直方向为向量nDir（法线方向）</p>\n</li>\n<li><p>光照方向的反方向为向量lDir</p>\n</li>\n<li><p>输出nDir·lDir的结果为下图的光照表现：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210059777.png\" alt=\"image-20210815210059777\" loading=\"lazy\"></p>\n</li>\n</ul>\n<p>其中明暗交接处之后的（即点积小于0的部分）都为纯黑色。由于负数是无意义的光照，把负数部分都取0，即为Lambert光照模型。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210900380.png\" alt=\"image-20210815210900380\" loading=\"lazy\"></p>\n<h5 id=\"ShaderForge实现\"><a href=\"#ShaderForge实现\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h5><p>上述公式，两个向量点乘，输出到Emission上。然后用Clamp结点来限制一下范围0-1</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815212830722.png\" alt=\"image-20210815212830722\" loading=\"lazy\"></p>\n<h5 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h5><pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">\t\t\tstruct VertexInput &#123;\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;&#x2F;&#x2F;获取法线信息\n            &#125;;\n            struct VertexOutput &#123;\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            &#125;;\n            VertexOutput vert (VertexInput v) &#123;\n                VertexOutput o &#x3D; (VertexOutput)0;\n                o.pos &#x3D; UnityObjectToClipPos( v.vertex );&#x2F;&#x2F;转换到裁剪空间\n\t\t\t\to.nDirWS &#x3D; UnityObjectToWorldNormal(v.normal);&#x2F;&#x2F;由模型法线信息换算的世界空间法线信息\n\n                return o;\n            &#125;\n            float4 frag(VertexOutput i) : COLOR &#123;\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Lighting:\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Emissive:\n\t\t\t\tfloat3 nDir &#x3D; i.nDirWS;\n\t\t\t\tfloat3 lDir &#x3D; normalize(_WorldSpaceLightPos0.xyz);&#x2F;&#x2F;Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl &#x3D; dot(nDir, lDir );&#x2F;&#x2F;点乘\n\t\t\t\tfloat lambert &#x3D; max(0.0, nDotl);&#x2F;&#x2F;把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);&#x2F;&#x2F;注意代码规范，转化为float4 rgba\n            &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完整代码：</p>\n<details>\n  <summary>LambertShader.shader</summary>\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Shader &quot;Class1&#x2F;LambertShader&quot; &#123;\n    Properties &#123;\n    &#125;\n    SubShader &#123;\n        Tags &#123;\n            &quot;RenderType&quot;&#x3D;&quot;Opaque&quot;\n        &#125;\n        LOD 100\n        Pass &#123;\n            Name &quot;FORWARD&quot;\n            Tags &#123;\n                &quot;LightMode&quot;&#x3D;&quot;ForwardBase&quot;\n            &#125;\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include &quot;UnityCG.cginc&quot;\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n            struct VertexInput &#123;\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;&#x2F;&#x2F;获取法线信息\n            &#125;;\n            struct VertexOutput &#123;\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            &#125;;\n            VertexOutput vert (VertexInput v) &#123;\n                VertexOutput o &#x3D; (VertexOutput)0;\n                o.pos &#x3D; UnityObjectToClipPos( v.vertex );&#x2F;&#x2F;转换到裁剪空间\n\t\t\t\to.nDirWS &#x3D; UnityObjectToWorldNormal(v.normal);&#x2F;&#x2F;由模型法线信息换算的世界空间法线信息\n\n                return o;\n            &#125;\n            float4 frag(VertexOutput i) : COLOR &#123;\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Lighting:\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Emissive:\n\t\t\t\tfloat3 nDir &#x3D; i.nDirWS;\n\t\t\t\tfloat3 lDir &#x3D; normalize(_WorldSpaceLightPos0.xyz);&#x2F;&#x2F;Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl &#x3D; dot(nDir, lDir );&#x2F;&#x2F;点乘\n\t\t\t\tfloat lambert &#x3D; max(0.0, nDotl);&#x2F;&#x2F;把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);&#x2F;&#x2F;注意代码规范，转化为float4 rgba\n            &#125;\n            ENDCG\n        &#125;\n    &#125;\n    FallBack &quot;Diffuse&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n\n<h4 id=\"半Lambert光照模型\"><a href=\"#半Lambert光照模型\" class=\"headerlink\" title=\"半Lambert光照模型\"></a>半Lambert光照模型</h4><p>Lambert在明暗交界线后的部分是死黑的，半Lambert模型就是整体*0.5+0.5,让暗部显得更透气，但这样没有了明暗交界线。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815211247604.png\" alt=\"image-20210815211247604\" loading=\"lazy\"></p>\n<h5 id=\"ShaderForge实现-1\"><a href=\"#ShaderForge实现-1\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h5><p>把点乘的结果用multiply*0.5再add0.5</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213237161.png\" alt=\"image-20210815213237161\" loading=\"lazy\"></p>\n<h3 id=\"调子映射\"><a href=\"#调子映射\" class=\"headerlink\" title=\"调子映射\"></a>调子映射</h3><p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213947360.png\" alt=\"image-20210815213947360\" loading=\"lazy\"></p>\n<p>ShaderForge：</p>\n<p>在上面半Lambert模型的基础上，把输出的点乘结果和另一个常量通过Append结点结合成一个向量。这样可以得到一个uv坐标，对输入的RampTex图像文件根据该坐标采样，即可输出上面的映射后结果。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815214138597.png\" alt=\"image-20210815214138597\" loading=\"lazy\"></p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><h3 id=\"卡通渲染效果\"><a href=\"#卡通渲染效果\" class=\"headerlink\" title=\"卡通渲染效果\"></a>卡通渲染效果</h3><blockquote>\n<p>在最亮部可能出现暗点，需要把贴图的Wrap Mode修改为Clamp而不是Repeat。</p>\n<p>目前的描边会有比较明显的锯齿，卡渲一般会加抗锯齿后处理。</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815221158922.png\" alt=\"image-20210815221158922\" loading=\"lazy\"></p>\n<h3 id=\"次表面散射效果（SSS效果）\"><a href=\"#次表面散射效果（SSS效果）\" class=\"headerlink\" title=\"次表面散射效果（SSS效果）\"></a>次表面散射效果（SSS效果）</h3><blockquote>\n<p>次表面散射(Sub-Surface-Scattering)简称3S，用来描述光线穿过透明/半透明表面时发生散射的照明现象，是指光从表面进入物体经过内部散射，然后又通过物体表面的其他顶点出射的光线传递过程。</p>\n<p>主要用于模拟不完全透明材质内部表现出来的一种真实光影特效次表面散射材质是高质量渲染中最复杂的材质之一，次表面反射一般是在半透明的材质上表现最为明显，如蜡烛、大理石、玉石、等上表现最为明显。我们知道，当灯光照射到玻璃或清澈的液体表面时，灯光会穿透这些介质，<a href=\"https://baike.baidu.com/item/%E8%8F%B2%E6%B6%85%E5%B0%94%E5%8F%8D%E5%B0%84/6556664\">菲涅尔反射</a>的3S效果可用来模拟灯光进入介质内部后发生的散射。最典型的就是一根点亮的蜡烛，仔细观察你会<a href=\"https://baike.baidu.com/item/%E5%8F%91%E7%8E%B0/75066\">发现</a>在烛光的照耀下，蜡烛靠近火焰的那端显出的半透明效果。实际上，3S的最大用处之一在于表现灯光照射下的人的皮肤。</p>\n</blockquote>\n<p>上面的调子映射的v坐标采样值直接用了一个常数，即RampTex的上下没有变化。</p>\n<p>若我们让RampTex的上下有变化，然后用一个Slider来调节v坐标采样的值，则可以实现光穿透效果的平滑变化。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816202038366.png\" alt=\"image-20210816202038366\" loading=\"lazy\"></p>\n<h3 id=\"玉石效果\"><a href=\"#玉石效果\" class=\"headerlink\" title=\"玉石效果\"></a>玉石效果</h3><p>底色部分同上。</p>\n<p><strong>1. 一个高光点</strong>：</p>\n<p>同样提取点积的结果后，在输出时加一个if结点，输入A，B为一个参数阈值，当A&gt;B时输出1，小于时输出0，则可以得到高光点。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816103327816.png\" alt=\"image-20210816103327816\" loading=\"lazy\"></p>\n<p><strong>2. 两个高光点</strong>：</p>\n<p>给lDir加一个参数偏移向量，即光照方向的偏移值，再做点积。最后把两个If输出的结果用Max结点合起来再用Clamp结点来限制范围在0-1内。</p>\n<p><strong>3. 把高光和底色合起来</strong>：</p>\n<p>用Lerp结点。</p>\n<p>Lerp结点的意思：相当于ps里的两个图层，A在B上面，然后给A加一个蒙版。但在Lerp中黑白和这里的蒙版相反，即T中白色的部分露出B结点的颜色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816104447153.png\" alt=\"image-20210816104447153\" loading=\"lazy\"></p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105416138.png\" alt=\"image-20210816105416138\" loading=\"lazy\"></p>\n<p>关键部分的结点连接：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105608144.png\" alt=\"image-20210816105608144\" loading=\"lazy\"></p>\n<p><strong>4. 菲涅耳结点：</strong></p>\n<blockquote>\n<p><em>什么是菲涅耳效应？</em></p>\n<p>简要地说，物体在不同角度观察下，表面的反射率是不一样的。菲涅耳效应模拟的就是<strong>物体材质反射率随角度改变</strong>的效果。肥皂泡在边缘处，即视线与表面夹角处比较小时，反射效果更强烈；在肥皂泡中心附近，即视线与表面夹角近乎垂直时，看起来更透明一些。下图右中，池塘远处的水面看上去像镜面一样，近处的水面则更透彻，这同样是由于菲涅耳效应——在不同视角观察下物体材质反射率不同。</p>\n<p>理论上，对于所有表面光滑的物体来说，<strong>视线与物体表面几乎平行时，即与表面法线夹角（gazing angle）为 90 度时，都会看上去像镜面一样（100% 的反射率）。</strong>那么问题来了，如果垂直盯着物体表面看，即与表面法线夹角为 0 的话，那么有多少光线被反射，有多少光线被吸收／折射？</p>\n<p>这取决于物体的物理特性。随视线夹角变化时，反射比率大致类似这样：</p>\n<p><img src=\"https://pic3.zhimg.com/80/ebf6136b3d1a2250b78136944aa23586_720w.jpg\" alt=\"img\" loading=\"lazy\"></p>\n</blockquote>\n<p>给材质添加菲涅耳效果：</p>\n<p>记得在Exp输入中给一个常量，然后用Multiply结点给它乘一个颜色。然后用Blend结点把上面得到的结果和菲涅耳效果叠加（Screen处的下拉选项为叠加方式）</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816112113052.png\" alt=\"image-20210816112113052\" loading=\"lazy\"></p>\n<p>最后效果：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816121532159.png\" alt=\"image-20210816121532159\" loading=\"lazy\"></p>\n<h3 id=\"条纹排线效果\"><a href=\"#条纹排线效果\" class=\"headerlink\" title=\"条纹排线效果\"></a>条纹排线效果</h3><p><strong>1.屏幕坐标</strong></p>\n<p>直接根据屏幕坐标取UV，则uv直接根据屏幕大小来展平，不会随着物体的放大缩小旋转而改变。</p>\n<p>若乘一个深度Depth结点，则uv会根据物体的深度而变化。</p>\n<p><strong>2.step结点</strong></p>\n<p>和if类似，若A&lt;=B，则输出1，否则输出0。</p>\n<p>上面两步的效果如下：使用点乘的结果输入step的B输入，则&lt;0，即暗部完全为黑色，中间为条纹，亮部为白色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816123439908.png\" alt=\"image-20210816123439908\" loading=\"lazy\"></p>\n<p><strong>3. 添加颜色</strong></p>\n<p>使用Lerp结点添加一个亮部颜色和一个暗部颜色，然后用上面获得的黑白结果做蒙版遮罩即可。相当于把上面的黑色替换为A输入，白色替换为B输入。</p>\n<p>最后可以给一个模型的基础颜色再和上面的结果相加，做一个比较平滑的颜色效果。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816124408419.png\" alt=\"image-20210816124408419\" loading=\"lazy\"></p>\n<h3 id=\"Halftone半色调效果\"><a href=\"#Halftone半色调效果\" class=\"headerlink\" title=\"Halftone半色调效果\"></a>Halftone半色调效果</h3><p><strong>1. 生成点阵纹理</strong></p>\n<p>获取屏幕坐标，然后乘一个较大的值20，利用Frac结点取余得到一个比较密集的条纹形状。</p>\n<p>然后使用Remap进行重映射到-0.5到0.5，再使用length结点得到一个密集的有渐变的点阵图像。length结点的公式如下：输入两个分量a和b，输出<br>$$<br>a^2+b^2=c^2<br>$$<br><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816161533779.png\" alt=\"image-20210816161533779\" loading=\"lazy\"></p>\n<blockquote>\n<p> 注意如果不进行重映射到-0.5到0.5，则生成的图像为一个四分之一圆形：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816162045714.png\" alt=\"image-20210816162045714\" loading=\"lazy\"></p>\n</blockquote>\n<p><strong>2. 结合lambert光照模型</strong></p>\n<p>获取法向量和光线方向向量点积的值，然后做一个重映射，从1-0重映射到-0.5-2。</p>\n<blockquote>\n<p>注意这里原本是1-0，也就是说把亮部映射到负值，暗部映射到正值。因为对于亮部来说，不管上面length后得到的点阵图取0-1内的任何值，它的负数次幂都大于1。即亮部会呈现为全白，不会有点阵。</p>\n<p>对于暗部，假设映射到1-2范围内的部分映射后取值为a，对于任何0-1的数的a次幂的结果均会比原来的取值更小，当小于0.5时四舍五入取整后这部分则为全黑。</p>\n</blockquote>\n<p>然后使用<strong>Power结点</strong>，把重映射的结果输入Exp。</p>\n<blockquote>\n<p>tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816164734797.png\" alt=\"image-20210816164734797\" loading=\"lazy\"><em>Power结点公式</em></p>\n<p>然后用round结点把渐变部分取整变成黑白即可。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816165823653.png\" alt=\"image-20210816165823653\" loading=\"lazy\"></p>\n<h3 id=\"参数面板\"><a href=\"#参数面板\" class=\"headerlink\" title=\"参数面板\"></a>参数面板</h3><p>创建一个模拟平行光（输入参数为光线方向、颜色、强度）</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816200645649.png\" alt=\"image-20210816200645649\" loading=\"lazy\"></p>\n<h3 id=\"风格化-把暗部做三层分离\"><a href=\"#风格化-把暗部做三层分离\" class=\"headerlink\" title=\"风格化-把暗部做三层分离\"></a>风格化-把暗部做三层分离</h3><p>输入一个可调节的参数vector4，然后将点积的结果和vector4的XYZ三个通道用step结点进行对比，可以得到三个分层的亮部遮罩。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816203911475.png\" alt=\"image-20210816203911475\" loading=\"lazy\"></p>\n<p>然后可以将上面得到的结果作为遮罩，然后分别给亮部和暗部一个颜色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816211440348.png\" alt=\"image-20210816211440348\" loading=\"lazy\"></p>\n<h1 id=\"情报\"><a href=\"#情报\" class=\"headerlink\" title=\"情报\"></a>情报</h1><h2 id=\"Lut图\"><a href=\"#Lut图\" class=\"headerlink\" title=\"Lut图\"></a>Lut图</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816215734597.png\" alt=\"image-20210816215734597\" loading=\"lazy\"></p>\n<h2 id=\"Houdini\"><a href=\"#Houdini\" class=\"headerlink\" title=\"Houdini\"></a>Houdini</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816220236911.png\" alt=\"image-20210816220236911\" loading=\"lazy\"></p>\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":false}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"<h1 id=\"开始学习\"><a href=\"#开始学习\" class=\"headerlink\" title=\"开始学习\"></a>开始学习</h1><p><a href=\"https://space.bilibili.com/6373917/video\">视频链接</a></p>\n<p><a href=\"https://acegikmo.com/shaderforge/nodes/?lang=zh_cn\">Shader Forge中文文档</a></p>","more":"<blockquote>\n<p>对应课程0~3课内容</p>\n</blockquote>\n<h1 id=\"渲染流程\"><a href=\"#渲染流程\" class=\"headerlink\" title=\"渲染流程\"></a>渲染流程</h1><h3 id=\"光照模型\"><a href=\"#光照模型\" class=\"headerlink\" title=\"光照模型\"></a>光照模型</h3><h4 id=\"Lambert光照模型\"><a href=\"#Lambert光照模型\" class=\"headerlink\" title=\"Lambert光照模型\"></a>Lambert光照模型</h4><p>根据向量点乘的图形学含义，令</p>\n<ul>\n<li><p>模型表面的垂直方向为向量nDir（法线方向）</p>\n</li>\n<li><p>光照方向的反方向为向量lDir</p>\n</li>\n<li><p>输出nDir·lDir的结果为下图的光照表现：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210059777.png\" alt=\"image-20210815210059777\"></p>\n</li>\n</ul>\n<p>其中明暗交接处之后的（即点积小于0的部分）都为纯黑色。由于负数是无意义的光照，把负数部分都取0，即为Lambert光照模型。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815210900380.png\" alt=\"image-20210815210900380\"></p>\n<h5 id=\"ShaderForge实现\"><a href=\"#ShaderForge实现\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h5><p>上述公式，两个向量点乘，输出到Emission上。然后用Clamp结点来限制一下范围0-1</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815212830722.png\" alt=\"image-20210815212830722\"></p>\n<h5 id=\"代码实现\"><a href=\"#代码实现\" class=\"headerlink\" title=\"代码实现\"></a>代码实现</h5><pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">\t\t\tstruct VertexInput &#123;\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;&#x2F;&#x2F;获取法线信息\n            &#125;;\n            struct VertexOutput &#123;\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            &#125;;\n            VertexOutput vert (VertexInput v) &#123;\n                VertexOutput o &#x3D; (VertexOutput)0;\n                o.pos &#x3D; UnityObjectToClipPos( v.vertex );&#x2F;&#x2F;转换到裁剪空间\n\t\t\t\to.nDirWS &#x3D; UnityObjectToWorldNormal(v.normal);&#x2F;&#x2F;由模型法线信息换算的世界空间法线信息\n\n                return o;\n            &#125;\n            float4 frag(VertexOutput i) : COLOR &#123;\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Lighting:\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Emissive:\n\t\t\t\tfloat3 nDir &#x3D; i.nDirWS;\n\t\t\t\tfloat3 lDir &#x3D; normalize(_WorldSpaceLightPos0.xyz);&#x2F;&#x2F;Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl &#x3D; dot(nDir, lDir );&#x2F;&#x2F;点乘\n\t\t\t\tfloat lambert &#x3D; max(0.0, nDotl);&#x2F;&#x2F;把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);&#x2F;&#x2F;注意代码规范，转化为float4 rgba\n            &#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完整代码：</p>\n<details>\n  <summary>LambertShader.shader</summary>\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Shader &quot;Class1&#x2F;LambertShader&quot; &#123;\n    Properties &#123;\n    &#125;\n    SubShader &#123;\n        Tags &#123;\n            &quot;RenderType&quot;&#x3D;&quot;Opaque&quot;\n        &#125;\n        LOD 100\n        Pass &#123;\n            Name &quot;FORWARD&quot;\n            Tags &#123;\n                &quot;LightMode&quot;&#x3D;&quot;ForwardBase&quot;\n            &#125;\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include &quot;UnityCG.cginc&quot;\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n            struct VertexInput &#123;\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;&#x2F;&#x2F;获取法线信息\n            &#125;;\n            struct VertexOutput &#123;\n                float4 pos : SV_POSITION;\n\t\t\t\tfloat3 nDirWS : TEXCOORD0;\n            &#125;;\n            VertexOutput vert (VertexInput v) &#123;\n                VertexOutput o &#x3D; (VertexOutput)0;\n                o.pos &#x3D; UnityObjectToClipPos( v.vertex );&#x2F;&#x2F;转换到裁剪空间\n\t\t\t\to.nDirWS &#x3D; UnityObjectToWorldNormal(v.normal);&#x2F;&#x2F;由模型法线信息换算的世界空间法线信息\n\n                return o;\n            &#125;\n            float4 frag(VertexOutput i) : COLOR &#123;\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Lighting:\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Emissive:\n\t\t\t\tfloat3 nDir &#x3D; i.nDirWS;\n\t\t\t\tfloat3 lDir &#x3D; normalize(_WorldSpaceLightPos0.xyz);&#x2F;&#x2F;Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\t\n\t\t\t\tfloat nDotl &#x3D; dot(nDir, lDir );&#x2F;&#x2F;点乘\n\t\t\t\tfloat lambert &#x3D; max(0.0, nDotl);&#x2F;&#x2F;把负数部分取0\n\n                return float4(lambert,lambert,lambert,1.0);&#x2F;&#x2F;注意代码规范，转化为float4 rgba\n            &#125;\n            ENDCG\n        &#125;\n    &#125;\n    FallBack &quot;Diffuse&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n\n<h4 id=\"半Lambert光照模型\"><a href=\"#半Lambert光照模型\" class=\"headerlink\" title=\"半Lambert光照模型\"></a>半Lambert光照模型</h4><p>Lambert在明暗交界线后的部分是死黑的，半Lambert模型就是整体*0.5+0.5,让暗部显得更透气，但这样没有了明暗交界线。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815211247604.png\" alt=\"image-20210815211247604\"></p>\n<h5 id=\"ShaderForge实现-1\"><a href=\"#ShaderForge实现-1\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h5><p>把点乘的结果用multiply*0.5再add0.5</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213237161.png\" alt=\"image-20210815213237161\"></p>\n<h3 id=\"调子映射\"><a href=\"#调子映射\" class=\"headerlink\" title=\"调子映射\"></a>调子映射</h3><p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815213947360.png\" alt=\"image-20210815213947360\"></p>\n<p>ShaderForge：</p>\n<p>在上面半Lambert模型的基础上，把输出的点乘结果和另一个常量通过Append结点结合成一个向量。这样可以得到一个uv坐标，对输入的RampTex图像文件根据该坐标采样，即可输出上面的映射后结果。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815214138597.png\" alt=\"image-20210815214138597\"></p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><h3 id=\"卡通渲染效果\"><a href=\"#卡通渲染效果\" class=\"headerlink\" title=\"卡通渲染效果\"></a>卡通渲染效果</h3><blockquote>\n<p>在最亮部可能出现暗点，需要把贴图的Wrap Mode修改为Clamp而不是Repeat。</p>\n<p>目前的描边会有比较明显的锯齿，卡渲一般会加抗锯齿后处理。</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210815221158922.png\" alt=\"image-20210815221158922\"></p>\n<h3 id=\"次表面散射效果（SSS效果）\"><a href=\"#次表面散射效果（SSS效果）\" class=\"headerlink\" title=\"次表面散射效果（SSS效果）\"></a>次表面散射效果（SSS效果）</h3><blockquote>\n<p>次表面散射(Sub-Surface-Scattering)简称3S，用来描述光线穿过透明/半透明表面时发生散射的照明现象，是指光从表面进入物体经过内部散射，然后又通过物体表面的其他顶点出射的光线传递过程。</p>\n<p>主要用于模拟不完全透明材质内部表现出来的一种真实光影特效次表面散射材质是高质量渲染中最复杂的材质之一，次表面反射一般是在半透明的材质上表现最为明显，如蜡烛、大理石、玉石、等上表现最为明显。我们知道，当灯光照射到玻璃或清澈的液体表面时，灯光会穿透这些介质，<a href=\"https://baike.baidu.com/item/%E8%8F%B2%E6%B6%85%E5%B0%94%E5%8F%8D%E5%B0%84/6556664\">菲涅尔反射</a>的3S效果可用来模拟灯光进入介质内部后发生的散射。最典型的就是一根点亮的蜡烛，仔细观察你会<a href=\"https://baike.baidu.com/item/%E5%8F%91%E7%8E%B0/75066\">发现</a>在烛光的照耀下，蜡烛靠近火焰的那端显出的半透明效果。实际上，3S的最大用处之一在于表现灯光照射下的人的皮肤。</p>\n</blockquote>\n<p>上面的调子映射的v坐标采样值直接用了一个常数，即RampTex的上下没有变化。</p>\n<p>若我们让RampTex的上下有变化，然后用一个Slider来调节v坐标采样的值，则可以实现光穿透效果的平滑变化。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816202038366.png\" alt=\"image-20210816202038366\"></p>\n<h3 id=\"玉石效果\"><a href=\"#玉石效果\" class=\"headerlink\" title=\"玉石效果\"></a>玉石效果</h3><p>底色部分同上。</p>\n<p><strong>1. 一个高光点</strong>：</p>\n<p>同样提取点积的结果后，在输出时加一个if结点，输入A，B为一个参数阈值，当A&gt;B时输出1，小于时输出0，则可以得到高光点。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816103327816.png\" alt=\"image-20210816103327816\"></p>\n<p><strong>2. 两个高光点</strong>：</p>\n<p>给lDir加一个参数偏移向量，即光照方向的偏移值，再做点积。最后把两个If输出的结果用Max结点合起来再用Clamp结点来限制范围在0-1内。</p>\n<p><strong>3. 把高光和底色合起来</strong>：</p>\n<p>用Lerp结点。</p>\n<p>Lerp结点的意思：相当于ps里的两个图层，A在B上面，然后给A加一个蒙版。但在Lerp中黑白和这里的蒙版相反，即T中白色的部分露出B结点的颜色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816104447153.png\" alt=\"image-20210816104447153\"></p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105416138.png\" alt=\"image-20210816105416138\"></p>\n<p>关键部分的结点连接：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816105608144.png\" alt=\"image-20210816105608144\"></p>\n<p><strong>4. 菲涅耳结点：</strong></p>\n<blockquote>\n<p><em>什么是菲涅耳效应？</em></p>\n<p>简要地说，物体在不同角度观察下，表面的反射率是不一样的。菲涅耳效应模拟的就是<strong>物体材质反射率随角度改变</strong>的效果。肥皂泡在边缘处，即视线与表面夹角处比较小时，反射效果更强烈；在肥皂泡中心附近，即视线与表面夹角近乎垂直时，看起来更透明一些。下图右中，池塘远处的水面看上去像镜面一样，近处的水面则更透彻，这同样是由于菲涅耳效应——在不同视角观察下物体材质反射率不同。</p>\n<p>理论上，对于所有表面光滑的物体来说，<strong>视线与物体表面几乎平行时，即与表面法线夹角（gazing angle）为 90 度时，都会看上去像镜面一样（100% 的反射率）。</strong>那么问题来了，如果垂直盯着物体表面看，即与表面法线夹角为 0 的话，那么有多少光线被反射，有多少光线被吸收／折射？</p>\n<p>这取决于物体的物理特性。随视线夹角变化时，反射比率大致类似这样：</p>\n<p><img src=\"https://pic3.zhimg.com/80/ebf6136b3d1a2250b78136944aa23586_720w.jpg\" alt=\"img\"></p>\n</blockquote>\n<p>给材质添加菲涅耳效果：</p>\n<p>记得在Exp输入中给一个常量，然后用Multiply结点给它乘一个颜色。然后用Blend结点把上面得到的结果和菲涅耳效果叠加（Screen处的下拉选项为叠加方式）</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816112113052.png\" alt=\"image-20210816112113052\"></p>\n<p>最后效果：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816121532159.png\" alt=\"image-20210816121532159\"></p>\n<h3 id=\"条纹排线效果\"><a href=\"#条纹排线效果\" class=\"headerlink\" title=\"条纹排线效果\"></a>条纹排线效果</h3><p><strong>1.屏幕坐标</strong></p>\n<p>直接根据屏幕坐标取UV，则uv直接根据屏幕大小来展平，不会随着物体的放大缩小旋转而改变。</p>\n<p>若乘一个深度Depth结点，则uv会根据物体的深度而变化。</p>\n<p><strong>2.step结点</strong></p>\n<p>和if类似，若A&lt;=B，则输出1，否则输出0。</p>\n<p>上面两步的效果如下：使用点乘的结果输入step的B输入，则&lt;0，即暗部完全为黑色，中间为条纹，亮部为白色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816123439908.png\" alt=\"image-20210816123439908\"></p>\n<p><strong>3. 添加颜色</strong></p>\n<p>使用Lerp结点添加一个亮部颜色和一个暗部颜色，然后用上面获得的黑白结果做蒙版遮罩即可。相当于把上面的黑色替换为A输入，白色替换为B输入。</p>\n<p>最后可以给一个模型的基础颜色再和上面的结果相加，做一个比较平滑的颜色效果。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816124408419.png\" alt=\"image-20210816124408419\"></p>\n<h3 id=\"Halftone半色调效果\"><a href=\"#Halftone半色调效果\" class=\"headerlink\" title=\"Halftone半色调效果\"></a>Halftone半色调效果</h3><p><strong>1. 生成点阵纹理</strong></p>\n<p>获取屏幕坐标，然后乘一个较大的值20，利用Frac结点取余得到一个比较密集的条纹形状。</p>\n<p>然后使用Remap进行重映射到-0.5到0.5，再使用length结点得到一个密集的有渐变的点阵图像。length结点的公式如下：输入两个分量a和b，输出<br>$$<br>a^2+b^2=c^2<br>$$<br><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816161533779.png\" alt=\"image-20210816161533779\"></p>\n<blockquote>\n<p> 注意如果不进行重映射到-0.5到0.5，则生成的图像为一个四分之一圆形：</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816162045714.png\" alt=\"image-20210816162045714\"></p>\n</blockquote>\n<p><strong>2. 结合lambert光照模型</strong></p>\n<p>获取法向量和光线方向向量点积的值，然后做一个重映射，从1-0重映射到-0.5-2。</p>\n<blockquote>\n<p>注意这里原本是1-0，也就是说把亮部映射到负值，暗部映射到正值。因为对于亮部来说，不管上面length后得到的点阵图取0-1内的任何值，它的负数次幂都大于1。即亮部会呈现为全白，不会有点阵。</p>\n<p>对于暗部，假设映射到1-2范围内的部分映射后取值为a，对于任何0-1的数的a次幂的结果均会比原来的取值更小，当小于0.5时四舍五入取整后这部分则为全黑。</p>\n</blockquote>\n<p>然后使用<strong>Power结点</strong>，把重映射的结果输入Exp。</p>\n<blockquote>\n<p>tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816164734797.png\" alt=\"image-20210816164734797\"><em>Power结点公式</em></p>\n<p>然后用round结点把渐变部分取整变成黑白即可。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816165823653.png\" alt=\"image-20210816165823653\"></p>\n<h3 id=\"参数面板\"><a href=\"#参数面板\" class=\"headerlink\" title=\"参数面板\"></a>参数面板</h3><p>创建一个模拟平行光（输入参数为光线方向、颜色、强度）</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816200645649.png\" alt=\"image-20210816200645649\"></p>\n<h3 id=\"风格化-把暗部做三层分离\"><a href=\"#风格化-把暗部做三层分离\" class=\"headerlink\" title=\"风格化-把暗部做三层分离\"></a>风格化-把暗部做三层分离</h3><p>输入一个可调节的参数vector4，然后将点积的结果和vector4的XYZ三个通道用step结点进行对比，可以得到三个分层的亮部遮罩。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816203911475.png\" alt=\"image-20210816203911475\"></p>\n<p>然后可以将上面得到的结果作为遮罩，然后分别给亮部和暗部一个颜色。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816211440348.png\" alt=\"image-20210816211440348\"></p>\n<h1 id=\"情报\"><a href=\"#情报\" class=\"headerlink\" title=\"情报\"></a>情报</h1><h2 id=\"Lut图\"><a href=\"#Lut图\" class=\"headerlink\" title=\"Lut图\"></a>Lut图</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816215734597.png\" alt=\"image-20210816215734597\"></p>\n<h2 id=\"Houdini\"><a href=\"#Houdini\" class=\"headerlink\" title=\"Houdini\"></a>Houdini</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-15-庄懂的技术美术入门课学习笔记（一）\\image-20210816220236911.png\" alt=\"image-20210816220236911\"></p>"},{"title":"2021-08-16-庄懂的技术美术入门课学习笔记（二）","date":"2021-08-16T14:14:03.000Z","katex":true,"_content":"\n> 对应课程4~6课内容\n\n# 常用向量\n\n\n\n![image-20210816222259466](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222259466.png)\n\n# 反射\n\n## 漫反射Diffuse\n\n![image-20210816222732514](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222732514.png)\n\n## 镜面反射Specular\n\n![image-20210816222904721](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222904721.png)\n\n### Phong\n\n> 公式：r dot v（反射方向点乘观察方向）\n\n#### ShaderForge实现\n\n1. 先对l取反方向，然后求以N为对称的向量得到反射方向，然后再和观察方向点乘。记得要把负值变成0。\n\n   1.5 这一步等效于ViewReflect点乘光照方向$rDir=Reflect(-lDir,nDir)$\n   \n2. 用power结点得到高光。\n\n> tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。\n>\n> 注意前面lDir要乘-1！\n\n![image-20210816234350760](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816234350760.png)\n\n### Blinn-Phong\n\n> Blinn-Phong的计算消耗少一些，但效果没有Phong真实，二者的高光范围有差别。\n>\n> 公式：n dot h （法线方向点乘半角方向）\n>\n> 半角：视角方向和观察方向的中间角\n\n#### ShaderForge实现\n\nn和h点乘后和0取max，然后再用power结点得到高光。\n\n![image-20210816233430097](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816233430097.png)\n\n\n\n\n\n\n\n# 应用\n\n用Phong获得高光部分，然后和漫反射的结果add一下，得到一种常用的光照模型。\n\n代码如下：\n\n### Lambert+Blinn-Phong/Phong\n\n> 获得世界空间坐标：\n>\n> ```c#\n> o.posWS = mul(unity_ObjectToWorld,v.vertex);\n> ```\n>\n> 求观察向量：\n>\n> ```c#\n> float3 vDir = normalize(_WorldSpaceCameraPos.xyz-i.posWS)\n> ```\n>\n> 求两个向量a、b的中间角：\n> $$ normalize(\\vec{a}+\\vec{b}) $$\n\n\n\n<details>\n\t<summary>OldSchoolShader.shader(相当于Lambert+Blinn-Phong)</summary>\n\n\n\n```c#\nShader \"Class2/OldSchoolShader\" {\n    Properties {\n\t\t_MainCol(\"颜色\",color)=(1.0,1.0,1.0,1.0)\n\t\t_SpecularPow(\"高光次幂\",range(1,90))=30\n    }\n    SubShader {\n        Tags {\n            \"RenderType\"=\"Opaque\"\n        }\n        LOD 100\n        Pass {\n            Name \"FORWARD\"\n            Tags {\n                \"LightMode\"=\"ForwardBase\"\n            }\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n\n\t\t\tuniform float3 _MainCol;\n\t\t\tuniform float _SpecularPow;\n            struct VertexInput {\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;//获取法线信息\n            };\n            struct VertexOutput {\n                float4 posCS : SV_POSITION;\n\t\t\t\tfloat3 posWS : TEXCOORD0;\n\t\t\t\tfloat3 nDirWS : TEXCOORD1;\n\t\t\t\t\n            };\n            VertexOutput vert (VertexInput v) {\n                VertexOutput o = (VertexOutput)0;\n                o.posCS = UnityObjectToClipPos( v.vertex );//转换到裁剪空间\n\t\t\t\to.posWS = mul(unity_ObjectToWorld,v.vertex);//世界空间\n\t\t\t\to.nDirWS = UnityObjectToWorldNormal(v.normal);//由模型法线信息换算的世界空间法线信息\n\n                return o;\n            }\n            float4 frag(VertexOutput i) : COLOR {\n////// Lighting:\n////// Emissive:\n\t\t\t\t//准备向量 \n\t\t\t\tfloat3 nDir = i.nDirWS;\n\t\t\t\tfloat3 lDir = normalize(_WorldSpaceLightPos0.xyz);//Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\tfloat3 vDir = normalize(_WorldSpaceCameraPos.xyz-i.posWS);\n\t\t\t\tfloat3 hDir = normalize(vDir+lDir);\n\t\t\t\tfloat3 rDir = reflect(-lDir,nDir);\n\n\t\t\t\t//中间值\n\t\t\t\t\n\t\t\t\tfloat nDotl = dot(nDir, lDir );//点乘\n\t\t\t\tfloat nDoth = dot(nDir,hDir);//Blinn-Phong\n\t\t\t\tfloat rDotv= dot(rDir,vDir);//Phong\n\n\t\t\t\t//光照模型\n\t\t\t\tfloat lambert = max(0.0, nDotl);//把负数部分取0\n\t\t\t\tfloat blinnPhong = pow(max(0.0,nDoth),_SpecularPow);\n\t\t\t\tfloat phong = pow(max(0.0,rDotv),_SpecularPow);\n\t\t\t\tfloat3 finalBP = _MainCol * lambert + blinnPhong;\n\t\t\t\tfloat3 finalP = _MainCol * lambert + phong;\n\n                return float4(finalBP,1.0);//注意代码规范，转化为float4 rgba\n            }\n            ENDCG\n        }\n    }\n    FallBack \"Diffuse\"\n}\n```\n\n</details>\n\n\n### 使用贴图来给物体不同部分不同光滑度\n如果想使物体的不同部分看起来有不同的光滑度/粗糙度，可以用一个贴图来作为Lerp的蒙版，然后设置两种SpecularPower\n\n![image-20210817154859550](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817154859550.png)\n\n为了增强这种效果，可以对高光Power后再和贴图的一个通道做一次乘法，即可产生不均匀的高光。\n\n![image-20210817155011644](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155011644.png)\n\n**样例1：每颗葡萄的高光范围不同**\n\n![image-20210817155050682](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155050682.png)\n\n**样例2：铁上有脱落的漆皮（漆皮的光滑程度更高）**\n\n同样直接用step处理后的贴图对两种specularPower做插值得到高光，然后用同样的贴图对两种颜色做插值，和漫反射结果相乘后加上高光即可。\n\n![image-20210817160509757](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817160509757.png)\n\n\n# 代码规范\n\n## 参数格式\n\n![image-20210816235743704](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816235743704.png)\n\n# 情报\n\n## BRDF双向反射分布函数\n\n> 通俗理解：\n>\n> 想象你有一个不透明的桌面，一个激光发射器。你先让激光向下垂直地射在那个桌面上，这样你就可以在桌面上看到一个亮点，接着你从各个不同的方向来观察那个亮点，你会发现亮点的亮度随着观察方向的不同而发生了改变。然后你站着不动，改变激光发射方向和桌面的夹角，你又会发现亮点的亮度发生了改变。这就是说，一个表面对不同的光线入射角和反射角的组合，拥有不同的反射率。BRDF就是用来对这种反射性质进行定义的。\n\n![image-20210817161630691](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161630691.png)\n\n其他的BRDF效果：可用BRDF Explorer查看其他模型\n\n![image-20210817161932407](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161932407.png)\n\n","source":"_posts/2021-08-16-庄懂的技术美术入门课学习笔记（二）.md","raw":"---\ntitle: 2021-08-16-庄懂的技术美术入门课学习笔记（二）\ndate: 2021-08-16 22:14:03\nkatex: true\ntags:\n  - 反射\n  - Phong\n  -\tBlinn-Phong\n  - 参数\n  - BRDF\ncategories:\n  - 庄懂的技术美术入门课学习笔记\n---\n\n> 对应课程4~6课内容\n\n# 常用向量\n\n\n\n![image-20210816222259466](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222259466.png)\n\n# 反射\n\n## 漫反射Diffuse\n\n![image-20210816222732514](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222732514.png)\n\n## 镜面反射Specular\n\n![image-20210816222904721](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222904721.png)\n\n### Phong\n\n> 公式：r dot v（反射方向点乘观察方向）\n\n#### ShaderForge实现\n\n1. 先对l取反方向，然后求以N为对称的向量得到反射方向，然后再和观察方向点乘。记得要把负值变成0。\n\n   1.5 这一步等效于ViewReflect点乘光照方向$rDir=Reflect(-lDir,nDir)$\n   \n2. 用power结点得到高光。\n\n> tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。\n>\n> 注意前面lDir要乘-1！\n\n![image-20210816234350760](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816234350760.png)\n\n### Blinn-Phong\n\n> Blinn-Phong的计算消耗少一些，但效果没有Phong真实，二者的高光范围有差别。\n>\n> 公式：n dot h （法线方向点乘半角方向）\n>\n> 半角：视角方向和观察方向的中间角\n\n#### ShaderForge实现\n\nn和h点乘后和0取max，然后再用power结点得到高光。\n\n![image-20210816233430097](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816233430097.png)\n\n\n\n\n\n\n\n# 应用\n\n用Phong获得高光部分，然后和漫反射的结果add一下，得到一种常用的光照模型。\n\n代码如下：\n\n### Lambert+Blinn-Phong/Phong\n\n> 获得世界空间坐标：\n>\n> ```c#\n> o.posWS = mul(unity_ObjectToWorld,v.vertex);\n> ```\n>\n> 求观察向量：\n>\n> ```c#\n> float3 vDir = normalize(_WorldSpaceCameraPos.xyz-i.posWS)\n> ```\n>\n> 求两个向量a、b的中间角：\n> $$ normalize(\\vec{a}+\\vec{b}) $$\n\n\n\n<details>\n\t<summary>OldSchoolShader.shader(相当于Lambert+Blinn-Phong)</summary>\n\n\n\n```c#\nShader \"Class2/OldSchoolShader\" {\n    Properties {\n\t\t_MainCol(\"颜色\",color)=(1.0,1.0,1.0,1.0)\n\t\t_SpecularPow(\"高光次幂\",range(1,90))=30\n    }\n    SubShader {\n        Tags {\n            \"RenderType\"=\"Opaque\"\n        }\n        LOD 100\n        Pass {\n            Name \"FORWARD\"\n            Tags {\n                \"LightMode\"=\"ForwardBase\"\n            }\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include \"UnityCG.cginc\"\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n\n\t\t\tuniform float3 _MainCol;\n\t\t\tuniform float _SpecularPow;\n            struct VertexInput {\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;//获取法线信息\n            };\n            struct VertexOutput {\n                float4 posCS : SV_POSITION;\n\t\t\t\tfloat3 posWS : TEXCOORD0;\n\t\t\t\tfloat3 nDirWS : TEXCOORD1;\n\t\t\t\t\n            };\n            VertexOutput vert (VertexInput v) {\n                VertexOutput o = (VertexOutput)0;\n                o.posCS = UnityObjectToClipPos( v.vertex );//转换到裁剪空间\n\t\t\t\to.posWS = mul(unity_ObjectToWorld,v.vertex);//世界空间\n\t\t\t\to.nDirWS = UnityObjectToWorldNormal(v.normal);//由模型法线信息换算的世界空间法线信息\n\n                return o;\n            }\n            float4 frag(VertexOutput i) : COLOR {\n////// Lighting:\n////// Emissive:\n\t\t\t\t//准备向量 \n\t\t\t\tfloat3 nDir = i.nDirWS;\n\t\t\t\tfloat3 lDir = normalize(_WorldSpaceLightPos0.xyz);//Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\tfloat3 vDir = normalize(_WorldSpaceCameraPos.xyz-i.posWS);\n\t\t\t\tfloat3 hDir = normalize(vDir+lDir);\n\t\t\t\tfloat3 rDir = reflect(-lDir,nDir);\n\n\t\t\t\t//中间值\n\t\t\t\t\n\t\t\t\tfloat nDotl = dot(nDir, lDir );//点乘\n\t\t\t\tfloat nDoth = dot(nDir,hDir);//Blinn-Phong\n\t\t\t\tfloat rDotv= dot(rDir,vDir);//Phong\n\n\t\t\t\t//光照模型\n\t\t\t\tfloat lambert = max(0.0, nDotl);//把负数部分取0\n\t\t\t\tfloat blinnPhong = pow(max(0.0,nDoth),_SpecularPow);\n\t\t\t\tfloat phong = pow(max(0.0,rDotv),_SpecularPow);\n\t\t\t\tfloat3 finalBP = _MainCol * lambert + blinnPhong;\n\t\t\t\tfloat3 finalP = _MainCol * lambert + phong;\n\n                return float4(finalBP,1.0);//注意代码规范，转化为float4 rgba\n            }\n            ENDCG\n        }\n    }\n    FallBack \"Diffuse\"\n}\n```\n\n</details>\n\n\n### 使用贴图来给物体不同部分不同光滑度\n如果想使物体的不同部分看起来有不同的光滑度/粗糙度，可以用一个贴图来作为Lerp的蒙版，然后设置两种SpecularPower\n\n![image-20210817154859550](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817154859550.png)\n\n为了增强这种效果，可以对高光Power后再和贴图的一个通道做一次乘法，即可产生不均匀的高光。\n\n![image-20210817155011644](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155011644.png)\n\n**样例1：每颗葡萄的高光范围不同**\n\n![image-20210817155050682](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155050682.png)\n\n**样例2：铁上有脱落的漆皮（漆皮的光滑程度更高）**\n\n同样直接用step处理后的贴图对两种specularPower做插值得到高光，然后用同样的贴图对两种颜色做插值，和漫反射结果相乘后加上高光即可。\n\n![image-20210817160509757](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817160509757.png)\n\n\n# 代码规范\n\n## 参数格式\n\n![image-20210816235743704](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816235743704.png)\n\n# 情报\n\n## BRDF双向反射分布函数\n\n> 通俗理解：\n>\n> 想象你有一个不透明的桌面，一个激光发射器。你先让激光向下垂直地射在那个桌面上，这样你就可以在桌面上看到一个亮点，接着你从各个不同的方向来观察那个亮点，你会发现亮点的亮度随着观察方向的不同而发生了改变。然后你站着不动，改变激光发射方向和桌面的夹角，你又会发现亮点的亮度发生了改变。这就是说，一个表面对不同的光线入射角和反射角的组合，拥有不同的反射率。BRDF就是用来对这种反射性质进行定义的。\n\n![image-20210817161630691](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161630691.png)\n\n其他的BRDF效果：可用BRDF Explorer查看其他模型\n\n![image-20210817161932407](D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161932407.png)\n\n","slug":"2021-08-16-庄懂的技术美术入门课学习笔记（二）","published":1,"updated":"2021-08-17T08:23:20.595Z","_id":"cksfjj6vg0001fovofzm76bpq","comments":1,"layout":"post","photos":[],"link":"","content":"<blockquote>\n<p>对应课程4~6课内容</p>\n</blockquote>\n<h1 id=\"常用向量\"><a href=\"#常用向量\" class=\"headerlink\" title=\"常用向量\"></a>常用向量</h1><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222259466.png\" alt=\"image-20210816222259466\" loading=\"lazy\"></p>\n<h1 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h1><h2 id=\"漫反射Diffuse\"><a href=\"#漫反射Diffuse\" class=\"headerlink\" title=\"漫反射Diffuse\"></a>漫反射Diffuse</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222732514.png\" alt=\"image-20210816222732514\" loading=\"lazy\"></p>\n<h2 id=\"镜面反射Specular\"><a href=\"#镜面反射Specular\" class=\"headerlink\" title=\"镜面反射Specular\"></a>镜面反射Specular</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222904721.png\" alt=\"image-20210816222904721\" loading=\"lazy\"></p>\n<h3 id=\"Phong\"><a href=\"#Phong\" class=\"headerlink\" title=\"Phong\"></a>Phong</h3><blockquote>\n<p>公式：r dot v（反射方向点乘观察方向）</p>\n</blockquote>\n<h4 id=\"ShaderForge实现\"><a href=\"#ShaderForge实现\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h4><ol>\n<li><p>先对l取反方向，然后求以N为对称的向量得到反射方向，然后再和观察方向点乘。记得要把负值变成0。</p>\n<p>1.5 这一步等效于ViewReflect点乘光照方向$rDir=Reflect(-lDir,nDir)$</p>\n</li>\n<li><p>用power结点得到高光。</p>\n</li>\n</ol>\n<blockquote>\n<p>tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。</p>\n<p>注意前面lDir要乘-1！</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816234350760.png\" alt=\"image-20210816234350760\" loading=\"lazy\"></p>\n<h3 id=\"Blinn-Phong\"><a href=\"#Blinn-Phong\" class=\"headerlink\" title=\"Blinn-Phong\"></a>Blinn-Phong</h3><blockquote>\n<p>Blinn-Phong的计算消耗少一些，但效果没有Phong真实，二者的高光范围有差别。</p>\n<p>公式：n dot h （法线方向点乘半角方向）</p>\n<p>半角：视角方向和观察方向的中间角</p>\n</blockquote>\n<h4 id=\"ShaderForge实现-1\"><a href=\"#ShaderForge实现-1\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h4><p>n和h点乘后和0取max，然后再用power结点得到高光。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816233430097.png\" alt=\"image-20210816233430097\" loading=\"lazy\"></p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><p>用Phong获得高光部分，然后和漫反射的结果add一下，得到一种常用的光照模型。</p>\n<p>代码如下：</p>\n<h3 id=\"Lambert-Blinn-Phong-Phong\"><a href=\"#Lambert-Blinn-Phong-Phong\" class=\"headerlink\" title=\"Lambert+Blinn-Phong/Phong\"></a>Lambert+Blinn-Phong/Phong</h3><blockquote>\n<p>获得世界空间坐标：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">o.posWS &#x3D; mul(unity_ObjectToWorld,v.vertex);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>求观察向量：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">float3 vDir &#x3D; normalize(_WorldSpaceCameraPos.xyz-i.posWS)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>求两个向量a、b的中间角：<br>$$ normalize(\\vec{a}+\\vec{b}) $$</p>\n</blockquote>\n<details>\n    <summary>OldSchoolShader.shader(相当于Lambert+Blinn-Phong)</summary>\n\n\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Shader &quot;Class2&#x2F;OldSchoolShader&quot; &#123;\n    Properties &#123;\n\t\t_MainCol(&quot;颜色&quot;,color)&#x3D;(1.0,1.0,1.0,1.0)\n\t\t_SpecularPow(&quot;高光次幂&quot;,range(1,90))&#x3D;30\n    &#125;\n    SubShader &#123;\n        Tags &#123;\n            &quot;RenderType&quot;&#x3D;&quot;Opaque&quot;\n        &#125;\n        LOD 100\n        Pass &#123;\n            Name &quot;FORWARD&quot;\n            Tags &#123;\n                &quot;LightMode&quot;&#x3D;&quot;ForwardBase&quot;\n            &#125;\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include &quot;UnityCG.cginc&quot;\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n\n\t\t\tuniform float3 _MainCol;\n\t\t\tuniform float _SpecularPow;\n            struct VertexInput &#123;\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;&#x2F;&#x2F;获取法线信息\n            &#125;;\n            struct VertexOutput &#123;\n                float4 posCS : SV_POSITION;\n\t\t\t\tfloat3 posWS : TEXCOORD0;\n\t\t\t\tfloat3 nDirWS : TEXCOORD1;\n\t\t\t\t\n            &#125;;\n            VertexOutput vert (VertexInput v) &#123;\n                VertexOutput o &#x3D; (VertexOutput)0;\n                o.posCS &#x3D; UnityObjectToClipPos( v.vertex );&#x2F;&#x2F;转换到裁剪空间\n\t\t\t\to.posWS &#x3D; mul(unity_ObjectToWorld,v.vertex);&#x2F;&#x2F;世界空间\n\t\t\t\to.nDirWS &#x3D; UnityObjectToWorldNormal(v.normal);&#x2F;&#x2F;由模型法线信息换算的世界空间法线信息\n\n                return o;\n            &#125;\n            float4 frag(VertexOutput i) : COLOR &#123;\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Lighting:\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Emissive:\n\t\t\t\t&#x2F;&#x2F;准备向量 \n\t\t\t\tfloat3 nDir &#x3D; i.nDirWS;\n\t\t\t\tfloat3 lDir &#x3D; normalize(_WorldSpaceLightPos0.xyz);&#x2F;&#x2F;Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\tfloat3 vDir &#x3D; normalize(_WorldSpaceCameraPos.xyz-i.posWS);\n\t\t\t\tfloat3 hDir &#x3D; normalize(vDir+lDir);\n\t\t\t\tfloat3 rDir &#x3D; reflect(-lDir,nDir);\n\n\t\t\t\t&#x2F;&#x2F;中间值\n\t\t\t\t\n\t\t\t\tfloat nDotl &#x3D; dot(nDir, lDir );&#x2F;&#x2F;点乘\n\t\t\t\tfloat nDoth &#x3D; dot(nDir,hDir);&#x2F;&#x2F;Blinn-Phong\n\t\t\t\tfloat rDotv&#x3D; dot(rDir,vDir);&#x2F;&#x2F;Phong\n\n\t\t\t\t&#x2F;&#x2F;光照模型\n\t\t\t\tfloat lambert &#x3D; max(0.0, nDotl);&#x2F;&#x2F;把负数部分取0\n\t\t\t\tfloat blinnPhong &#x3D; pow(max(0.0,nDoth),_SpecularPow);\n\t\t\t\tfloat phong &#x3D; pow(max(0.0,rDotv),_SpecularPow);\n\t\t\t\tfloat3 finalBP &#x3D; _MainCol * lambert + blinnPhong;\n\t\t\t\tfloat3 finalP &#x3D; _MainCol * lambert + phong;\n\n                return float4(finalBP,1.0);&#x2F;&#x2F;注意代码规范，转化为float4 rgba\n            &#125;\n            ENDCG\n        &#125;\n    &#125;\n    FallBack &quot;Diffuse&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n\n<h3 id=\"使用贴图来给物体不同部分不同光滑度\"><a href=\"#使用贴图来给物体不同部分不同光滑度\" class=\"headerlink\" title=\"使用贴图来给物体不同部分不同光滑度\"></a>使用贴图来给物体不同部分不同光滑度</h3><p>如果想使物体的不同部分看起来有不同的光滑度/粗糙度，可以用一个贴图来作为Lerp的蒙版，然后设置两种SpecularPower</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817154859550.png\" alt=\"image-20210817154859550\" loading=\"lazy\"></p>\n<p>为了增强这种效果，可以对高光Power后再和贴图的一个通道做一次乘法，即可产生不均匀的高光。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155011644.png\" alt=\"image-20210817155011644\" loading=\"lazy\"></p>\n<p><strong>样例1：每颗葡萄的高光范围不同</strong></p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155050682.png\" alt=\"image-20210817155050682\" loading=\"lazy\"></p>\n<p><strong>样例2：铁上有脱落的漆皮（漆皮的光滑程度更高）</strong></p>\n<p>同样直接用step处理后的贴图对两种specularPower做插值得到高光，然后用同样的贴图对两种颜色做插值，和漫反射结果相乘后加上高光即可。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817160509757.png\" alt=\"image-20210817160509757\" loading=\"lazy\"></p>\n<h1 id=\"代码规范\"><a href=\"#代码规范\" class=\"headerlink\" title=\"代码规范\"></a>代码规范</h1><h2 id=\"参数格式\"><a href=\"#参数格式\" class=\"headerlink\" title=\"参数格式\"></a>参数格式</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816235743704.png\" alt=\"image-20210816235743704\" loading=\"lazy\"></p>\n<h1 id=\"情报\"><a href=\"#情报\" class=\"headerlink\" title=\"情报\"></a>情报</h1><h2 id=\"BRDF双向反射分布函数\"><a href=\"#BRDF双向反射分布函数\" class=\"headerlink\" title=\"BRDF双向反射分布函数\"></a>BRDF双向反射分布函数</h2><blockquote>\n<p>通俗理解：</p>\n<p>想象你有一个不透明的桌面，一个激光发射器。你先让激光向下垂直地射在那个桌面上，这样你就可以在桌面上看到一个亮点，接着你从各个不同的方向来观察那个亮点，你会发现亮点的亮度随着观察方向的不同而发生了改变。然后你站着不动，改变激光发射方向和桌面的夹角，你又会发现亮点的亮度发生了改变。这就是说，一个表面对不同的光线入射角和反射角的组合，拥有不同的反射率。BRDF就是用来对这种反射性质进行定义的。</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161630691.png\" alt=\"image-20210817161630691\" loading=\"lazy\"></p>\n<p>其他的BRDF效果：可用BRDF Explorer查看其他模型</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161932407.png\" alt=\"image-20210817161932407\" loading=\"lazy\"></p>\n","site":{"data":{"style/banner":"","yun":{"banner":{"enable":true,"src":"/js/ui/banner.js","border":false,"cloud":{"enable":true,"color":"white"},"go_down":{"enable":true,"icon":"icon-arrow-down-s-line"},"title":["HQZ","BLOG"]},"mode":"light","notice":{"enable":false,"content":"Thanks for playing my game."},"menu":{"home":{"path":"/","icon":"icon-home-4-line"},"list":[{"type":"archives","path":"/archives/","icon":"icon-archive-line"},{"type":"categories","path":"/categories/","icon":"icon-folder-2-line"},{"type":"tags","path":"/tags/","icon":"icon-price-tag-3-line"}],"custom":{"title":"相册","path":"/albums/","icon":"icon-gallery-line"}},"trianglify":{"enable":true,"cellSize":100,"width":800,"height":600,"palette":"[\"Purples\", \"Blues\"]","opacity":0.7},"avatar":{"enable":true,"url":"https://z3.ax1x.com/2021/07/26/Wf95DA.jpg","rounded":true,"opacity":1,"mickey_mouse":false,"status":{"enable":true,"emoji":"😭","message":"不想上学"}},"bg_image":{"enable":true,"opacity":0.8},"post_card":{"opacity":0.9},"sidebar":{"bg_image":null,"tagcloud":{"enable":false,"amount":20}},"social":[{"name":"GitHub","link":"https://github.com/HQiuzi","icon":"icon-github-line","color":"#6e5494"},{"name":"E-Mail","link":"hqz_1013@163.com","icon":"icon-mail-line","color":"#8E71C1"}],"pages":null,"say":{"enable":false},"codeblock":{"copy_btn":true,"prismjs":{"light":"default","dark":"tomorrow"}},"reward":{"enable":false},"custom":{"style":"source/_data/style/*"},"albums":{"enable":true},"wordcloud":{"enable":false}},"style/sidebar":".site-state-item-icon .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n.sidebar .links-of-author .icon {\n  width: 1.3rem;\n  height: 1.3rem;\n}\n"}},"excerpt":"","more":"<blockquote>\n<p>对应课程4~6课内容</p>\n</blockquote>\n<h1 id=\"常用向量\"><a href=\"#常用向量\" class=\"headerlink\" title=\"常用向量\"></a>常用向量</h1><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222259466.png\" alt=\"image-20210816222259466\"></p>\n<h1 id=\"反射\"><a href=\"#反射\" class=\"headerlink\" title=\"反射\"></a>反射</h1><h2 id=\"漫反射Diffuse\"><a href=\"#漫反射Diffuse\" class=\"headerlink\" title=\"漫反射Diffuse\"></a>漫反射Diffuse</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222732514.png\" alt=\"image-20210816222732514\"></p>\n<h2 id=\"镜面反射Specular\"><a href=\"#镜面反射Specular\" class=\"headerlink\" title=\"镜面反射Specular\"></a>镜面反射Specular</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816222904721.png\" alt=\"image-20210816222904721\"></p>\n<h3 id=\"Phong\"><a href=\"#Phong\" class=\"headerlink\" title=\"Phong\"></a>Phong</h3><blockquote>\n<p>公式：r dot v（反射方向点乘观察方向）</p>\n</blockquote>\n<h4 id=\"ShaderForge实现\"><a href=\"#ShaderForge实现\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h4><ol>\n<li><p>先对l取反方向，然后求以N为对称的向量得到反射方向，然后再和观察方向点乘。记得要把负值变成0。</p>\n<p>1.5 这一步等效于ViewReflect点乘光照方向$rDir=Reflect(-lDir,nDir)$</p>\n</li>\n<li><p>用power结点得到高光。</p>\n</li>\n</ol>\n<blockquote>\n<p>tips: 两个rgb相乘就相当于正片叠底，power的指数相当于正片叠底的层数。power一般叫高光次幂。</p>\n<p>注意前面lDir要乘-1！</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816234350760.png\" alt=\"image-20210816234350760\"></p>\n<h3 id=\"Blinn-Phong\"><a href=\"#Blinn-Phong\" class=\"headerlink\" title=\"Blinn-Phong\"></a>Blinn-Phong</h3><blockquote>\n<p>Blinn-Phong的计算消耗少一些，但效果没有Phong真实，二者的高光范围有差别。</p>\n<p>公式：n dot h （法线方向点乘半角方向）</p>\n<p>半角：视角方向和观察方向的中间角</p>\n</blockquote>\n<h4 id=\"ShaderForge实现-1\"><a href=\"#ShaderForge实现-1\" class=\"headerlink\" title=\"ShaderForge实现\"></a>ShaderForge实现</h4><p>n和h点乘后和0取max，然后再用power结点得到高光。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816233430097.png\" alt=\"image-20210816233430097\"></p>\n<h1 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h1><p>用Phong获得高光部分，然后和漫反射的结果add一下，得到一种常用的光照模型。</p>\n<p>代码如下：</p>\n<h3 id=\"Lambert-Blinn-Phong-Phong\"><a href=\"#Lambert-Blinn-Phong-Phong\" class=\"headerlink\" title=\"Lambert+Blinn-Phong/Phong\"></a>Lambert+Blinn-Phong/Phong</h3><blockquote>\n<p>获得世界空间坐标：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">o.posWS &#x3D; mul(unity_ObjectToWorld,v.vertex);<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>求观察向量：</p>\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">float3 vDir &#x3D; normalize(_WorldSpaceCameraPos.xyz-i.posWS)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>求两个向量a、b的中间角：<br>$$ normalize(\\vec{a}+\\vec{b}) $$</p>\n</blockquote>\n<details>\n    <summary>OldSchoolShader.shader(相当于Lambert+Blinn-Phong)</summary>\n\n\n\n<pre class=\"line-numbers language-c#\" data-language=\"c#\"><code class=\"language-c#\">Shader &quot;Class2&#x2F;OldSchoolShader&quot; &#123;\n    Properties &#123;\n\t\t_MainCol(&quot;颜色&quot;,color)&#x3D;(1.0,1.0,1.0,1.0)\n\t\t_SpecularPow(&quot;高光次幂&quot;,range(1,90))&#x3D;30\n    &#125;\n    SubShader &#123;\n        Tags &#123;\n            &quot;RenderType&quot;&#x3D;&quot;Opaque&quot;\n        &#125;\n        LOD 100\n        Pass &#123;\n            Name &quot;FORWARD&quot;\n            Tags &#123;\n                &quot;LightMode&quot;&#x3D;&quot;ForwardBase&quot;\n            &#125;\n            \n            \n            CGPROGRAM\n            #pragma vertex vert\n            #pragma fragment frag\n            #include &quot;UnityCG.cginc&quot;\n            #pragma multi_compile_fwdbase_fullshadows\n            #pragma multi_compile_fog\n            #pragma target 3.0\n\n\t\t\tuniform float3 _MainCol;\n\t\t\tuniform float _SpecularPow;\n            struct VertexInput &#123;\n                float4 vertex : POSITION;\n\t\t\t\tfloat3 normal : NORMAL;&#x2F;&#x2F;获取法线信息\n            &#125;;\n            struct VertexOutput &#123;\n                float4 posCS : SV_POSITION;\n\t\t\t\tfloat3 posWS : TEXCOORD0;\n\t\t\t\tfloat3 nDirWS : TEXCOORD1;\n\t\t\t\t\n            &#125;;\n            VertexOutput vert (VertexInput v) &#123;\n                VertexOutput o &#x3D; (VertexOutput)0;\n                o.posCS &#x3D; UnityObjectToClipPos( v.vertex );&#x2F;&#x2F;转换到裁剪空间\n\t\t\t\to.posWS &#x3D; mul(unity_ObjectToWorld,v.vertex);&#x2F;&#x2F;世界空间\n\t\t\t\to.nDirWS &#x3D; UnityObjectToWorldNormal(v.normal);&#x2F;&#x2F;由模型法线信息换算的世界空间法线信息\n\n                return o;\n            &#125;\n            float4 frag(VertexOutput i) : COLOR &#123;\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Lighting:\n&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;&#x2F; Emissive:\n\t\t\t\t&#x2F;&#x2F;准备向量 \n\t\t\t\tfloat3 nDir &#x3D; i.nDirWS;\n\t\t\t\tfloat3 lDir &#x3D; normalize(_WorldSpaceLightPos0.xyz);&#x2F;&#x2F;Pos0是平行光，xyz代表方向坐标，这里最好做一下正则化\n\t\t\t\tfloat3 vDir &#x3D; normalize(_WorldSpaceCameraPos.xyz-i.posWS);\n\t\t\t\tfloat3 hDir &#x3D; normalize(vDir+lDir);\n\t\t\t\tfloat3 rDir &#x3D; reflect(-lDir,nDir);\n\n\t\t\t\t&#x2F;&#x2F;中间值\n\t\t\t\t\n\t\t\t\tfloat nDotl &#x3D; dot(nDir, lDir );&#x2F;&#x2F;点乘\n\t\t\t\tfloat nDoth &#x3D; dot(nDir,hDir);&#x2F;&#x2F;Blinn-Phong\n\t\t\t\tfloat rDotv&#x3D; dot(rDir,vDir);&#x2F;&#x2F;Phong\n\n\t\t\t\t&#x2F;&#x2F;光照模型\n\t\t\t\tfloat lambert &#x3D; max(0.0, nDotl);&#x2F;&#x2F;把负数部分取0\n\t\t\t\tfloat blinnPhong &#x3D; pow(max(0.0,nDoth),_SpecularPow);\n\t\t\t\tfloat phong &#x3D; pow(max(0.0,rDotv),_SpecularPow);\n\t\t\t\tfloat3 finalBP &#x3D; _MainCol * lambert + blinnPhong;\n\t\t\t\tfloat3 finalP &#x3D; _MainCol * lambert + phong;\n\n                return float4(finalBP,1.0);&#x2F;&#x2F;注意代码规范，转化为float4 rgba\n            &#125;\n            ENDCG\n        &#125;\n    &#125;\n    FallBack &quot;Diffuse&quot;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n</details>\n\n\n<h3 id=\"使用贴图来给物体不同部分不同光滑度\"><a href=\"#使用贴图来给物体不同部分不同光滑度\" class=\"headerlink\" title=\"使用贴图来给物体不同部分不同光滑度\"></a>使用贴图来给物体不同部分不同光滑度</h3><p>如果想使物体的不同部分看起来有不同的光滑度/粗糙度，可以用一个贴图来作为Lerp的蒙版，然后设置两种SpecularPower</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817154859550.png\" alt=\"image-20210817154859550\"></p>\n<p>为了增强这种效果，可以对高光Power后再和贴图的一个通道做一次乘法，即可产生不均匀的高光。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155011644.png\" alt=\"image-20210817155011644\"></p>\n<p><strong>样例1：每颗葡萄的高光范围不同</strong></p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817155050682.png\" alt=\"image-20210817155050682\"></p>\n<p><strong>样例2：铁上有脱落的漆皮（漆皮的光滑程度更高）</strong></p>\n<p>同样直接用step处理后的贴图对两种specularPower做插值得到高光，然后用同样的贴图对两种颜色做插值，和漫反射结果相乘后加上高光即可。</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817160509757.png\" alt=\"image-20210817160509757\"></p>\n<h1 id=\"代码规范\"><a href=\"#代码规范\" class=\"headerlink\" title=\"代码规范\"></a>代码规范</h1><h2 id=\"参数格式\"><a href=\"#参数格式\" class=\"headerlink\" title=\"参数格式\"></a>参数格式</h2><p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210816235743704.png\" alt=\"image-20210816235743704\"></p>\n<h1 id=\"情报\"><a href=\"#情报\" class=\"headerlink\" title=\"情报\"></a>情报</h1><h2 id=\"BRDF双向反射分布函数\"><a href=\"#BRDF双向反射分布函数\" class=\"headerlink\" title=\"BRDF双向反射分布函数\"></a>BRDF双向反射分布函数</h2><blockquote>\n<p>通俗理解：</p>\n<p>想象你有一个不透明的桌面，一个激光发射器。你先让激光向下垂直地射在那个桌面上，这样你就可以在桌面上看到一个亮点，接着你从各个不同的方向来观察那个亮点，你会发现亮点的亮度随着观察方向的不同而发生了改变。然后你站着不动，改变激光发射方向和桌面的夹角，你又会发现亮点的亮度发生了改变。这就是说，一个表面对不同的光线入射角和反射角的组合，拥有不同的反射率。BRDF就是用来对这种反射性质进行定义的。</p>\n</blockquote>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161630691.png\" alt=\"image-20210817161630691\"></p>\n<p>其他的BRDF效果：可用BRDF Explorer查看其他模型</p>\n<p><img src=\"D:\\Blog\\blog\\images\\2021-08-16-庄懂的技术美术入门课学习笔记（二）\\image-20210817161932407.png\" alt=\"image-20210817161932407\"></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cks336npy00061svo0zsu3d4o","category_id":"cks336nq200081svo8sczargc","_id":"cks336nq8000h1svo7hxx1qw2"},{"post_id":"cks336nq5000c1svo1z357une","category_id":"cks336nq200081svo8sczargc","_id":"cks336nq9000k1svo6fvkdmsf"},{"post_id":"cks336nq100071svo9ztjbu6t","category_id":"cks336nq6000d1svo5d3t6y19","_id":"cks336nq9000l1svoc0zyciuo"},{"post_id":"cks336nq4000a1svof9sg9kpi","category_id":"cks336nq9000i1svo7x608unw","_id":"cks336nqa000o1svoawjbbxyb"},{"post_id":"cks336nq5000b1svofekxh3u3","category_id":"cks336nq9000m1svo8ex5edqn","_id":"cks336nqd000r1svohkq556n6"},{"post_id":"cks336nq6000f1svogpecb021","category_id":"cks336nq9000i1svo7x608unw","_id":"cks336nqd000u1svo01a95g4o"},{"post_id":"cksd78u850000awvocww7eni2","category_id":"cks336nq200081svo8sczargc","_id":"cksd78u8d0001awvo3codf1m8"},{"post_id":"cksd78u8e0002awvo885zhthq","category_id":"cks336nq9000m1svo8ex5edqn","_id":"cksd78u8k0006awvo7q1xbbz1"},{"post_id":"cksd78u8f0003awvo16o0e70a","category_id":"cksd78u8j0005awvog0oeh6r8","_id":"cksd78u8k0008awvobowbbs01"},{"post_id":"cksfjj6vg0001fovofzm76bpq","category_id":"cksd78u8j0005awvog0oeh6r8","_id":"cksfjj6vi0004fovo23rx83rh"}],"PostTag":[{"post_id":"cks336npy00061svo0zsu3d4o","tag_id":"cks336nq300091svo90qkbyju","_id":"cks336nqd000t1svo3myw7hu9"},{"post_id":"cks336npy00061svo0zsu3d4o","tag_id":"cks336nq6000e1svohfcc3bib","_id":"cks336nqd000v1svo3j785z35"},{"post_id":"cks336npy00061svo0zsu3d4o","tag_id":"cks336nq9000j1svo0m8tdo7s","_id":"cks336nqe000x1svo4xkbfp6d"},{"post_id":"cks336npy00061svo0zsu3d4o","tag_id":"cks336nqa000n1svoguy0en6o","_id":"cks336nqe000y1svohbydd7e5"},{"post_id":"cks336npy00061svo0zsu3d4o","tag_id":"cks336nqa000q1svo8nmbcrli","_id":"cks336nqe00101svoemdqdf94"},{"post_id":"cks336nq4000a1svof9sg9kpi","tag_id":"cks336nqd000s1svoa67ph8dx","_id":"cks336nqe00111svo34i5cuw0"},{"post_id":"cks336nq5000b1svofekxh3u3","tag_id":"cks336nqd000w1svo2a347fn3","_id":"cks336nqe00131svo9mvb4g4c"},{"post_id":"cks336nq5000b1svofekxh3u3","tag_id":"cks336nqe000z1svo5yhjbw0i","_id":"cks336nqf00141svo9y5bbab5"},{"post_id":"cks336nq5000c1svo1z357une","tag_id":"cks336nqa000q1svo8nmbcrli","_id":"cks336nqg001b1svog7jl7c8x"},{"post_id":"cks336nq5000c1svo1z357une","tag_id":"cks336nqf00151svo04nleg4r","_id":"cks336nqg001c1svobk4e9scn"},{"post_id":"cks336nq5000c1svo1z357une","tag_id":"cks336nqf00161svo7j1aev9g","_id":"cks336nqh001d1svo9k5x7l8r"},{"post_id":"cks336nq5000c1svo1z357une","tag_id":"cks336nqf00171svodjb0gobe","_id":"cks336nqh001e1svoabpp3ydf"},{"post_id":"cks336nq5000c1svo1z357une","tag_id":"cks336nqf00181svoaysbhyad","_id":"cks336nqh001f1svo3t5z34tn"},{"post_id":"cks336nq5000c1svo1z357une","tag_id":"cks336nqg00191svo4ydr0aa0","_id":"cks336nqh001g1svo82ix5air"},{"post_id":"cks336nq6000f1svogpecb021","tag_id":"cks336nqa000q1svo8nmbcrli","_id":"cks336nqh001h1svofc1w3wtt"},{"post_id":"cksd78u8e0002awvo885zhthq","tag_id":"cksd78u8g0004awvobalod431","_id":"cksd78u8k0007awvoa7254ooj"},{"post_id":"cksd78u850000awvocww7eni2","tag_id":"cksfjj6vc0000fovod1jt8b64","_id":"cksfjj6vi0003fovo6a4yb7fm"},{"post_id":"cksd78u8f0003awvo16o0e70a","tag_id":"cksfjj6vh0002fovo2199duv1","_id":"cksfjj6vk000bfovoap7jcw5n"},{"post_id":"cksd78u8f0003awvo16o0e70a","tag_id":"cksfjj6vi0005fovo4xlzgm7z","_id":"cksfjj6vk000cfovoc13a3qxz"},{"post_id":"cksd78u8f0003awvo16o0e70a","tag_id":"cksfjj6vi0006fovo9ow32iz2","_id":"cksfjj6vl000efovod55b0t5i"},{"post_id":"cksd78u8f0003awvo16o0e70a","tag_id":"cksfjj6vj0007fovo9dnd7c99","_id":"cksfjj6vl000ffovo5imxb9qm"},{"post_id":"cksd78u8f0003awvo16o0e70a","tag_id":"cksfjj6vj0008fovo3lkc0rvj","_id":"cksfjj6vl000hfovo7h1kdlhm"},{"post_id":"cksd78u8f0003awvo16o0e70a","tag_id":"cksfjj6vj0009fovoevoa3c1r","_id":"cksfjj6vl000ifovo2276bpoi"},{"post_id":"cksfjj6vg0001fovofzm76bpq","tag_id":"cksfjj6vk000afovo2ve28s30","_id":"cksfjj6vm000kfovocnbg9fys"},{"post_id":"cksfjj6vg0001fovofzm76bpq","tag_id":"cksfjj6vk000dfovo08c7chsk","_id":"cksfjj6vm000lfovobptsh1gb"},{"post_id":"cksfjj6vg0001fovofzm76bpq","tag_id":"cksfjj6vl000gfovohag2dz9f","_id":"cksfjj6vm000mfovobxs58258"},{"post_id":"cksfjj6vg0001fovofzm76bpq","tag_id":"cksfjj6vl000jfovodrwraj66","_id":"cksfjj6vm000nfovo4uj1fgnc"},{"post_id":"cksfjj6vg0001fovofzm76bpq","tag_id":"cksfsttro0000swvob5hv9egc","_id":"cksfsttus0001swvoe878gem7"}],"Tag":[{"name":"Action","_id":"cks336nq300091svo90qkbyju"},{"name":"数值管理","_id":"cks336nq6000e1svohfcc3bib"},{"name":"ScriptObject","_id":"cks336nq9000j1svo0m8tdo7s"},{"name":"UI跟随物体","_id":"cks336nqa000n1svoguy0en6o"},{"name":"Unity","_id":"cks336nqa000q1svo8nmbcrli"},{"name":"hexo","_id":"cks336nqd000s1svoa67ph8dx"},{"name":"3d辅助","_id":"cks336nqd000w1svo2a347fn3"},{"name":"Daz","_id":"cks336nqe000z1svo5yhjbw0i"},{"name":"场景切换","_id":"cks336nqf00151svo04nleg4r"},{"name":"GameManager","_id":"cks336nqf00161svo7j1aev9g"},{"name":"单例模式","_id":"cks336nqf00171svodjb0gobe"},{"name":"UI隐藏","_id":"cks336nqf00181svoaysbhyad"},{"name":"状态切换","_id":"cks336nqg00191svo4ydr0aa0"},{"name":"渐变映射","_id":"cksd78u8g0004awvobalod431"},{"name":"Blender贴图绘制","_id":"cksfjj6vc0000fovod1jt8b64"},{"name":"光照模型","_id":"cksfjj6vh0002fovo2199duv1"},{"name":"Lambert","_id":"cksfjj6vi0005fovo4xlzgm7z"},{"name":"卡通渲染","_id":"cksfjj6vi0006fovo9ow32iz2"},{"name":"半色调Halftone","_id":"cksfjj6vj0007fovo9dnd7c99"},{"name":"3S效果","_id":"cksfjj6vj0008fovo3lkc0rvj"},{"name":"菲涅尔","_id":"cksfjj6vj0009fovoevoa3c1r"},{"name":"反射","_id":"cksfjj6vk000afovo2ve28s30"},{"name":"Phong","_id":"cksfjj6vk000dfovo08c7chsk"},{"name":"Blinn-Phong","_id":"cksfjj6vl000gfovohag2dz9f"},{"name":"参数","_id":"cksfjj6vl000jfovodrwraj66"},{"name":"BRDF","_id":"cksfsttro0000swvob5hv9egc"}]}}